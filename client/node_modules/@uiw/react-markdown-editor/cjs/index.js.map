{
  "version": 3,
  "names": [
    "scrollerStyle",
    "EditorView",
    "theme",
    "borderBottomRightRadius",
    "borderBottomLeftRadius",
    "MarkdownEditor",
    "React",
    "forwardRef",
    "MarkdownEditorInternal",
    "Markdown",
    "MarkdownPreview",
    "props",
    "ref",
    "prefixCls",
    "className",
    "onChange",
    "toolbars",
    "getCommands",
    "toolbarsMode",
    "getModeCommands",
    "visible",
    "renderPreview",
    "visibleEditor",
    "hideToolbar",
    "previewProps",
    "extensions",
    "previewWidth",
    "reExtensions",
    "codemirrorProps",
    "useState",
    "value",
    "setValue",
    "codeMirror",
    "useRef",
    "container",
    "containerEditor",
    "preview",
    "useImperativeHandle",
    "editor",
    "toolBarProps",
    "editorProps",
    "height",
    "extensionsData",
    "markdown",
    "base",
    "markdownLanguage",
    "codeLanguages",
    "languages",
    "clsPreview",
    "cls",
    "filter",
    "Boolean",
    "join",
    "handleChange",
    "viewUpdate",
    "defaultTheme"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import React, { useState, useRef, useImperativeHandle } from 'react';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { languages } from '@codemirror/language-data';\nimport { EditorView, ViewUpdate } from '@codemirror/view';\nimport CodeMirror, { ReactCodeMirrorProps, ReactCodeMirrorRef } from '@uiw/react-codemirror';\nimport MarkdownPreview, { MarkdownPreviewProps } from '@uiw/react-markdown-preview';\nimport ToolBar, { IToolBarProps } from './components/ToolBar';\nimport { getCommands, getModeCommands } from './commands';\nimport { defaultTheme } from './theme';\nimport './index.less';\n\nexport * from './theme';\nexport * from './commands';\nexport * from '@uiw/react-markdown-preview';\n\nexport const scrollerStyle = EditorView.theme({\n  '&.cm-editor, & .cm-scroller': {\n    borderBottomRightRadius: '3px',\n    borderBottomLeftRadius: '3px',\n  },\n});\n\nexport interface IMarkdownEditor extends ReactCodeMirrorProps {\n  className?: string;\n  prefixCls?: string;\n  /** The raw markdown that will be converted to html (**required**) */\n  value?: string;\n  /** Shows a preview that will be converted to html. */\n  visible?: boolean;\n  visibleEditor?: boolean;\n  /** Option to hide the tool bar. */\n  hideToolbar?: boolean;\n  /** Override the default preview component */\n  renderPreview?: (props: MarkdownPreviewProps, initVisible: boolean) => React.ReactNode;\n  /** Preview expanded width @default `50%` */\n  previewWidth?: string;\n  /** Tool display settings. */\n  toolbars?: IToolBarProps['toolbars'];\n  /** Tool display settings. */\n  toolbarsMode?: IToolBarProps['toolbars'];\n  /** [@uiw/react-markdown-preview](https://github.com/uiwjs/react-markdown-preview#options-props) options */\n  previewProps?: MarkdownPreviewProps;\n  /** replace the default `extensions` */\n  reExtensions?: ReactCodeMirrorProps['extensions'];\n}\n\nexport interface ToolBarProps {\n  editor: React.RefObject<ReactCodeMirrorRef>;\n  preview: React.RefObject<HTMLDivElement>;\n  container: React.RefObject<HTMLDivElement>;\n  containerEditor: React.RefObject<HTMLDivElement>;\n  editorProps: IMarkdownEditor;\n}\n\nexport interface MarkdownEditorRef {\n  editor: React.RefObject<ReactCodeMirrorRef>;\n  preview: React.RefObject<HTMLDivElement> | null;\n}\n\nconst MarkdownEditor: MarkdownEditorComponent = React.forwardRef<MarkdownEditorRef, IMarkdownEditor>(\n  MarkdownEditorInternal,\n) as unknown as MarkdownEditorComponent;\ntype MarkdownEditorComponent = React.FC<React.PropsWithRef<IMarkdownEditor>> & {\n  Markdown: typeof MarkdownPreview;\n};\n\nMarkdownEditor.Markdown = MarkdownPreview;\n\nexport default MarkdownEditor;\n\nfunction MarkdownEditorInternal(\n  props: IMarkdownEditor,\n  ref?: ((instance: MarkdownEditorRef) => void) | React.RefObject<MarkdownEditorRef> | null,\n) {\n  const {\n    prefixCls = 'md-editor',\n    className,\n    onChange,\n    toolbars = getCommands(),\n    toolbarsMode = getModeCommands(),\n    visible = true,\n    renderPreview,\n    visibleEditor = true,\n    hideToolbar = true,\n    previewProps = {},\n    extensions = [],\n    previewWidth = '50%',\n    reExtensions,\n    ...codemirrorProps\n  } = props;\n  const [value, setValue] = useState(props.value || '');\n  const codeMirror = useRef<ReactCodeMirrorRef>(null);\n  const container = useRef<HTMLDivElement>(null);\n  const containerEditor = useRef<HTMLDivElement>(null);\n  const preview = useRef<HTMLDivElement>(null);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      editor: codeMirror,\n      preview: preview,\n    }),\n    [codeMirror],\n  );\n\n  const toolBarProps: ToolBarProps = {\n    preview: preview,\n    editor: codeMirror,\n    container: container,\n    containerEditor: containerEditor,\n    editorProps: { ...props, previewWidth },\n  };\n  const height = typeof codemirrorProps.height === 'number' ? `${codemirrorProps.height}px` : codemirrorProps.height;\n  const extensionsData: IMarkdownEditor['extensions'] = reExtensions\n    ? reExtensions\n    : [markdown({ base: markdownLanguage, codeLanguages: languages }), scrollerStyle, ...extensions];\n  const clsPreview = `${prefixCls}-preview`;\n  const cls = [prefixCls, 'wmde-markdown-var', className].filter(Boolean).join(' ');\n  previewProps['source'] = value;\n  const handleChange = (value: string, viewUpdate: ViewUpdate) => {\n    setValue(value);\n    onChange && onChange(value, viewUpdate);\n  };\n  return (\n    <div className={cls} ref={container}>\n      {hideToolbar && (\n        <div className={`${prefixCls}-toolbar-warp`}>\n          <ToolBar {...toolBarProps} toolbars={toolbars} />\n          <ToolBar {...toolBarProps} toolbars={toolbarsMode} mode />\n        </div>\n      )}\n      <div className={`${prefixCls}-content`} style={{ height: codemirrorProps.height }}>\n        <div className={`${prefixCls}-content-editor`} ref={containerEditor}>\n          {visibleEditor && (\n            <CodeMirror\n              theme={defaultTheme}\n              {...codemirrorProps}\n              extensions={extensionsData}\n              height={height}\n              ref={codeMirror}\n              onChange={handleChange}\n            />\n          )}\n        </div>\n        <div className={clsPreview} ref={preview}>\n          {renderPreview ? (\n            renderPreview(previewProps, !!visible)\n          ) : (\n            <MarkdownPreview {...previewProps} data-visible={!!visible} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"
  ],
  "mappings": "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"
}