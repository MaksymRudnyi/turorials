"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultTheme = void 0;

var _codemirrorThemes = require("@uiw/codemirror-themes");

var _highlight = require("@lezer/highlight");

var defaultTheme = (0, _codemirrorThemes.createTheme)({
  theme: 'light',
  settings: {
    background: 'var(--color-canvas-subtle)',
    foreground: 'var(--color-fg-default)',
    caret: 'var(--color-fg-default)',
    selection: 'var(--color-border-default)',
    selectionMatch: 'var(--color-border-muted)',
    lineHighlight: 'var(--color-neutral-muted)',
    gutterBackground: 'var(--color-canvas-subtle)',
    gutterForeground: 'var(--color-fg-muted)',
    gutterBorder: 'var(--color-border-muted)'
  },
  styles: [{
    tag: _highlight.tags.comment,
    color: 'var(--color-prettylights-syntax-comment)'
  }, {
    tag: _highlight.tags.variableName,
    color: 'var(--color-prettylights-syntax-variable)'
  }, {
    tag: [_highlight.tags.string, _highlight.tags.special(_highlight.tags.brace)],
    color: 'var(--color-prettylights-syntax-entity)'
  }, {
    tag: _highlight.tags.number,
    color: 'var(--color-prettylights-syntax-variable)'
  }, {
    tag: [_highlight.tags.bool, _highlight.tags.null],
    color: 'var(--color-prettylights-syntax-entity)'
  }, {
    tag: _highlight.tags.keyword,
    color: 'var(--color-prettylights-syntax-keyword)',
    fontWeight: 'bold'
  }, {
    tag: _highlight.tags.string,
    color: 'var(--color-prettylights-syntax-string)'
  }, {
    tag: _highlight.tags.operator,
    color: 'var(--color-accent-emphasis)'
  }, {
    tag: _highlight.tags.deleted,
    color: 'var(--color-prettylights-syntax-markup-deleted-bg)'
  }, {
    tag: _highlight.tags.deleted,
    color: 'red'
  }, {
    tag: _highlight.tags.className,
    color: 'var(--color-prettylights-syntax-variable)'
  }, {
    tag: _highlight.tags.definition(_highlight.tags.typeName),
    color: 'var(--color-prettylights-syntax-entity)'
  }, {
    tag: _highlight.tags.typeName,
    color: 'var(--color-prettylights-syntax-entity)'
  }, {
    tag: _highlight.tags.list,
    color: 'var(--color-prettylights-syntax-markup-list)'
  }, {
    tag: _highlight.tags.heading,
    color: 'var(--color-prettylights-syntax-markup-heading)',
    fontWeight: 'bold'
  }, {
    tag: _highlight.tags.regexp,
    color: 'var(--color-prettylights-syntax-string-regexp)'
  }, {
    tag: _highlight.tags.literal,
    color: 'var(--color-prettylights-syntax-markup-italic)'
  }, {
    tag: _highlight.tags.link,
    color: 'var(--color-prettylights-syntax-constant-other-reference-link)',
    textDecoration: 'underline'
  }, {
    tag: _highlight.tags.angleBracket,
    color: 'var(--color-fg-default)'
  }, {
    tag: _highlight.tags.tagName,
    color: 'var(--color-prettylights-syntax-entity-tag)'
  }, {
    tag: _highlight.tags.attributeName,
    color: 'var(--color-prettylights-syntax-constant)'
  }]
});
exports.defaultTheme = defaultTheme;
//# sourceMappingURL=theme.js.map