{
  "version": 3,
  "names": [
    "React",
    "useState",
    "useRef",
    "useImperativeHandle",
    "markdown",
    "markdownLanguage",
    "languages",
    "EditorView",
    "CodeMirror",
    "MarkdownPreview",
    "ToolBar",
    "getCommands",
    "getModeCommands",
    "defaultTheme",
    "scrollerStyle",
    "theme",
    "borderBottomRightRadius",
    "borderBottomLeftRadius",
    "MarkdownEditor",
    "forwardRef",
    "MarkdownEditorInternal",
    "Markdown",
    "props",
    "ref",
    "prefixCls",
    "className",
    "onChange",
    "toolbars",
    "toolbarsMode",
    "visible",
    "renderPreview",
    "visibleEditor",
    "hideToolbar",
    "previewProps",
    "extensions",
    "previewWidth",
    "reExtensions",
    "codemirrorProps",
    "value",
    "setValue",
    "codeMirror",
    "container",
    "containerEditor",
    "preview",
    "editor",
    "toolBarProps",
    "editorProps",
    "height",
    "extensionsData",
    "base",
    "codeLanguages",
    "clsPreview",
    "cls",
    "filter",
    "Boolean",
    "join",
    "handleChange",
    "viewUpdate"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import React, { useState, useRef, useImperativeHandle } from 'react';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { languages } from '@codemirror/language-data';\nimport { EditorView, ViewUpdate } from '@codemirror/view';\nimport CodeMirror, { ReactCodeMirrorProps, ReactCodeMirrorRef } from '@uiw/react-codemirror';\nimport MarkdownPreview, { MarkdownPreviewProps } from '@uiw/react-markdown-preview';\nimport ToolBar, { IToolBarProps } from './components/ToolBar';\nimport { getCommands, getModeCommands } from './commands';\nimport { defaultTheme } from './theme';\nimport './index.less';\n\nexport * from './theme';\nexport * from './commands';\nexport * from '@uiw/react-markdown-preview';\n\nexport const scrollerStyle = EditorView.theme({\n  '&.cm-editor, & .cm-scroller': {\n    borderBottomRightRadius: '3px',\n    borderBottomLeftRadius: '3px',\n  },\n});\n\nexport interface IMarkdownEditor extends ReactCodeMirrorProps {\n  className?: string;\n  prefixCls?: string;\n  /** The raw markdown that will be converted to html (**required**) */\n  value?: string;\n  /** Shows a preview that will be converted to html. */\n  visible?: boolean;\n  visibleEditor?: boolean;\n  /** Option to hide the tool bar. */\n  hideToolbar?: boolean;\n  /** Override the default preview component */\n  renderPreview?: (props: MarkdownPreviewProps, initVisible: boolean) => React.ReactNode;\n  /** Preview expanded width @default `50%` */\n  previewWidth?: string;\n  /** Tool display settings. */\n  toolbars?: IToolBarProps['toolbars'];\n  /** Tool display settings. */\n  toolbarsMode?: IToolBarProps['toolbars'];\n  /** [@uiw/react-markdown-preview](https://github.com/uiwjs/react-markdown-preview#options-props) options */\n  previewProps?: MarkdownPreviewProps;\n  /** replace the default `extensions` */\n  reExtensions?: ReactCodeMirrorProps['extensions'];\n}\n\nexport interface ToolBarProps {\n  editor: React.RefObject<ReactCodeMirrorRef>;\n  preview: React.RefObject<HTMLDivElement>;\n  container: React.RefObject<HTMLDivElement>;\n  containerEditor: React.RefObject<HTMLDivElement>;\n  editorProps: IMarkdownEditor;\n}\n\nexport interface MarkdownEditorRef {\n  editor: React.RefObject<ReactCodeMirrorRef>;\n  preview: React.RefObject<HTMLDivElement> | null;\n}\n\nconst MarkdownEditor: MarkdownEditorComponent = React.forwardRef<MarkdownEditorRef, IMarkdownEditor>(\n  MarkdownEditorInternal,\n) as unknown as MarkdownEditorComponent;\ntype MarkdownEditorComponent = React.FC<React.PropsWithRef<IMarkdownEditor>> & {\n  Markdown: typeof MarkdownPreview;\n};\n\nMarkdownEditor.Markdown = MarkdownPreview;\n\nexport default MarkdownEditor;\n\nfunction MarkdownEditorInternal(\n  props: IMarkdownEditor,\n  ref?: ((instance: MarkdownEditorRef) => void) | React.RefObject<MarkdownEditorRef> | null,\n) {\n  const {\n    prefixCls = 'md-editor',\n    className,\n    onChange,\n    toolbars = getCommands(),\n    toolbarsMode = getModeCommands(),\n    visible = true,\n    renderPreview,\n    visibleEditor = true,\n    hideToolbar = true,\n    previewProps = {},\n    extensions = [],\n    previewWidth = '50%',\n    reExtensions,\n    ...codemirrorProps\n  } = props;\n  const [value, setValue] = useState(props.value || '');\n  const codeMirror = useRef<ReactCodeMirrorRef>(null);\n  const container = useRef<HTMLDivElement>(null);\n  const containerEditor = useRef<HTMLDivElement>(null);\n  const preview = useRef<HTMLDivElement>(null);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      editor: codeMirror,\n      preview: preview,\n    }),\n    [codeMirror],\n  );\n\n  const toolBarProps: ToolBarProps = {\n    preview: preview,\n    editor: codeMirror,\n    container: container,\n    containerEditor: containerEditor,\n    editorProps: { ...props, previewWidth },\n  };\n  const height = typeof codemirrorProps.height === 'number' ? `${codemirrorProps.height}px` : codemirrorProps.height;\n  const extensionsData: IMarkdownEditor['extensions'] = reExtensions\n    ? reExtensions\n    : [markdown({ base: markdownLanguage, codeLanguages: languages }), scrollerStyle, ...extensions];\n  const clsPreview = `${prefixCls}-preview`;\n  const cls = [prefixCls, 'wmde-markdown-var', className].filter(Boolean).join(' ');\n  previewProps['source'] = value;\n  const handleChange = (value: string, viewUpdate: ViewUpdate) => {\n    setValue(value);\n    onChange && onChange(value, viewUpdate);\n  };\n  return (\n    <div className={cls} ref={container}>\n      {hideToolbar && (\n        <div className={`${prefixCls}-toolbar-warp`}>\n          <ToolBar {...toolBarProps} toolbars={toolbars} />\n          <ToolBar {...toolBarProps} toolbars={toolbarsMode} mode />\n        </div>\n      )}\n      <div className={`${prefixCls}-content`} style={{ height: codemirrorProps.height }}>\n        <div className={`${prefixCls}-content-editor`} ref={containerEditor}>\n          {visibleEditor && (\n            <CodeMirror\n              theme={defaultTheme}\n              {...codemirrorProps}\n              extensions={extensionsData}\n              height={height}\n              ref={codeMirror}\n              onChange={handleChange}\n            />\n          )}\n        </div>\n        <div className={clsPreview} ref={preview}>\n          {renderPreview ? (\n            renderPreview(previewProps, !!visible)\n          ) : (\n            <MarkdownPreview {...previewProps} data-visible={!!visible} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"
  ],
  "mappings": "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"
}