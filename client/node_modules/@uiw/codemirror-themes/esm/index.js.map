{
  "version": 3,
  "names": [
    "EditorView",
    "HighlightStyle",
    "syntaxHighlighting",
    "createTheme",
    "theme",
    "settings",
    "styles",
    "themeOptions",
    "backgroundColor",
    "background",
    "color",
    "foreground",
    "gutterBackground",
    "gutterForeground",
    "gutterBorder",
    "borderRightColor",
    "caret",
    "caretColor",
    "borderLeftColor",
    "lineHighlight",
    "selection",
    "selectionMatch",
    "themeExtension",
    "dark",
    "highlightStyle",
    "define",
    "extension"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import { EditorView } from '@codemirror/view';\nimport { Extension } from '@codemirror/state';\nimport { HighlightStyle, TagStyle, syntaxHighlighting } from '@codemirror/language';\nimport { StyleSpec } from 'style-mod';\n\nexport interface CreateThemeOptions {\n  /**\n   * Theme inheritance. Determines which styles CodeMirror will apply by default.\n   */\n  theme: Theme;\n  /**\n   * Settings to customize the look of the editor, like background, gutter, selection and others.\n   */\n  settings: Settings;\n  /** Syntax highlighting styles. */\n  styles: TagStyle[];\n}\n\ntype Theme = 'light' | 'dark';\n\nexport interface Settings {\n  /** Editor background. */\n  background: string;\n  /** Default text color. */\n  foreground: string;\n  /** Caret color. */\n  caret?: string;\n  /** Selection background. */\n  selection?: string;\n  /** Selection match background. */\n  selectionMatch?: string;\n  /** Background of highlighted lines. */\n  lineHighlight?: string;\n  /** Gutter background. */\n  gutterBackground?: string;\n  /** Text color inside gutter. */\n  gutterForeground?: string;\n  /** Gutter right border color. */\n  gutterBorder?: string;\n}\n\nexport const createTheme = ({ theme, settings, styles }: CreateThemeOptions): Extension => {\n  const themeOptions: Record<string, StyleSpec> = {\n    '&': {\n      backgroundColor: settings.background,\n      color: settings.foreground,\n    },\n    '.cm-gutters': {},\n  };\n\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret,\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret,\n    };\n  }\n\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight,\n    };\n    themeOptions['.cm-activeLineGutter'] = {\n      backgroundColor: settings.lineHighlight,\n    };\n  }\n\n  if (settings.selection) {\n    themeOptions[\n      '&.cm-focused .cm-selectionBackground .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, ::selection'\n    ] = {\n      backgroundColor: settings.selection,\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch,\n    };\n  }\n  const themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark',\n  });\n\n  const highlightStyle = HighlightStyle.define(styles);\n  const extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n\n  return extension;\n};\n\nexport default createTheme;\n"
  ],
  "mappings": "AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAEA,SAASC,cAAT,EAAmCC,kBAAnC,QAA6D,sBAA7D;AAuCA,OAAO,IAAMC,WAAW,GAAG,QAAgE;EAAA,IAA/D;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAA+D;EACzF,IAAMC,YAAuC,GAAG;IAC9C,KAAK;MACHC,eAAe,EAAEH,QAAQ,CAACI,UADvB;MAEHC,KAAK,EAAEL,QAAQ,CAACM;IAFb,CADyC;IAK9C,eAAe;EAL+B,CAAhD;;EAQA,IAAIN,QAAQ,CAACO,gBAAb,EAA+B;IAC7BL,YAAY,CAAC,aAAD,CAAZ,CAA4BC,eAA5B,GAA8CH,QAAQ,CAACO,gBAAvD;EACD;;EACD,IAAIP,QAAQ,CAACQ,gBAAb,EAA+B;IAC7BN,YAAY,CAAC,aAAD,CAAZ,CAA4BG,KAA5B,GAAoCL,QAAQ,CAACQ,gBAA7C;EACD;;EACD,IAAIR,QAAQ,CAACS,YAAb,EAA2B;IACzBP,YAAY,CAAC,aAAD,CAAZ,CAA4BQ,gBAA5B,GAA+CV,QAAQ,CAACS,YAAxD;EACD;;EAED,IAAIT,QAAQ,CAACW,KAAb,EAAoB;IAClBT,YAAY,CAAC,aAAD,CAAZ,GAA8B;MAC5BU,UAAU,EAAEZ,QAAQ,CAACW;IADO,CAA9B;IAGAT,YAAY,CAAC,4BAAD,CAAZ,GAA6C;MAC3CW,eAAe,EAAEb,QAAQ,CAACW;IADiB,CAA7C;EAGD;;EAED,IAAIX,QAAQ,CAACc,aAAb,EAA4B;IAC1BZ,YAAY,CAAC,gBAAD,CAAZ,GAAiC;MAC/BC,eAAe,EAAEH,QAAQ,CAACc;IADK,CAAjC;IAGAZ,YAAY,CAAC,sBAAD,CAAZ,GAAuC;MACrCC,eAAe,EAAEH,QAAQ,CAACc;IADW,CAAvC;EAGD;;EAED,IAAId,QAAQ,CAACe,SAAb,EAAwB;IACtBb,YAAY,CACV,yHADU,CAAZ,GAEI;MACFC,eAAe,EAAEH,QAAQ,CAACe;IADxB,CAFJ;EAKD;;EACD,IAAIf,QAAQ,CAACgB,cAAb,EAA6B;IAC3Bd,YAAY,CAAC,sBAAD,CAAZ,GAAuC;MACrCC,eAAe,EAAEH,QAAQ,CAACgB;IADW,CAAvC;EAGD;;EACD,IAAMC,cAAc,GAAGtB,UAAU,CAACI,KAAX,CAAiBG,YAAjB,EAA+B;IACpDgB,IAAI,EAAEnB,KAAK,KAAK;EADoC,CAA/B,CAAvB;EAIA,IAAMoB,cAAc,GAAGvB,cAAc,CAACwB,MAAf,CAAsBnB,MAAtB,CAAvB;EACA,IAAMoB,SAAS,GAAG,CAACJ,cAAD,EAAiBpB,kBAAkB,CAACsB,cAAD,CAAnC,CAAlB;EAEA,OAAOE,SAAP;AACD,CAzDM;AA2DP,eAAevB,WAAf"
}