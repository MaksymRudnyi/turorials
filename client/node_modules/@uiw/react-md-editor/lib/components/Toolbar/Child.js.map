{
  "version": 3,
  "names": [
    "Child",
    "props",
    "prefixCls",
    "groupName",
    "commands",
    "children",
    "useContext",
    "EditorContext",
    "barPopup",
    "useMemo",
    "e",
    "stopPropagation",
    "Array",
    "isArray"
  ],
  "sources": [
    "../../../src/components/Toolbar/Child.tsx"
  ],
  "sourcesContent": [
    "import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"
  ],
  "mappings": ";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;AAOe,SAASA,KAAT,CAAeC,KAAf,EAAkC;EAC/C,WAAqDA,KAAK,IAAI,EAA9D;EAAA,IAAQC,SAAR,QAAQA,SAAR;EAAA,IAAmBC,SAAnB,QAAmBA,SAAnB;EAAA,IAA8BC,QAA9B,QAA8BA,QAA9B;EAAA,IAAwCC,QAAxC,QAAwCA,QAAxC;;EACA,kBAA0B,IAAAC,iBAAA,EAAWC,sBAAX,CAA1B;EAAA,uCAAQC,QAAR;EAAA,IAAQA,QAAR,qCAAmB,EAAnB;;EACA,OAAO,IAAAC,cAAA,EACL;IAAA,oBACE;MACE,SAAS,YAAKP,SAAL,4BAAgCC,SAAS,IAAIK,QAAQ,CAACL,SAAD,CAArB,GAAmC,QAAnC,GAA8C,EAA9E,CADX;MAEE,OAAO,EAAE,iBAACO,CAAD;QAAA,OAAOA,CAAC,CAACC,eAAF,EAAP;MAAA,CAFX;MAAA,UAIGC,KAAK,CAACC,OAAN,CAAcT,QAAd,iBAA0B,qBAAC,YAAD;QAAS,QAAQ,EAAEA;MAAnB,GAAiCH,KAAjC;QAAwC,OAAO;MAA/C,GAA1B,GAA+EI;IAJlF,EADF;EAAA,CADK,EASL;EACA,CAACD,QAAD,EAAWI,QAAX,EAAqBL,SAArB,EAAgCD,SAAhC,CAVK,CAAP;AAYD"
}