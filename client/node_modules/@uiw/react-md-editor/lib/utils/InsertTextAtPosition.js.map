{
  "version": 3,
  "names": [
    "browserSupportsTextareaTextNodes",
    "canManipulateViaTextNodes",
    "input",
    "nodeName",
    "textarea",
    "document",
    "createElement",
    "value",
    "firstChild",
    "insertAtLineStart",
    "val",
    "cursorIdx",
    "content",
    "startIdx",
    "char",
    "focus",
    "setRangeText",
    "dispatchEvent",
    "Event",
    "bubbles",
    "insertTextAtPosition",
    "text",
    "selection",
    "ieRange",
    "createRange",
    "collapse",
    "select",
    "isSuccess",
    "execCommand",
    "start",
    "selectionStart",
    "end",
    "selectionEnd",
    "range",
    "textNode",
    "createTextNode",
    "node",
    "appendChild",
    "offset",
    "startNode",
    "endNode",
    "nodeLength",
    "nodeValue",
    "length",
    "setStart",
    "setEnd",
    "nextSibling",
    "deleteContents",
    "commonAncestorContainer",
    "insertNode",
    "slice",
    "setSelectionRange",
    "e",
    "createEvent",
    "initEvent"
  ],
  "sources": [
    "../../src/utils/InsertTextAtPosition.ts"
  ],
  "sourcesContent": [
    "/**\n * The MIT License\n * Copyright (c) 2018 Dmitriy Kubyshkin\n * Copied from https://github.com/grassator/insert-text-at-cursor\n */\n\nlet browserSupportsTextareaTextNodes: any;\n\n/**\n * @param {HTMLElement} input\n * @return {boolean}\n */\nfunction canManipulateViaTextNodes(input: HTMLTextAreaElement | HTMLInputElement): boolean {\n  if (input.nodeName !== 'TEXTAREA') {\n    return false;\n  }\n  if (typeof browserSupportsTextareaTextNodes === 'undefined') {\n    const textarea: HTMLTextAreaElement = document.createElement('textarea');\n    textarea.value = '1';\n    browserSupportsTextareaTextNodes = !!textarea.firstChild;\n  }\n  return browserSupportsTextareaTextNodes;\n}\n\n/**\n * @param {string} val\n * @param {number} cursorIdx\n * @param {HTMLTextAreaElement|HTMLInputElement} input\n * @return {void}\n */\nexport const insertAtLineStart = (\n  val: string,\n  cursorIdx: number,\n  input: HTMLTextAreaElement | HTMLInputElement,\n): void => {\n  const content = input.value;\n  let startIdx = 0;\n\n  while (cursorIdx--) {\n    let char = content[cursorIdx];\n    if (char === '\\n') {\n      startIdx = cursorIdx + 1;\n      break;\n    }\n  }\n\n  input.focus();\n  input.setRangeText(val, startIdx, startIdx);\n  input.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\n/**\n * @param {HTMLTextAreaElement|HTMLInputElement} input\n * @param {string} text\n * @returns {void}\n */\nexport function insertTextAtPosition(input: HTMLTextAreaElement | HTMLInputElement, text: string): void {\n  // Most of the used APIs only work with the field selected\n  input.focus();\n\n  // IE 8-10\n  if ((document as any).selection) {\n    const ieRange = (document as any).selection.createRange();\n    ieRange.text = text;\n\n    // Move cursor after the inserted text\n    ieRange.collapse(false /* to the end */);\n    ieRange.select();\n\n    return;\n  }\n\n  // Webkit + Edge\n  const isSuccess = document.execCommand && document.execCommand('insertText', false, text);\n  if (!isSuccess) {\n    const start = input.selectionStart!;\n    const end = input.selectionEnd!;\n    // Firefox (non-standard method)\n    if (typeof input.setRangeText === 'function') {\n      input.setRangeText(text);\n    } else {\n      // To make a change we just need a Range, not a Selection\n      const range = document.createRange();\n      const textNode = document.createTextNode(text);\n\n      if (canManipulateViaTextNodes(input)) {\n        let node = input.firstChild;\n\n        // If textarea is empty, just insert the text\n        if (!node) {\n          input.appendChild(textNode);\n        } else {\n          // Otherwise we need to find a nodes for start and end\n          let offset = 0;\n          let startNode = null;\n          let endNode = null;\n\n          while (node && (startNode === null || endNode === null)) {\n            const nodeLength = node.nodeValue!.length;\n\n            // if start of the selection falls into current node\n            if (start >= offset && start <= offset + nodeLength) {\n              range.setStart((startNode = node), start - offset);\n            }\n\n            // if end of the selection falls into current node\n            if (end >= offset && end <= offset + nodeLength) {\n              range.setEnd((endNode = node), end - offset);\n            }\n\n            offset += nodeLength;\n            node = node.nextSibling;\n          }\n\n          // If there is some text selected, remove it as we should replace it\n          if (start !== end) {\n            range.deleteContents();\n          }\n        }\n      }\n\n      // If the node is a textarea and the range doesn't span outside the element\n      //\n      // Get the commonAncestorContainer of the selected range and test its type\n      // If the node is of type `#text` it means that we're still working with text nodes within our textarea element\n      // otherwise, if it's of type `#document` for example it means our selection spans outside the textarea.\n      if (canManipulateViaTextNodes(input) && range.commonAncestorContainer.nodeName === '#text') {\n        // Finally insert a new node. The browser will automatically split start and end nodes into two if necessary\n        range.insertNode(textNode);\n      } else {\n        // If the node is not a textarea or the range spans outside a textarea the only way is to replace the whole value\n        const value = input.value;\n        input.value = value.slice(0, start) + text + value.slice(end);\n      }\n    }\n\n    // Correct the cursor position to be at the end of the insertion\n    input.setSelectionRange(start + text.length, start + text.length);\n\n    // Notify any possible listeners of the change\n    const e = document.createEvent('UIEvent');\n    e.initEvent('input', true, false);\n    input.dispatchEvent(e);\n  }\n}\n"
  ],
  "mappings": "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"
}