{
  "version": 3,
  "names": [
    "React",
    "useEffect",
    "useMemo",
    "useRef",
    "DragBar",
    "props",
    "prefixCls",
    "onChange",
    "dragRef",
    "handleMouseMove",
    "event",
    "current",
    "newHeight",
    "height",
    "clientY",
    "dragY",
    "minHeight",
    "maxHeight",
    "handleMouseUp",
    "undefined",
    "handleMouseDown",
    "document",
    "addEventListener",
    "removeEventListener",
    "svg"
  ],
  "sources": [
    "../../../src/components/DragBar/index.tsx"
  ],
  "sourcesContent": [
    "import React, { useEffect, useMemo, useRef } from 'react';\nimport { IProps } from '../../Editor';\nimport './index.less';\n\nexport interface IDragBarProps extends IProps {\n  height: number;\n  maxHeight: number;\n  minHeight: number;\n  onChange: (value: number) => void;\n}\n\nconst DragBar: React.FC<IDragBarProps> = (props) => {\n  const { prefixCls, onChange } = props || {};\n  const dragRef = useRef<{ height: number; dragY: number }>();\n  function handleMouseMove(event: MouseEvent) {\n    if (dragRef.current) {\n      const newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY,\n    };\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      if (document) {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const svg = useMemo(\n    () => (\n      <svg viewBox=\"0 0 512 512\" height=\"100%\">\n        <path\n          fill=\"currentColor\"\n          d=\"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n        />\n      </svg>\n    ),\n    [],\n  );\n  return (\n    <div className={`${prefixCls}-bar`} onMouseDown={handleMouseDown}>\n      {svg}\n    </div>\n  );\n};\n\nexport default DragBar;\n"
  ],
  "mappings": "AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AAEA;;;AASA,IAAMC,OAAgC,GAAIC,KAAD,IAAW;EAClD,IAAM;IAAEC,SAAF;IAAaC;EAAb,IAA0BF,KAAK,IAAI,EAAzC;EACA,IAAMG,OAAO,GAAGL,MAAM,EAAtB;;EACA,SAASM,eAAT,CAAyBC,KAAzB,EAA4C;IAC1C,IAAIF,OAAO,CAACG,OAAZ,EAAqB;MACnB,IAAMC,SAAS,GAAGJ,OAAO,CAACG,OAAR,CAAgBE,MAAhB,GAAyBH,KAAK,CAACI,OAA/B,GAAyCN,OAAO,CAACG,OAAR,CAAgBI,KAA3E;;MACA,IAAIH,SAAS,IAAIP,KAAK,CAACW,SAAnB,IAAgCJ,SAAS,IAAIP,KAAK,CAACY,SAAvD,EAAkE;QAChEV,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAACG,OAAR,CAAgBE,MAAhB,IAA0BH,KAAK,CAACI,OAAN,GAAgBN,OAAO,CAACG,OAAR,CAAgBI,KAA1D,CAAD,CAApB;MACD;IACF;EACF;;EACD,SAASG,aAAT,GAAyB;IACvBV,OAAO,CAACG,OAAR,GAAkBQ,SAAlB;EACD;;EACD,SAASC,eAAT,CAAyBV,KAAzB,EAA8E;IAC5EF,OAAO,CAACG,OAAR,GAAkB;MAChBE,MAAM,EAAER,KAAK,CAACQ,MADE;MAEhBE,KAAK,EAAEL,KAAK,CAACI;IAFG,CAAlB;EAID;;EAEDb,SAAS,CAAC,MAAM;IACd,IAAIoB,QAAJ,EAAc;MACZA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCb,eAAvC;MACAY,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,aAArC;IACD;;IACD,OAAO,MAAM;MACX,IAAIG,QAAJ,EAAc;QACZA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0Cd,eAA1C;QACAY,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,aAAxC;MACD;IACF,CALD,CALc,CAWd;EACD,CAZQ,EAYN,EAZM,CAAT;EAaA,IAAMM,GAAG,GAAGtB,OAAO,CACjB,mBACE;IAAK,OAAO,EAAC,aAAb;IAA2B,MAAM,EAAC,MAAlC;IAAA,uBACE;MACE,IAAI,EAAC,cADP;MAEE,CAAC,EAAC;IAFJ;EADF,EAFe,EASjB,EATiB,CAAnB;EAWA,oBACE;IAAK,SAAS,EAAKI,SAAL,SAAd;IAAoC,WAAW,EAAEc,eAAjD;IAAA,UACGI;EADH,EADF;AAKD,CAlDD;;AAoDA,eAAepB,OAAf"
}