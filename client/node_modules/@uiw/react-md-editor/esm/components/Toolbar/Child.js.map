{
  "version": 3,
  "names": [
    "React",
    "useContext",
    "useMemo",
    "Toolbar",
    "EditorContext",
    "Child",
    "props",
    "prefixCls",
    "groupName",
    "commands",
    "children",
    "barPopup",
    "e",
    "stopPropagation",
    "Array",
    "isArray"
  ],
  "sources": [
    "../../../src/components/Toolbar/Child.tsx"
  ],
  "sourcesContent": [
    "import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"
  ],
  "mappings": ";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA;AACA,OAAOC,OAAP,MAAuC,IAAvC;AACA,SAASC,aAAT,QAA8B,eAA9B;;AAOA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAkC;EAC/C,IAAM;IAAEC,SAAF;IAAaC,SAAb;IAAwBC,QAAxB;IAAkCC;EAAlC,IAA+CJ,KAAK,IAAI,EAA9D;EACA,IAAM;IAAEK,QAAQ,GAAG;EAAb,IAAoBV,UAAU,CAACG,aAAD,CAApC;EACA,OAAOF,OAAO,CACZ,mBACE;IACE,SAAS,EAAKK,SAAL,wBAAgCC,SAAS,IAAIG,QAAQ,CAACH,SAAD,CAArB,GAAmC,QAAnC,GAA8C,EAA9E,CADX;IAEE,OAAO,EAAGI,CAAD,IAAOA,CAAC,CAACC,eAAF,EAFlB;IAAA,UAIGC,KAAK,CAACC,OAAN,CAAcN,QAAd,iBAA0B,KAAC,OAAD;MAAS,QAAQ,EAAEA;IAAnB,GAAiCH,KAAjC;MAAwC,OAAO;IAA/C,GAA1B,GAA+EI;EAJlF,EAFU,EASZ;EACA,CAACD,QAAD,EAAWE,QAAX,EAAqBH,SAArB,EAAgCD,SAAhC,CAVY,CAAd;AAYD"
}