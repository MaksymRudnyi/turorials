{"ast":null,"code":"function wordObj(words) {\n  var res = {};\n\n  for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n\n  return res;\n}\n\nvar commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\nvar commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\nvar commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\nvar commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\nvar atoms = wordObj(commonAtoms);\nvar builtins = wordObj(commonBuiltins);\nvar keywords = wordObj(commonKeywords);\nvar blockkeywords = wordObj(commonBlockKeywords);\nvar opChars = /[+\\-*\\/^<>=!&|~$:]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  curPunc = null;\n  var ch = stream.next();\n\n  if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \"0\" && stream.eat(\"x\")) {\n    stream.eatWhile(/[\\da-f]/i);\n    return \"number\";\n  } else if (ch == \".\" && stream.eat(/\\d/)) {\n    stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n    return \"number\";\n  } else if (/\\d/.test(ch)) {\n    stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n    return \"number\";\n  } else if (ch == \"'\" || ch == '\"') {\n    state.tokenize = tokenString(ch);\n    return \"string\";\n  } else if (ch == \"`\") {\n    stream.match(/[^`]+`/);\n    return \"string.special\";\n  } else if (ch == \".\" && stream.match(/.(?:[.]|\\d+)/)) {\n    return \"keyword\";\n  } else if (/[a-zA-Z\\.]/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    var word = stream.current();\n    if (atoms.propertyIsEnumerable(word)) return \"atom\";\n\n    if (keywords.propertyIsEnumerable(word)) {\n      // Block keywords start new blocks, except 'else if', which only starts\n      // one new block for the 'if', no block for the 'else'.\n      if (blockkeywords.propertyIsEnumerable(word) && !stream.match(/\\s*if(\\s+|$)/, false)) curPunc = \"block\";\n      return \"keyword\";\n    }\n\n    if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n    return \"variable\";\n  } else if (ch == \"%\") {\n    if (stream.skipTo(\"%\")) stream.next();\n    return \"variableName.special\";\n  } else if (ch == \"<\" && stream.eat(\"-\") || ch == \"<\" && stream.match(\"<-\") || ch == \"-\" && stream.match(/>>?/)) {\n    return \"operator\";\n  } else if (ch == \"=\" && state.ctx.argList) {\n    return \"operator\";\n  } else if (opChars.test(ch)) {\n    if (ch == \"$\") return \"operator\";\n    stream.eatWhile(opChars);\n    return \"operator\";\n  } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n    curPunc = ch;\n    if (ch == \";\") return \"punctuation\";\n    return null;\n  } else {\n    return null;\n  }\n}\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    if (stream.eat(\"\\\\\")) {\n      var ch = stream.next();\n      if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n      return \"string.special\";\n    } else {\n      var next;\n\n      while ((next = stream.next()) != null) {\n        if (next == quote) {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        if (next == \"\\\\\") {\n          stream.backUp(1);\n          break;\n        }\n      }\n\n      return \"string\";\n    }\n  };\n}\n\nvar ALIGN_YES = 1,\n    ALIGN_NO = 2,\n    BRACELESS = 4;\n\nfunction push(state, type, stream) {\n  state.ctx = {\n    type: type,\n    indent: state.indent,\n    flags: 0,\n    column: stream.column(),\n    prev: state.ctx\n  };\n}\n\nfunction setFlag(state, flag) {\n  var ctx = state.ctx;\n  state.ctx = {\n    type: ctx.type,\n    indent: ctx.indent,\n    flags: ctx.flags | flag,\n    column: ctx.column,\n    prev: ctx.prev\n  };\n}\n\nfunction pop(state) {\n  state.indent = state.ctx.indent;\n  state.ctx = state.ctx.prev;\n}\n\nexport const r = {\n  startState: function (indentUnit) {\n    return {\n      tokenize: tokenBase,\n      ctx: {\n        type: \"top\",\n        indent: -indentUnit,\n        flags: ALIGN_NO\n      },\n      indent: 0,\n      afterIdent: false\n    };\n  },\n  token: function (stream, state) {\n    if (stream.sol()) {\n      if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO;\n      if (state.ctx.flags & BRACELESS) pop(state);\n      state.indent = stream.indentation();\n    }\n\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES);\n    if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n    if (curPunc == \"{\") push(state, \"}\", stream);else if (curPunc == \"(\") {\n      push(state, \")\", stream);\n      if (state.afterIdent) state.ctx.argList = true;\n    } else if (curPunc == \"[\") push(state, \"]\", stream);else if (curPunc == \"block\") push(state, \"block\", stream);else if (curPunc == state.ctx.type) pop(state);else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS);\n    state.afterIdent = style == \"variable\" || style == \"keyword\";\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    if (state.tokenize != tokenBase) return 0;\n    var firstChar = textAfter && textAfter.charAt(0),\n        ctx = state.ctx,\n        closing = firstChar == ctx.type;\n    if (ctx.flags & BRACELESS) ctx = ctx.prev;\n    if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : cx.unit);else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);else return ctx.indent + (closing ? 0 : cx.unit);\n  },\n  languageData: {\n    wordChars: \".\",\n    commentTokens: {\n      line: \"#\"\n    },\n    autocomplete: commonAtoms.concat(commonBuiltins, commonKeywords)\n  }\n};","map":{"version":3,"names":["wordObj","words","res","i","length","commonAtoms","commonBuiltins","commonKeywords","commonBlockKeywords","atoms","builtins","keywords","blockkeywords","opChars","curPunc","tokenBase","stream","state","ch","next","skipToEnd","eat","eatWhile","match","test","tokenize","tokenString","word","current","propertyIsEnumerable","skipTo","ctx","argList","quote","backUp","ALIGN_YES","ALIGN_NO","BRACELESS","push","type","indent","flags","column","prev","setFlag","flag","pop","r","startState","indentUnit","afterIdent","token","sol","indentation","eatSpace","style","textAfter","cx","firstChar","charAt","closing","unit","languageData","wordChars","commentTokens","line","autocomplete","concat"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/r.js"],"sourcesContent":["function wordObj(words) {\n  var res = {};\n  for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n  return res;\n}\nvar commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\nvar commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\nvar commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\nvar commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\n\nvar atoms = wordObj(commonAtoms);\nvar builtins = wordObj(commonBuiltins);\nvar keywords = wordObj(commonKeywords);\nvar blockkeywords = wordObj(commonBlockKeywords);\nvar opChars = /[+\\-*\\/^<>=!&|~$:]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  curPunc = null;\n  var ch = stream.next();\n  if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \"0\" && stream.eat(\"x\")) {\n    stream.eatWhile(/[\\da-f]/i);\n    return \"number\";\n  } else if (ch == \".\" && stream.eat(/\\d/)) {\n    stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n    return \"number\";\n  } else if (/\\d/.test(ch)) {\n    stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n    return \"number\";\n  } else if (ch == \"'\" || ch == '\"') {\n    state.tokenize = tokenString(ch);\n    return \"string\";\n  } else if (ch == \"`\") {\n    stream.match(/[^`]+`/);\n    return \"string.special\";\n  } else if (ch == \".\" && stream.match(/.(?:[.]|\\d+)/)) {\n    return \"keyword\";\n  } else if (/[a-zA-Z\\.]/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    var word = stream.current();\n    if (atoms.propertyIsEnumerable(word)) return \"atom\";\n    if (keywords.propertyIsEnumerable(word)) {\n      // Block keywords start new blocks, except 'else if', which only starts\n      // one new block for the 'if', no block for the 'else'.\n      if (blockkeywords.propertyIsEnumerable(word) &&\n          !stream.match(/\\s*if(\\s+|$)/, false))\n        curPunc = \"block\";\n      return \"keyword\";\n    }\n    if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n    return \"variable\";\n  } else if (ch == \"%\") {\n    if (stream.skipTo(\"%\")) stream.next();\n    return \"variableName.special\";\n  } else if (\n    (ch == \"<\" && stream.eat(\"-\")) ||\n      (ch == \"<\" && stream.match(\"<-\")) ||\n      (ch == \"-\" && stream.match(/>>?/))\n  ) {\n    return \"operator\";\n  } else if (ch == \"=\" && state.ctx.argList) {\n    return \"operator\";\n  } else if (opChars.test(ch)) {\n    if (ch == \"$\") return \"operator\";\n    stream.eatWhile(opChars);\n    return \"operator\";\n  } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n    curPunc = ch;\n    if (ch == \";\") return \"punctuation\";\n    return null;\n  } else {\n    return null;\n  }\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    if (stream.eat(\"\\\\\")) {\n      var ch = stream.next();\n      if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\n      else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\n      else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\n      else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\n      else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n      return \"string.special\";\n    } else {\n      var next;\n      while ((next = stream.next()) != null) {\n        if (next == quote) { state.tokenize = tokenBase; break; }\n        if (next == \"\\\\\") { stream.backUp(1); break; }\n      }\n      return \"string\";\n    }\n  };\n}\n\nvar ALIGN_YES = 1, ALIGN_NO = 2, BRACELESS = 4\n\nfunction push(state, type, stream) {\n  state.ctx = {type: type,\n               indent: state.indent,\n               flags: 0,\n               column: stream.column(),\n               prev: state.ctx};\n}\nfunction setFlag(state, flag) {\n  var ctx = state.ctx\n  state.ctx = {type: ctx.type,\n               indent: ctx.indent,\n               flags: ctx.flags | flag,\n               column: ctx.column,\n               prev: ctx.prev}\n}\nfunction pop(state) {\n  state.indent = state.ctx.indent;\n  state.ctx = state.ctx.prev;\n}\n\nexport const r = {\n  startState: function(indentUnit) {\n    return {tokenize: tokenBase,\n            ctx: {type: \"top\",\n                  indent: -indentUnit,\n                  flags: ALIGN_NO},\n            indent: 0,\n            afterIdent: false};\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO\n      if (state.ctx.flags & BRACELESS) pop(state)\n      state.indent = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES)\n\n    if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n    if (curPunc == \"{\") push(state, \"}\", stream);\n    else if (curPunc == \"(\") {\n      push(state, \")\", stream);\n      if (state.afterIdent) state.ctx.argList = true;\n    }\n    else if (curPunc == \"[\") push(state, \"]\", stream);\n    else if (curPunc == \"block\") push(state, \"block\", stream);\n    else if (curPunc == state.ctx.type) pop(state);\n    else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS)\n    state.afterIdent = style == \"variable\" || style == \"keyword\";\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\n        closing = firstChar == ctx.type;\n    if (ctx.flags & BRACELESS) ctx = ctx.prev\n    if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indent + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    wordChars: \".\",\n    commentTokens: {line: \"#\"},\n    autocomplete: commonAtoms.concat(commonBuiltins, commonKeywords)\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}