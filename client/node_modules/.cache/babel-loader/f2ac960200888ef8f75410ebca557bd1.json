{"ast":null,"code":"/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\nimport { CssSelectorParser } from 'css-selector-parser';\nimport fauxEsmNthCheck from 'nth-check';\nimport { zwitch } from 'zwitch';\n/** @type {import('nth-check').default} */\n// @ts-expect-error\n\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck;\nconst nth = new Set(['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type']);\nconst parser = new CssSelectorParser(); // @ts-expect-error: hush.\n\nconst compile = zwitch('type', {\n  handlers: {\n    selectors,\n    ruleSet,\n    rule\n  }\n});\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*');\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has');\nparser.registerNestingOperators('>', '+', '~');\n/**\n * @param {string} selector\n * @returns {Selector}\n */\n\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`');\n  } // @ts-expect-error types are wrong.\n\n\n  return compile(parser.parse(selector));\n}\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\n\nfunction selectors(query) {\n  let index = -1;\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index]);\n  }\n\n  return query;\n}\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\n\n\nfunction ruleSet(query) {\n  return rule(query.rule);\n}\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\n\n\nfunction rule(query) {\n  const pseudos = query.pseudos || [];\n  let index = -1;\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index];\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value); // @ts-expect-error Patch a non-primitive type.\n\n      pseudo.valueType = 'function';\n    }\n  }\n\n  compile(query.rule);\n  return query;\n}","map":{"version":3,"names":["CssSelectorParser","fauxEsmNthCheck","zwitch","nthCheck","default","nth","Set","parser","compile","handlers","selectors","ruleSet","rule","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","parse","selector","TypeError","query","index","length","pseudos","pseudo","has","name","value","valueType"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/hast-util-select/lib/parse.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAAQC,MAAR,QAAqB,QAArB;AAEA;AACA;;AACA,MAAMC,QAAQ,GAAGF,eAAe,CAACG,OAAhB,IAA2BH,eAA5C;AAEA,MAAMI,GAAG,GAAG,IAAIC,GAAJ,CAAQ,CAClB,WADkB,EAElB,gBAFkB,EAGlB,aAHkB,EAIlB,kBAJkB,CAAR,CAAZ;AAOA,MAAMC,MAAM,GAAG,IAAIP,iBAAJ,EAAf,C,CAEA;;AACA,MAAMQ,OAAO,GAAGN,MAAM,CAAC,MAAD,EAAS;EAACO,QAAQ,EAAE;IAACC,SAAD;IAAYC,OAAZ;IAAqBC;EAArB;AAAX,CAAT,CAAtB;AAEAL,MAAM,CAACM,wBAAP,CAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD;AACAN,MAAM,CAACO,uBAAP,CAA+B,KAA/B,EAAsC,SAAtC,EAAiD,KAAjD,EAAwD,KAAxD;AACAP,MAAM,CAACQ,wBAAP,CAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyB;EAC9B,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IAChC,MAAM,IAAIC,SAAJ,CAAc,yCAAyCD,QAAzC,GAAoD,GAAlE,CAAN;EACD,CAH6B,CAK9B;;;EACA,OAAOT,OAAO,CAACD,MAAM,CAACS,KAAP,CAAaC,QAAb,CAAD,CAAd;AACD;AAED;AACA;AACA;AACA;;AACA,SAASP,SAAT,CAAmBS,KAAnB,EAA0B;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAb;;EAEA,OAAO,EAAEA,KAAF,GAAUD,KAAK,CAACT,SAAN,CAAgBW,MAAjC,EAAyC;IACvCb,OAAO,CAACW,KAAK,CAACT,SAAN,CAAgBU,KAAhB,CAAD,CAAP;EACD;;EAED,OAAOD,KAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASR,OAAT,CAAiBQ,KAAjB,EAAwB;EACtB,OAAOP,IAAI,CAACO,KAAK,CAACP,IAAP,CAAX;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASA,IAAT,CAAcO,KAAd,EAAqB;EACnB,MAAMG,OAAO,GAAGH,KAAK,CAACG,OAAN,IAAiB,EAAjC;EACA,IAAIF,KAAK,GAAG,CAAC,CAAb;;EAEA,OAAO,EAAEA,KAAF,GAAUE,OAAO,CAACD,MAAzB,EAAiC;IAC/B,MAAME,MAAM,GAAGD,OAAO,CAACF,KAAD,CAAtB;;IAEA,IAAIf,GAAG,CAACmB,GAAJ,CAAQD,MAAM,CAACE,IAAf,CAAJ,EAA0B;MACxB;MACAF,MAAM,CAACG,KAAP,GAAevB,QAAQ,CAACoB,MAAM,CAACG,KAAR,CAAvB,CAFwB,CAGxB;;MACAH,MAAM,CAACI,SAAP,GAAmB,UAAnB;IACD;EACF;;EAEDnB,OAAO,CAACW,KAAK,CAACP,IAAP,CAAP;EAEA,OAAOO,KAAP;AACD"},"metadata":{},"sourceType":"module"}