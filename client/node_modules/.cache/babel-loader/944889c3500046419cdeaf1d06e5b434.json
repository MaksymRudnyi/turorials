{"ast":null,"code":"var fs = require('fs'),\n    WritableStream = require('stream').Writable || require('readable-stream').Writable,\n    inherits = require('util').inherits;\n\nvar parseParams = require('./utils').parseParams;\n\nfunction Busboy(opts) {\n  if (!(this instanceof Busboy)) return new Busboy(opts);\n  if (opts.highWaterMark !== undefined) WritableStream.call(this, {\n    highWaterMark: opts.highWaterMark\n  });else WritableStream.call(this);\n  this._done = false;\n  this._parser = undefined;\n  this._finished = false;\n  this.opts = opts;\n  if (opts.headers && typeof opts.headers['content-type'] === 'string') this.parseHeaders(opts.headers);else throw new Error('Missing Content-Type');\n}\n\ninherits(Busboy, WritableStream);\n\nBusboy.prototype.emit = function (ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser && this._parser.end();\n      return;\n    } else if (this._finished) {\n      return;\n    }\n\n    this._finished = true;\n  }\n\n  WritableStream.prototype.emit.apply(this, arguments);\n};\n\nBusboy.prototype.parseHeaders = function (headers) {\n  this._parser = undefined;\n\n  if (headers['content-type']) {\n    var parsed = parseParams(headers['content-type']),\n        matched,\n        type;\n\n    for (var i = 0; i < TYPES.length; ++i) {\n      type = TYPES[i];\n      if (typeof type.detect === 'function') matched = type.detect(parsed);else matched = type.detect.test(parsed[0]);\n      if (matched) break;\n    }\n\n    if (matched) {\n      var cfg = {\n        limits: this.opts.limits,\n        headers: headers,\n        parsedConType: parsed,\n        highWaterMark: undefined,\n        fileHwm: undefined,\n        defCharset: undefined,\n        preservePath: false\n      };\n      if (this.opts.highWaterMark) cfg.highWaterMark = this.opts.highWaterMark;\n      if (this.opts.fileHwm) cfg.fileHwm = this.opts.fileHwm;\n      cfg.defCharset = this.opts.defCharset;\n      cfg.preservePath = this.opts.preservePath;\n      this._parser = type(this, cfg);\n      return;\n    }\n  }\n\n  throw new Error('Unsupported content type: ' + headers['content-type']);\n};\n\nBusboy.prototype._write = function (chunk, encoding, cb) {\n  if (!this._parser) return cb(new Error('Not ready to parse. Missing Content-Type?'));\n\n  this._parser.write(chunk, cb);\n};\n\nvar TYPES = [require('./types/multipart'), require('./types/urlencoded')];\nmodule.exports = Busboy;","map":{"version":3,"names":["fs","require","WritableStream","Writable","inherits","parseParams","Busboy","opts","highWaterMark","undefined","call","_done","_parser","_finished","headers","parseHeaders","Error","prototype","emit","ev","end","apply","arguments","parsed","matched","type","i","TYPES","length","detect","test","cfg","limits","parsedConType","fileHwm","defCharset","preservePath","_write","chunk","encoding","cb","write","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/busboy/lib/main.js"],"sourcesContent":["var fs = require('fs'),\n    WritableStream = require('stream').Writable\n                     || require('readable-stream').Writable,\n    inherits = require('util').inherits;\n\nvar parseParams = require('./utils').parseParams;\n\nfunction Busboy(opts) {\n  if (!(this instanceof Busboy))\n    return new Busboy(opts);\n  if (opts.highWaterMark !== undefined)\n    WritableStream.call(this, { highWaterMark: opts.highWaterMark });\n  else\n    WritableStream.call(this);\n\n  this._done = false;\n  this._parser = undefined;\n  this._finished = false;\n\n  this.opts = opts;\n  if (opts.headers && typeof opts.headers['content-type'] === 'string')\n    this.parseHeaders(opts.headers);\n  else\n    throw new Error('Missing Content-Type');\n}\ninherits(Busboy, WritableStream);\n\nBusboy.prototype.emit = function(ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser && this._parser.end();\n      return;\n    } else if (this._finished) {\n      return;\n    }\n    this._finished = true;\n  }\n  WritableStream.prototype.emit.apply(this, arguments);\n};\n\nBusboy.prototype.parseHeaders = function(headers) {\n  this._parser = undefined;\n  if (headers['content-type']) {\n    var parsed = parseParams(headers['content-type']),\n        matched, type;\n    for (var i = 0; i < TYPES.length; ++i) {\n      type = TYPES[i];\n      if (typeof type.detect === 'function')\n        matched = type.detect(parsed);\n      else\n        matched = type.detect.test(parsed[0]);\n      if (matched)\n        break;\n    }\n    if (matched) {\n      var cfg = {\n        limits: this.opts.limits,\n        headers: headers,\n        parsedConType: parsed,\n        highWaterMark: undefined,\n        fileHwm: undefined,\n        defCharset: undefined,\n        preservePath: false\n      };\n      if (this.opts.highWaterMark)\n        cfg.highWaterMark = this.opts.highWaterMark;\n      if (this.opts.fileHwm)\n        cfg.fileHwm = this.opts.fileHwm;\n      cfg.defCharset = this.opts.defCharset;\n      cfg.preservePath = this.opts.preservePath;\n      this._parser = type(this, cfg);\n      return;\n    }\n  }\n  throw new Error('Unsupported content type: ' + headers['content-type']);\n};\n\nBusboy.prototype._write = function(chunk, encoding, cb) {\n  if (!this._parser)\n    return cb(new Error('Not ready to parse. Missing Content-Type?'));\n  this._parser.write(chunk, cb);\n};\n\nvar TYPES = [\n  require('./types/multipart'),\n  require('./types/urlencoded'),\n];\n\nmodule.exports = Busboy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}