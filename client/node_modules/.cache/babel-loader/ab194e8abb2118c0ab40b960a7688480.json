{"ast":null,"code":"// @ts-nocheck\nexcelFormula.displayName = 'excel-formula';\nexcelFormula.aliases = ['xls', 'xlsx'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'builtin'\n    },\n    range: {\n      pattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'selector',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'selector'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  };\n  Prism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];\n}","map":{"version":3,"names":["excelFormula","displayName","aliases","Prism","languages","comment","pattern","lookbehind","greedy","string","reference","alias","inside","operator","punctuation","sheet","file","path","range","cell","column","row","number","boolean"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/excel-formula.js"],"sourcesContent":["// @ts-nocheck\nexcelFormula.displayName = 'excel-formula'\nexcelFormula.aliases = ['xls', 'xlsx']\n\n/** @type {import('../core.js').Syntax} */\nexport default function excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'builtin'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'selector',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'selector'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n"],"mappings":"AAAA;AACAA,YAAY,CAACC,WAAb,GAA2B,eAA3B;AACAD,YAAY,CAACE,OAAb,GAAuB,CAAC,KAAD,EAAQ,MAAR,CAAvB;AAEA;;AACA,eAAe,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;EAC1CA,KAAK,CAACC,SAAN,CAAgB,eAAhB,IAAmC;IACjCC,OAAO,EAAE;MACPC,OAAO,EAAE,oCADF;MAEPC,UAAU,EAAE,IAFL;MAGPC,MAAM,EAAE;IAHD,CADwB;IAMjCC,MAAM,EAAE;MACNH,OAAO,EAAE,qBADH;MAENE,MAAM,EAAE;IAFF,CANyB;IAUjCE,SAAS,EAAE;MACT;MACA;MACA;MACA;MACA;MACA;MACA;MACAJ,OAAO,EACL,sEATO;MAUTE,MAAM,EAAE,IAVC;MAWTG,KAAK,EAAE,QAXE;MAYTC,MAAM,EAAE;QACNC,QAAQ,EAAE,IADJ;QAENC,WAAW,EAAE,GAFP;QAGNC,KAAK,EAAE;UACLT,OAAO,EAAE,UADJ;UAELK,KAAK,EAAE;QAFF,CAHD;QAONK,IAAI,EAAE;UACJV,OAAO,EAAE,cADL;UAEJM,MAAM,EAAE;YACNE,WAAW,EAAE;UADP;QAFJ,CAPA;QAaNG,IAAI,EAAE;MAbA;IAZC,CAVsB;IAsCjC,iBAAiB;MACfX,OAAO,EAAE,mBADM;MAEfK,KAAK,EAAE;IAFQ,CAtCgB;IA0CjCO,KAAK,EAAE;MACLZ,OAAO,EACL,sEAFG;MAGLK,KAAK,EAAE,UAHF;MAILC,MAAM,EAAE;QACNC,QAAQ,EAAE,GADJ;QAENM,IAAI,EAAE,kBAFA;QAGNC,MAAM,EAAE,YAHF;QAINC,GAAG,EAAE;MAJC;IAJH,CA1C0B;IAqDjCF,IAAI,EAAE;MACJ;MACA;MACAb,OAAO,EAAE,sDAHL;MAIJK,KAAK,EAAE;IAJH,CArD2B;IA2DjCW,MAAM,EAAE,8CA3DyB;IA4DjCC,OAAO,EAAE,qBA5DwB;IA6DjCV,QAAQ,EAAE,wBA7DuB;IA8DjCC,WAAW,EAAE;EA9DoB,CAAnC;EAgEAX,KAAK,CAACC,SAAN,CAAgB,MAAhB,IAA0BD,KAAK,CAACC,SAAN,CAAgB,KAAhB,IACxBD,KAAK,CAACC,SAAN,CAAgB,eAAhB,CADF;AAED"},"metadata":{},"sourceType":"module"}