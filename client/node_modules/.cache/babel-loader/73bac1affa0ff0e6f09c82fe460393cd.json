{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\n\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return destinationEnclosedBefore;\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return destinationRaw(code);\n  }\n  /** @type {State} */\n\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return destinationEnclosed(code);\n  }\n  /** @type {State} */\n\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      return destinationEnclosedBefore(code);\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    effects.consume(code);\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed;\n  }\n  /** @type {State} */\n\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return destinationEnclosed;\n    }\n\n    return destinationEnclosed(code);\n  }\n  /** @type {State} */\n\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code);\n      effects.consume(code);\n      return destinationRaw;\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString');\n        effects.exit(stringType);\n        effects.exit(rawType);\n        effects.exit(type);\n        return ok(code);\n      }\n\n      effects.consume(code);\n      return destinationRaw;\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code);\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n\n    if (asciiControl(code)) return nok(code);\n    effects.consume(code);\n    return code === 92 ? destinationRawEscape : destinationRaw;\n  }\n  /** @type {State} */\n\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return destinationRaw;\n    }\n\n    return destinationRaw(code);\n  }\n}","map":{"version":3,"names":["asciiControl","markdownLineEndingOrSpace","markdownLineEnding","factoryDestination","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","Number","POSITIVE_INFINITY","balance","start","code","enter","consume","exit","destinationEnclosedBefore","contentType","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/micromark-factory-destination/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}