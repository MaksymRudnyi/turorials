{"ast":null,"code":"/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n * @typedef {import('../types.js').Child} Child\n */\nimport { isElement } from 'hast-util-is-element';\nimport { comment } from './util/comment.js';\nimport { siblingBefore, siblingAfter } from './util/siblings.js';\nimport { whitespaceStart } from './util/whitespace-start.js';\nimport { closing } from './closing.js';\nimport { omission } from './omission.js';\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n});\n/**\n * Whether to omit `<html>`.\n *\n * @type {OmitHandle}\n */\n\nfunction html(node) {\n  const head = siblingAfter(node, -1);\n  return !head || !comment(head);\n}\n/**\n * Whether to omit `<head>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction head(node) {\n  const children = node.children;\n  /** @type {Array.<string>} */\n\n  const seen = [];\n  let index = -1;\n  /** @type {Child} */\n\n  let child;\n\n  while (++index < children.length) {\n    child = children[index];\n\n    if (isElement(child, ['title', 'base'])) {\n      if (seen.includes(child.tagName)) return false;\n      seen.push(child.tagName);\n    }\n  }\n\n  return children.length > 0;\n}\n/**\n * Whether to omit `<body>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction body(node) {\n  const head = siblingAfter(node, -1, true);\n  return !head || !comment(head) && !whitespaceStart(head) && !isElement(head, ['meta', 'link', 'script', 'style', 'template']);\n}\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @type {OmitHandle}\n */\n\n\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1, true); // Previous colgroup was already omitted.\n\n  if (isElement(previous, 'colgroup') && closing(previous, parent.children.indexOf(previous), parent)) {\n    return false;\n  }\n\n  return head && isElement(head, 'col');\n}\n/**\n * Whether to omit `<tbody>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1); // Previous table section was already omitted.\n\n  if (isElement(previous, ['thead', 'tbody']) && closing(previous, parent.children.indexOf(previous), parent)) {\n    return false;\n  }\n\n  return head && isElement(head, 'tr');\n}","map":{"version":3,"names":["isElement","comment","siblingBefore","siblingAfter","whitespaceStart","closing","omission","opening","html","head","body","colgroup","tbody","node","children","seen","index","child","length","includes","tagName","push","parent","previous","indexOf"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/hast-util-to-html/lib/omission/opening.js"],"sourcesContent":["/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n * @typedef {import('../types.js').Child} Child\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || !comment(head)\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @type {OmitHandle}\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array.<string>} */\n  const seen = []\n  let index = -1\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n    if (isElement(child, ['title', 'base'])) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (!comment(head) &&\n      !whitespaceStart(head) &&\n      !isElement(head, ['meta', 'link', 'script', 'style', 'template']))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @type {OmitHandle}\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    isElement(previous, 'colgroup') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    isElement(previous, ['thead', 'tbody']) &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'tr')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}