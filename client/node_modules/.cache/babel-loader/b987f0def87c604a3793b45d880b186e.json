{"ast":null,"code":"function Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\") indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\n\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nexport function clike(parserConfig) {\n  var statementIndentUnit = parserConfig.statementIndentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n  // should be treated as a builtin.\n  isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n\n    if (numberStart.test(ch)) {\n      stream.backUp(1);\n      if (stream.match(number)) return \"number\";\n      stream.next();\n    }\n\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n\n      return \"operator\";\n    }\n\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator)) stream.eatWhile(isIdentifierChar);\n    var cur = stream.current();\n\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n\n    if (contains(types, cur)) return \"type\";\n\n    if (contains(builtin, cur) || isReservedIdentifier && isReservedIdentifier(cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function (stream, state) {\n      var escaped = false,\n          next,\n          end = false;\n\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          end = true;\n          break;\n        }\n\n        escaped = !escaped && next == \"\\\\\";\n      }\n\n      if (end || !(escaped || multiLineStrings)) state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false,\n        ch;\n\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n\n      maybeEnd = ch == \"*\";\n    }\n\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context)) state.typeAtEndOfLine = typeBefore(stream, state, stream.pos);\n  } // Interface\n\n\n  return {\n    startState: function (indentUnit) {\n      return {\n        tokenize: null,\n        context: new Context(-indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n    token: function (stream, state) {\n      var ctx = state.context;\n\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n\n      if (stream.eatSpace()) {\n        maybeEOL(stream, state);\n        return null;\n      }\n\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n      if (curPunc == \";\" || curPunc == \":\" || curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)) while (state.context.type == \"statement\") popContext(state);else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n\n        if (ctx.type == \"}\") ctx = popContext(state);\n\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      } else if (curPunc == ctx.type) popContext(state);else if (indentStatements && ((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\" || ctx.type == \"statement\" && curPunc == \"newstatement\")) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n      if (style == \"variable\" && (state.prevToken == \"def\" || parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) && isTopScope(state.context) && stream.match(/^\\s*\\(/, false))) style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n    indent: function (state, textAfter, context) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return null;\n      var ctx = state.context,\n          firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements) while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info)) ctx = ctx.prev;\n\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, context.unit);\n        if (typeof hook == \"number\") return hook;\n      }\n\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev;\n\n        return ctx.indented;\n      }\n\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit || context.unit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\")) return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing) return ctx.indented + (statementIndentUnit || context.unit);\n      return ctx.indented + (closing ? 0 : context.unit) + (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? context.unit : 0);\n    },\n    languageData: {\n      indentOnInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n      commentTokens: {\n        line: \"//\",\n        block: {\n          open: \"/*\",\n          close: \"*/\"\n        }\n      },\n      autocomplete: Object.keys(keywords).concat(Object.keys(types)).concat(Object.keys(builtin)).concat(Object.keys(atoms)),\n      ...parserConfig.languageData\n    }\n  };\n}\n;\n\nfunction words(str) {\n  var obj = {},\n      words = str.split(\" \");\n\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n  return obj;\n}\n\nfunction contains(words, word) {\n  if (typeof words === \"function\") {\n    return words(word);\n  } else {\n    return words.propertyIsEnumerable(word);\n  }\n}\n\nvar cKeywords = \"auto if break case register continue return default do sizeof \" + \"static else struct switch extern typedef union for goto while enum const \" + \"volatile inline restrict asm fortran\"; // Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\n\nvar cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" + \"class compl concept constexpr const_cast decltype delete dynamic_cast \" + \"explicit export final friend import module mutable namespace new noexcept \" + \"not not_eq operator or or_eq override private protected public \" + \"reinterpret_cast requires static_assert static_cast template this \" + \"thread_local throw try typeid typename using virtual xor xor_eq\";\nvar objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" + \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" + \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" + \"@public @package @private @protected @required @optional @try @catch @finally @import \" + \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\nvar objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" + \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" + \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" + \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"; // Do not use this. Use the cTypes function below. This is global just to avoid\n// excessive calls when cTypes is being called multiple times during a parse.\n\nvar basicCTypes = words(\"int long char short double float unsigned signed \" + \"void bool\"); // Do not use this. Use the objCTypes function below. This is global just to avoid\n// excessive calls when objCTypes is being called multiple times during a parse.\n\nvar basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\"); // Returns true if identifier is a \"C\" type.\n// C type is defined as those that are reserved by the compiler (basicTypes),\n// and those that end in _t (Reserved by POSIX for types)\n// http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\n\nfunction cTypes(identifier) {\n  return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n} // Returns true if identifier is a \"Objective C\" type.\n\n\nfunction objCTypes(identifier) {\n  return cTypes(identifier) || contains(basicObjCTypes, identifier);\n}\n\nvar cBlockKeywords = \"case do else for if switch while struct enum union\";\nvar cDefKeywords = \"struct enum union\";\n\nfunction cppHook(stream, state) {\n  if (!state.startOfLine) return false;\n\n  for (var ch, next = null; ch = stream.peek();) {\n    if (ch == \"\\\\\" && stream.match(/^.$/)) {\n      next = cppHook;\n      break;\n    } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n      break;\n    }\n\n    stream.next();\n  }\n\n  state.tokenize = next;\n  return \"meta\";\n}\n\nfunction pointerHook(_stream, state) {\n  if (state.prevToken == \"type\") return \"type\";\n  return false;\n} // For C and C++ (and ObjC): identifiers starting with __\n// or _ followed by a capital letter are reserved for the compiler.\n\n\nfunction cIsReservedIdentifier(token) {\n  if (!token || token.length < 2) return false;\n  if (token[0] != '_') return false;\n  return token[1] == '_' || token[1] !== token[1].toLowerCase();\n}\n\nfunction cpp14Literal(stream) {\n  stream.eatWhile(/[\\w\\.']/);\n  return \"number\";\n}\n\nfunction cpp11StringHook(stream, state) {\n  stream.backUp(1); // Raw strings.\n\n  if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n    var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n\n    if (!match) {\n      return false;\n    }\n\n    state.cpp11RawStringDelim = match[1];\n    state.tokenize = tokenRawString;\n    return tokenRawString(stream, state);\n  } // Unicode strings/chars.\n\n\n  if (stream.match(/^(?:u8|u|U|L)/)) {\n    if (stream.match(/^[\"']/,\n    /* eat */\n    false)) {\n      return \"string\";\n    }\n\n    return false;\n  } // Ignore this hook.\n\n\n  stream.next();\n  return false;\n}\n\nfunction cppLooksLikeConstructor(word) {\n  var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n  return lastTwo && lastTwo[1] == lastTwo[2];\n} // C#-style strings where \"\" escapes a quote.\n\n\nfunction tokenAtString(stream, state) {\n  var next;\n\n  while ((next = stream.next()) != null) {\n    if (next == '\"' && !stream.eat('\"')) {\n      state.tokenize = null;\n      break;\n    }\n  }\n\n  return \"string\";\n} // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n// <delim> can be a string up to 16 characters long.\n\n\nfunction tokenRawString(stream, state) {\n  // Escape characters that have special regex meanings.\n  var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n  var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n  if (match) state.tokenize = null;else stream.skipToEnd();\n  return \"string\";\n}\n\nexport const c = clike({\n  keywords: words(cKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  defKeywords: words(cDefKeywords),\n  typeFirstDefinitions: true,\n  atoms: words(\"NULL true false\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook\n  }\n});\nexport const cpp = clike({\n  keywords: words(cKeywords + \" \" + cppKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords + \" class try catch\"),\n  defKeywords: words(cDefKeywords + \" class namespace\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false NULL nullptr\"),\n  dontIndentStatements: /^template$/,\n  isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function (stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" && (state.prevToken == \";\" || state.prevToken == null || state.prevToken == \"}\") && cppLooksLikeConstructor(stream.current())) return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n});\nexport const java = clike({\n  keywords: words(\"abstract assert break case catch class const continue default \" + \"do else enum extends final finally for goto if implements import \" + \"instanceof interface native new package private protected public \" + \"return static strictfp super switch synchronized this throw throws transient \" + \"try volatile while @interface\"),\n  types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" + \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n  blockKeywords: words(\"catch class do else finally for if switch try while\"),\n  defKeywords: words(\"class interface enum @interface\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  hooks: {\n    \"@\": function (stream) {\n      // Don't match the @interface keyword.\n      if (stream.match('interface', false)) return false;\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function (stream, state) {\n      if (!stream.match(/\"\"$/)) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    }\n  }\n});\nexport const csharp = clike({\n  keywords: words(\"abstract as async await base break case catch checked class const continue\" + \" default delegate do else enum event explicit extern finally fixed for\" + \" foreach goto if implicit in interface internal is lock namespace new\" + \" operator out override params private protected public readonly ref return sealed\" + \" sizeof stackalloc static struct switch this throw try typeof unchecked\" + \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" + \" global group into join let orderby partial remove select set value var yield\"),\n  types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" + \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" + \" UInt64 bool byte char decimal double short int long object\" + \" sbyte float string ushort uint ulong\"),\n  blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n  defKeywords: words(\"class interface namespace struct var\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"@\": function (stream, state) {\n      if (stream.eat('\"')) {\n        state.tokenize = tokenAtString;\n        return tokenAtString(stream, state);\n      }\n\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    }\n  }\n});\n\nfunction tokenTripleString(stream, state) {\n  var escaped = false;\n\n  while (!stream.eol()) {\n    if (!escaped && stream.match('\"\"\"')) {\n      state.tokenize = null;\n      break;\n    }\n\n    escaped = stream.next() == \"\\\\\" && !escaped;\n  }\n\n  return \"string\";\n}\n\nfunction tokenNestedComment(depth) {\n  return function (stream, state) {\n    var ch;\n\n    while (ch = stream.next()) {\n      if (ch == \"*\" && stream.eat(\"/\")) {\n        if (depth == 1) {\n          state.tokenize = null;\n          break;\n        } else {\n          state.tokenize = tokenNestedComment(depth - 1);\n          return state.tokenize(stream, state);\n        }\n      } else if (ch == \"/\" && stream.eat(\"*\")) {\n        state.tokenize = tokenNestedComment(depth + 1);\n        return state.tokenize(stream, state);\n      }\n    }\n\n    return \"comment\";\n  };\n}\n\nexport const scala = clike({\n  keywords: words(\n  /* scala */\n  \"abstract case catch class def do else extends final finally for forSome if \" + \"implicit import lazy match new null object override package private protected return \" + \"sealed super this throw trait try type val var while with yield _ \" +\n  /* package scala */\n  \"assert assume require print println printf readLine readBoolean readByte readShort \" + \"readChar readInt readLong readFloat readDouble\"),\n  types: words(\"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" + \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" + \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" + \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" + \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n  /* package java.lang */\n  \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" + \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" + \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" + \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"),\n  multiLineStrings: true,\n  blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n  defKeywords: words(\"class enum def object package trait type val var\"),\n  atoms: words(\"true false null\"),\n  indentStatements: false,\n  indentSwitch: false,\n  isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n  hooks: {\n    \"@\": function (stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function (stream, state) {\n      if (!stream.match('\"\"')) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function (stream) {\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    \"=\": function (stream, state) {\n      var cx = state.context;\n\n      if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n        state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev);\n        return \"operator\";\n      } else {\n        return false;\n      }\n    },\n    \"/\": function (stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenNestedComment(1);\n      return state.tokenize(stream, state);\n    }\n  },\n  languageData: {\n    closeBrackets: {\n      brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']\n    }\n  }\n});\n\nfunction tokenKotlinString(tripleString) {\n  return function (stream, state) {\n    var escaped = false,\n        next,\n        end = false;\n\n    while (!stream.eol()) {\n      if (!tripleString && !escaped && stream.match('\"')) {\n        end = true;\n        break;\n      }\n\n      if (tripleString && stream.match('\"\"\"')) {\n        end = true;\n        break;\n      }\n\n      next = stream.next();\n      if (!escaped && next == \"$\" && stream.match('{')) stream.skipTo(\"}\");\n      escaped = !escaped && next == \"\\\\\" && !tripleString;\n    }\n\n    if (end || !tripleString) state.tokenize = null;\n    return \"string\";\n  };\n}\n\nexport const kotlin = clike({\n  keywords: words(\n  /*keywords*/\n  \"package as typealias class interface this super val operator \" + \"var fun for is in This throw return annotation \" + \"break continue object if else while do try when !in !is as? \" +\n  /*soft keywords*/\n  \"file import where by get set abstract enum open inner override private public internal \" + \"protected catch finally out final vararg reified dynamic companion constructor init \" + \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" + \"external annotation crossinline const operator infix suspend actual expect setparam\"),\n  types: words(\n  /* package java.lang */\n  \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" + \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" + \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" + \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" + \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" + \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"),\n  intendSwitch: false,\n  indentStatements: false,\n  multiLineStrings: true,\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n  defKeywords: words(\"class val var object interface fun\"),\n  atoms: words(\"true false null this\"),\n  hooks: {\n    \"@\": function (stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '*': function (_stream, state) {\n      return state.prevToken == '.' ? 'variable' : 'operator';\n    },\n    '\"': function (stream, state) {\n      state.tokenize = tokenKotlinString(stream.match('\"\"'));\n      return state.tokenize(stream, state);\n    },\n    \"/\": function (stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenNestedComment(1);\n      return state.tokenize(stream, state);\n    },\n    indent: function (state, ctx, textAfter, indentUnit) {\n      var firstChar = textAfter && textAfter.charAt(0);\n      if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\") return state.indented;\n      if (state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\" || state.prevToken == \"variable\" && firstChar == \".\" || (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\") return indentUnit * 2 + ctx.indented;\n      if (ctx.align && ctx.type == \"}\") return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n    }\n  },\n  languageData: {\n    closeBrackets: {\n      brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']\n    }\n  }\n});\nexport const shader = clike({\n  keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" + \"sampler1DShadow sampler2DShadow \" + \"const attribute uniform varying \" + \"break continue discard return \" + \"for while do if else struct \" + \"in out inout\"),\n  types: words(\"float int bool void \" + \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" + \"mat2 mat3 mat4\"),\n  blockKeywords: words(\"for while do if else struct\"),\n  builtin: words(\"radians degrees sin cos tan asin acos atan \" + \"pow exp log exp2 sqrt inversesqrt \" + \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" + \"length distance dot cross normalize ftransform faceforward \" + \"reflect refract matrixCompMult \" + \"lessThan lessThanEqual greaterThan greaterThanEqual \" + \"equal notEqual any all not \" + \"texture1D texture1DProj texture1DLod texture1DProjLod \" + \"texture2D texture2DProj texture2DLod texture2DProjLod \" + \"texture3D texture3DProj texture3DLod texture3DProjLod \" + \"textureCube textureCubeLod \" + \"shadow1D shadow2D shadow1DProj shadow2DProj \" + \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" + \"dFdx dFdy fwidth \" + \"noise1 noise2 noise3 noise4\"),\n  atoms: words(\"true false \" + \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" + \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" + \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" + \"gl_FogCoord gl_PointCoord \" + \"gl_Position gl_PointSize gl_ClipVertex \" + \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" + \"gl_TexCoord gl_FogFragCoord \" + \"gl_FragCoord gl_FrontFacing \" + \"gl_FragData gl_FragDepth \" + \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" + \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" + \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" + \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" + \"gl_ProjectionMatrixInverseTranspose \" + \"gl_ModelViewProjectionMatrixInverseTranspose \" + \"gl_TextureMatrixInverseTranspose \" + \"gl_NormalScale gl_DepthRange gl_ClipPlane \" + \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" + \"gl_FrontLightModelProduct gl_BackLightModelProduct \" + \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" + \"gl_FogParameters \" + \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" + \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" + \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" + \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" + \"gl_MaxDrawBuffers\"),\n  indentSwitch: false,\n  hooks: {\n    \"#\": cppHook\n  }\n});\nexport const nesC = clike({\n  keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" + \"implementation includes interface module new norace nx_struct nx_union post provides \" + \"signal task uses abstract extends\"),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  atoms: words(\"null true false\"),\n  hooks: {\n    \"#\": cppHook\n  }\n});\nexport const objectiveC = clike({\n  keywords: words(cKeywords + \" \" + objCKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n  dontIndentStatements: /^@.*$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook\n  }\n});\nexport const objectiveCpp = clike({\n  keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n  dontIndentStatements: /^@.*$|^template$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function (stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" && (state.prevToken == \";\" || state.prevToken == null || state.prevToken == \"}\") && cppLooksLikeConstructor(stream.current())) return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n});\nexport const squirrel = clike({\n  keywords: words(\"base break clone continue const default delete enum extends function in class\" + \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n  types: cTypes,\n  blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n  defKeywords: words(\"function local class\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"#\": cppHook\n  }\n}); // Ceylon Strings need to deal with interpolation\n\nvar stringTokenizer = null;\n\nfunction tokenCeylonString(type) {\n  return function (stream, state) {\n    var escaped = false,\n        next,\n        end = false;\n\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"') && (type == \"single\" || stream.match('\"\"'))) {\n        end = true;\n        break;\n      }\n\n      if (!escaped && stream.match('``')) {\n        stringTokenizer = tokenCeylonString(type);\n        end = true;\n        break;\n      }\n\n      next = stream.next();\n      escaped = type == \"single\" && !escaped && next == \"\\\\\";\n    }\n\n    if (end) state.tokenize = null;\n    return \"string\";\n  };\n}\n\nexport const ceylon = clike({\n  keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" + \" exists extends finally for function given if import in interface is let module new\" + \" nonempty object of out outer package return satisfies super switch then this throw\" + \" try value void while\"),\n  types: function (word) {\n    // In Ceylon all identifiers that start with an uppercase are types\n    var first = word.charAt(0);\n    return first === first.toUpperCase() && first !== first.toLowerCase();\n  },\n  blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n  defKeywords: words(\"class dynamic function interface module object package value\"),\n  builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" + \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n  isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n  isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n  numberStart: /[\\d#$]/,\n  number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n  multiLineStrings: true,\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null larger smaller equal empty finished\"),\n  indentSwitch: false,\n  styleDefs: false,\n  hooks: {\n    \"@\": function (stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function (stream, state) {\n      state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n      return state.tokenize(stream, state);\n    },\n    '`': function (stream, state) {\n      if (!stringTokenizer || !stream.match('`')) return false;\n      state.tokenize = stringTokenizer;\n      stringTokenizer = null;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function (stream) {\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    token: function (_stream, state, style) {\n      if ((style == \"variable\" || style == \"type\") && state.prevToken == \".\") {\n        return \"variableName.special\";\n      }\n    }\n  },\n  languageData: {\n    closeBrackets: {\n      brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']\n    }\n  }\n});\n\nfunction pushInterpolationStack(state) {\n  (state.interpolationStack || (state.interpolationStack = [])).push(state.tokenize);\n}\n\nfunction popInterpolationStack(state) {\n  return (state.interpolationStack || (state.interpolationStack = [])).pop();\n}\n\nfunction sizeInterpolationStack(state) {\n  return state.interpolationStack ? state.interpolationStack.length : 0;\n}\n\nfunction tokenDartString(quote, stream, state, raw) {\n  var tripleQuoted = false;\n\n  if (stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;else return \"string\"; //empty string\n  }\n\n  function tokenStringHelper(stream, state) {\n    var escaped = false;\n\n    while (!stream.eol()) {\n      if (!raw && !escaped && stream.peek() == \"$\") {\n        pushInterpolationStack(state);\n        state.tokenize = tokenInterpolation;\n        return \"string\";\n      }\n\n      var next = stream.next();\n\n      if (next == quote && !escaped && (!tripleQuoted || stream.match(quote + quote))) {\n        state.tokenize = null;\n        break;\n      }\n\n      escaped = !raw && !escaped && next == \"\\\\\";\n    }\n\n    return \"string\";\n  }\n\n  state.tokenize = tokenStringHelper;\n  return tokenStringHelper(stream, state);\n}\n\nfunction tokenInterpolation(stream, state) {\n  stream.eat(\"$\");\n\n  if (stream.eat(\"{\")) {\n    // let clike handle the content of ${...},\n    // we take over again when \"}\" appears (see hooks).\n    state.tokenize = null;\n  } else {\n    state.tokenize = tokenInterpolationIdentifier;\n  }\n\n  return null;\n}\n\nfunction tokenInterpolationIdentifier(stream, state) {\n  stream.eatWhile(/[\\w_]/);\n  state.tokenize = popInterpolationStack(state);\n  return \"variable\";\n}\n\nexport const dart = clike({\n  keywords: words(\"this super static final const abstract class extends external factory \" + \"implements mixin get native set typedef with enum throw rethrow \" + \"assert break case continue default in return new deferred async await covariant \" + \"try catch finally do else for if switch while import library export \" + \"part of show hide is as extension on yield late required\"),\n  blockKeywords: words(\"try catch finally do else for if switch while\"),\n  builtin: words(\"void bool num int double dynamic var String Null Never\"),\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"@\": function (stream) {\n      stream.eatWhile(/[\\w\\$_\\.]/);\n      return \"meta\";\n    },\n    // custom string handling to deal with triple-quoted strings and string interpolation\n    \"'\": function (stream, state) {\n      return tokenDartString(\"'\", stream, state, false);\n    },\n    \"\\\"\": function (stream, state) {\n      return tokenDartString(\"\\\"\", stream, state, false);\n    },\n    \"r\": function (stream, state) {\n      var peek = stream.peek();\n\n      if (peek == \"'\" || peek == \"\\\"\") {\n        return tokenDartString(stream.next(), stream, state, true);\n      }\n\n      return false;\n    },\n    \"}\": function (_stream, state) {\n      // \"}\" is end of interpolation, if interpolation stack is non-empty\n      if (sizeInterpolationStack(state) > 0) {\n        state.tokenize = popInterpolationStack(state);\n        return null;\n      }\n\n      return false;\n    },\n    \"/\": function (stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenNestedComment(1);\n      return state.tokenize(stream, state);\n    },\n    token: function (stream, _, style) {\n      if (style == \"variable\") {\n        // Assume uppercase symbols are classes\n        var isUpper = RegExp('^[_$]*[A-Z][a-zA-Z0-9_$]*$', 'g');\n\n        if (isUpper.test(stream.current())) {\n          return 'type';\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["Context","indented","column","type","info","align","prev","pushContext","state","col","indent","context","popContext","t","typeBefore","stream","pos","prevToken","test","string","slice","typeAtEndOfLine","indentation","isTopScope","clike","parserConfig","statementIndentUnit","dontAlignCalls","keywords","types","builtin","blockKeywords","defKeywords","atoms","hooks","multiLineStrings","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","number","isOperatorChar","isIdentifierChar","isReservedIdentifier","curPunc","isDefKeyword","tokenBase","ch","next","result","tokenize","tokenString","backUp","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","contains","quote","escaped","end","maybeEnd","maybeEOL","typeFirstDefinitions","eol","startState","indentUnit","startOfLine","token","ctx","sol","eatSpace","style","start","undefined","styleDefs","textAfter","firstChar","charAt","closing","dontIndentStatements","hook","unit","switchBlock","allmanIndentation","languageData","indentOnInput","commentTokens","line","block","open","close","autocomplete","Object","keys","concat","words","str","obj","split","i","length","word","propertyIsEnumerable","cKeywords","cppKeywords","objCKeywords","objCBuiltins","basicCTypes","basicObjCTypes","cTypes","identifier","objCTypes","cBlockKeywords","cDefKeywords","cppHook","peek","pointerHook","_stream","cIsReservedIdentifier","toLowerCase","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","delim","replace","RegExp","c","cpp","java","tokenTripleString","csharp","tokenNestedComment","depth","scala","cx","closeBrackets","brackets","tokenKotlinString","tripleString","skipTo","kotlin","intendSwitch","shader","nesC","objectiveC","objectiveCpp","squirrel","stringTokenizer","tokenCeylonString","ceylon","first","toUpperCase","pushInterpolationStack","interpolationStack","push","popInterpolationStack","pop","sizeInterpolationStack","tokenDartString","raw","tripleQuoted","tokenStringHelper","tokenInterpolation","tokenInterpolationIdentifier","dart","_","isUpper"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/clike.js"],"sourcesContent":["function Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nexport function clike(parserConfig) {\n  var statementIndentUnit = parserConfig.statementIndentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(indentUnit) {\n      return {\n        tokenize: null,\n        context: new Context(-indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter, context) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return null;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, context.unit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit || context.unit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + (statementIndentUnit || context.unit);\n\n      return ctx.indented + (closing ? 0 : context.unit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? context.unit : 0);\n    },\n\n    languageData: {\n      indentOnInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n      commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n      autocomplete: Object.keys(keywords).concat(Object.keys(types)).concat(Object.keys(builtin)).concat(Object.keys(atoms)),\n      ...parserConfig.languageData\n    }\n  };\n};\n\nfunction words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nfunction contains(words, word) {\n  if (typeof words === \"function\") {\n    return words(word);\n  } else {\n    return words.propertyIsEnumerable(word);\n  }\n}\nvar cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n// Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\nvar cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n    \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n    \"explicit export final friend import module mutable namespace new noexcept \" +\n    \"not not_eq operator or or_eq override private protected public \" +\n    \"reinterpret_cast requires static_assert static_cast template this \" +\n    \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\nvar objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n    \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n    \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n    \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n    \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\nvar objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n    \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n    \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n    \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n// Do not use this. Use the cTypes function below. This is global just to avoid\n// excessive calls when cTypes is being called multiple times during a parse.\nvar basicCTypes = words(\"int long char short double float unsigned signed \" +\n                        \"void bool\");\n\n// Do not use this. Use the objCTypes function below. This is global just to avoid\n// excessive calls when objCTypes is being called multiple times during a parse.\nvar basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n// Returns true if identifier is a \"C\" type.\n// C type is defined as those that are reserved by the compiler (basicTypes),\n// and those that end in _t (Reserved by POSIX for types)\n// http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\nfunction cTypes(identifier) {\n  return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n}\n\n// Returns true if identifier is a \"Objective C\" type.\nfunction objCTypes(identifier) {\n  return cTypes(identifier) || contains(basicObjCTypes, identifier);\n}\n\nvar cBlockKeywords = \"case do else for if switch while struct enum union\";\nvar cDefKeywords = \"struct enum union\";\n\nfunction cppHook(stream, state) {\n  if (!state.startOfLine) return false\n  for (var ch, next = null; ch = stream.peek();) {\n    if (ch == \"\\\\\" && stream.match(/^.$/)) {\n      next = cppHook\n      break\n    } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n      break\n    }\n    stream.next()\n  }\n  state.tokenize = next\n  return \"meta\"\n}\n\nfunction pointerHook(_stream, state) {\n  if (state.prevToken == \"type\") return \"type\";\n  return false;\n}\n\n// For C and C++ (and ObjC): identifiers starting with __\n// or _ followed by a capital letter are reserved for the compiler.\nfunction cIsReservedIdentifier(token) {\n  if (!token || token.length < 2) return false;\n  if (token[0] != '_') return false;\n  return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n}\n\nfunction cpp14Literal(stream) {\n  stream.eatWhile(/[\\w\\.']/);\n  return \"number\";\n}\n\nfunction cpp11StringHook(stream, state) {\n  stream.backUp(1);\n  // Raw strings.\n  if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n    var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n    if (!match) {\n      return false;\n    }\n    state.cpp11RawStringDelim = match[1];\n    state.tokenize = tokenRawString;\n    return tokenRawString(stream, state);\n  }\n  // Unicode strings/chars.\n  if (stream.match(/^(?:u8|u|U|L)/)) {\n    if (stream.match(/^[\"']/, /* eat */ false)) {\n      return \"string\";\n    }\n    return false;\n  }\n  // Ignore this hook.\n  stream.next();\n  return false;\n}\n\nfunction cppLooksLikeConstructor(word) {\n  var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n  return lastTwo && lastTwo[1] == lastTwo[2];\n}\n\n// C#-style strings where \"\" escapes a quote.\nfunction tokenAtString(stream, state) {\n  var next;\n  while ((next = stream.next()) != null) {\n    if (next == '\"' && !stream.eat('\"')) {\n      state.tokenize = null;\n      break;\n    }\n  }\n  return \"string\";\n}\n\n// C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n// <delim> can be a string up to 16 characters long.\nfunction tokenRawString(stream, state) {\n  // Escape characters that have special regex meanings.\n  var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n  var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n  if (match)\n    state.tokenize = null;\n  else\n    stream.skipToEnd();\n  return \"string\";\n}\n\nexport const c = clike({\n  keywords: words(cKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  defKeywords: words(cDefKeywords),\n  typeFirstDefinitions: true,\n  atoms: words(\"NULL true false\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n  }\n})\n\nexport const cpp = clike({\n  keywords: words(cKeywords + \" \" + cppKeywords),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords + \" class try catch\"),\n  defKeywords: words(cDefKeywords + \" class namespace\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false NULL nullptr\"),\n  dontIndentStatements: /^template$/,\n  isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function(stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" &&\n          (state.prevToken == \";\" || state.prevToken == null ||\n           state.prevToken == \"}\") &&\n          cppLooksLikeConstructor(stream.current()))\n        return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n});\n\nexport const java = clike({\n  keywords: words(\"abstract assert break case catch class const continue default \" +\n                  \"do else enum extends final finally for goto if implements import \" +\n                  \"instanceof interface native new package private protected public \" +\n                  \"return static strictfp super switch synchronized this throw throws transient \" +\n                  \"try volatile while @interface\"),\n  types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n               \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n  blockKeywords: words(\"catch class do else finally for if switch try while\"),\n  defKeywords: words(\"class interface enum @interface\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  hooks: {\n    \"@\": function(stream) {\n      // Don't match the @interface keyword.\n      if (stream.match('interface', false)) return false;\n\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      if (!stream.match(/\"\"$/)) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    }\n  }\n})\n\nexport const csharp = clike({\n  keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                  \" default delegate do else enum event explicit extern finally fixed for\" +\n                  \" foreach goto if implicit in interface internal is lock namespace new\" +\n                  \" operator out override params private protected public readonly ref return sealed\" +\n                  \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                  \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                  \" global group into join let orderby partial remove select set value var yield\"),\n  types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n               \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n               \" UInt64 bool byte char decimal double short int long object\"  +\n               \" sbyte float string ushort uint ulong\"),\n  blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n  defKeywords: words(\"class interface namespace struct var\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"@\": function(stream, state) {\n      if (stream.eat('\"')) {\n        state.tokenize = tokenAtString;\n        return tokenAtString(stream, state);\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    }\n  }\n});\n\nfunction tokenTripleString(stream, state) {\n  var escaped = false;\n  while (!stream.eol()) {\n    if (!escaped && stream.match('\"\"\"')) {\n      state.tokenize = null;\n      break;\n    }\n    escaped = stream.next() == \"\\\\\" && !escaped;\n  }\n  return \"string\";\n}\n\nfunction tokenNestedComment(depth) {\n  return function (stream, state) {\n    var ch\n    while (ch = stream.next()) {\n      if (ch == \"*\" && stream.eat(\"/\")) {\n        if (depth == 1) {\n          state.tokenize = null\n          break\n        } else {\n          state.tokenize = tokenNestedComment(depth - 1)\n          return state.tokenize(stream, state)\n        }\n      } else if (ch == \"/\" && stream.eat(\"*\")) {\n        state.tokenize = tokenNestedComment(depth + 1)\n        return state.tokenize(stream, state)\n      }\n    }\n    return \"comment\"\n  }\n}\n\nexport const scala = clike({\n  keywords: words(\n    /* scala */\n    \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n    /* package scala */\n    \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n  ),\n  types: words(\n    \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n    /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n  ),\n  multiLineStrings: true,\n  blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n  defKeywords: words(\"class enum def object package trait type val var\"),\n  atoms: words(\"true false null\"),\n  indentStatements: false,\n  indentSwitch: false,\n  isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      if (!stream.match('\"\"')) return false;\n      state.tokenize = tokenTripleString;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function(stream) {\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    \"=\": function(stream, state) {\n      var cx = state.context\n      if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n        state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n        return \"operator\"\n      } else {\n        return false\n      }\n    },\n\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false\n      state.tokenize = tokenNestedComment(1)\n      return state.tokenize(stream, state)\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n});\n\nfunction tokenKotlinString(tripleString){\n  return function (stream, state) {\n    var escaped = false, next, end = false;\n    while (!stream.eol()) {\n      if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n      if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n      next = stream.next();\n      if(!escaped && next == \"$\" && stream.match('{'))\n        stream.skipTo(\"}\");\n      escaped = !escaped && next == \"\\\\\" && !tripleString;\n    }\n    if (end || !tripleString)\n      state.tokenize = null;\n    return \"string\";\n  }\n}\n\nexport const kotlin = clike({\n  keywords: words(\n    /*keywords*/\n    \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n    /*soft keywords*/\n    \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam\"\n  ),\n  types: words(\n    /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n  ),\n  intendSwitch: false,\n  indentStatements: false,\n  multiLineStrings: true,\n  number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n  blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n  defKeywords: words(\"class val var object interface fun\"),\n  atoms: words(\"true false null this\"),\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '*': function(_stream, state) {\n      return state.prevToken == '.' ? 'variable' : 'operator';\n    },\n    '\"': function(stream, state) {\n      state.tokenize = tokenKotlinString(stream.match('\"\"'));\n      return state.tokenize(stream, state);\n    },\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenNestedComment(1);\n      return state.tokenize(stream, state)\n    },\n    indent: function(state, ctx, textAfter, indentUnit) {\n      var firstChar = textAfter && textAfter.charAt(0);\n      if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n        return state.indented;\n      if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n        return indentUnit * 2 + ctx.indented;\n      if (ctx.align && ctx.type == \"}\")\n        return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n});\n\nexport const shader = clike({\n  keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                  \"sampler1DShadow sampler2DShadow \" +\n                  \"const attribute uniform varying \" +\n                  \"break continue discard return \" +\n                  \"for while do if else struct \" +\n                  \"in out inout\"),\n  types: words(\"float int bool void \" +\n               \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n               \"mat2 mat3 mat4\"),\n  blockKeywords: words(\"for while do if else struct\"),\n  builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                 \"pow exp log exp2 sqrt inversesqrt \" +\n                 \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                 \"length distance dot cross normalize ftransform faceforward \" +\n                 \"reflect refract matrixCompMult \" +\n                 \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                 \"equal notEqual any all not \" +\n                 \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                 \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                 \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                 \"textureCube textureCubeLod \" +\n                 \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                 \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                 \"dFdx dFdy fwidth \" +\n                 \"noise1 noise2 noise3 noise4\"),\n  atoms: words(\"true false \" +\n               \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n               \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n               \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n               \"gl_FogCoord gl_PointCoord \" +\n               \"gl_Position gl_PointSize gl_ClipVertex \" +\n               \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n               \"gl_TexCoord gl_FogFragCoord \" +\n               \"gl_FragCoord gl_FrontFacing \" +\n               \"gl_FragData gl_FragDepth \" +\n               \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n               \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n               \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n               \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n               \"gl_ProjectionMatrixInverseTranspose \" +\n               \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n               \"gl_TextureMatrixInverseTranspose \" +\n               \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n               \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n               \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n               \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n               \"gl_FogParameters \" +\n               \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n               \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n               \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n               \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n               \"gl_MaxDrawBuffers\"),\n  indentSwitch: false,\n  hooks: {\"#\": cppHook}\n})\n\nexport const nesC = clike({\n  keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                  \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                  \"signal task uses abstract extends\"),\n  types: cTypes,\n  blockKeywords: words(cBlockKeywords),\n  atoms: words(\"null true false\"),\n  hooks: {\"#\": cppHook}\n})\n\nexport const objectiveC = clike({\n  keywords: words(cKeywords + \" \" + objCKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n  dontIndentStatements: /^@.*$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n  }\n})\n\nexport const objectiveCpp = clike({\n  keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n  types: objCTypes,\n  builtin: words(objCBuiltins),\n  blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n  defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n  dontIndentStatements: /^@.*$|^template$/,\n  typeFirstDefinitions: true,\n  atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n  isReservedIdentifier: cIsReservedIdentifier,\n  hooks: {\n    \"#\": cppHook,\n    \"*\": pointerHook,\n    \"u\": cpp11StringHook,\n    \"U\": cpp11StringHook,\n    \"L\": cpp11StringHook,\n    \"R\": cpp11StringHook,\n    \"0\": cpp14Literal,\n    \"1\": cpp14Literal,\n    \"2\": cpp14Literal,\n    \"3\": cpp14Literal,\n    \"4\": cpp14Literal,\n    \"5\": cpp14Literal,\n    \"6\": cpp14Literal,\n    \"7\": cpp14Literal,\n    \"8\": cpp14Literal,\n    \"9\": cpp14Literal,\n    token: function(stream, state, style) {\n      if (style == \"variable\" && stream.peek() == \"(\" &&\n          (state.prevToken == \";\" || state.prevToken == null ||\n           state.prevToken == \"}\") &&\n          cppLooksLikeConstructor(stream.current()))\n        return \"def\";\n    }\n  },\n  namespaceSeparator: \"::\"\n})\n\nexport const squirrel = clike({\n  keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                  \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n  types: cTypes,\n  blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n  defKeywords: words(\"function local class\"),\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null\"),\n  hooks: {\"#\": cppHook}\n})\n\n// Ceylon Strings need to deal with interpolation\nvar stringTokenizer = null;\nfunction tokenCeylonString(type) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"') &&\n          (type == \"single\" || stream.match('\"\"'))) {\n        end = true;\n        break;\n      }\n      if (!escaped && stream.match('``')) {\n        stringTokenizer = tokenCeylonString(type);\n        end = true;\n        break;\n      }\n      next = stream.next();\n      escaped = type == \"single\" && !escaped && next == \"\\\\\";\n    }\n    if (end)\n      state.tokenize = null;\n    return \"string\";\n  }\n}\n\nexport const ceylon = clike({\n  keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                  \" exists extends finally for function given if import in interface is let module new\" +\n                  \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                  \" try value void while\"),\n  types: function(word) {\n    // In Ceylon all identifiers that start with an uppercase are types\n    var first = word.charAt(0);\n    return (first === first.toUpperCase() && first !== first.toLowerCase());\n  },\n  blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n  defKeywords: words(\"class dynamic function interface module object package value\"),\n  builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                 \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n  isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n  isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n  numberStart: /[\\d#$]/,\n  number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n  multiLineStrings: true,\n  typeFirstDefinitions: true,\n  atoms: words(\"true false null larger smaller equal empty finished\"),\n  indentSwitch: false,\n  styleDefs: false,\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_]/);\n      return \"meta\";\n    },\n    '\"': function(stream, state) {\n      state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n      return state.tokenize(stream, state);\n    },\n    '`': function(stream, state) {\n      if (!stringTokenizer || !stream.match('`')) return false;\n      state.tokenize = stringTokenizer;\n      stringTokenizer = null;\n      return state.tokenize(stream, state);\n    },\n    \"'\": function(stream) {\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      return \"atom\";\n    },\n    token: function(_stream, state, style) {\n      if ((style == \"variable\" || style == \"type\") &&\n          state.prevToken == \".\") {\n        return \"variableName.special\";\n      }\n    }\n  },\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', '\"\"\"']}\n  }\n})\n\nfunction pushInterpolationStack(state) {\n  (state.interpolationStack || (state.interpolationStack = [])).push(state.tokenize);\n}\n\nfunction popInterpolationStack(state) {\n  return (state.interpolationStack || (state.interpolationStack = [])).pop();\n}\n\nfunction sizeInterpolationStack(state) {\n  return state.interpolationStack ? state.interpolationStack.length : 0;\n}\n\nfunction tokenDartString(quote, stream, state, raw) {\n  var tripleQuoted = false;\n  if (stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;\n    else return \"string\"; //empty string\n  }\n  function tokenStringHelper(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!raw && !escaped && stream.peek() == \"$\") {\n        pushInterpolationStack(state);\n        state.tokenize = tokenInterpolation;\n        return \"string\";\n      }\n      var next = stream.next();\n      if (next == quote && !escaped && (!tripleQuoted || stream.match(quote + quote))) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = !raw && !escaped && next == \"\\\\\";\n    }\n    return \"string\";\n  }\n  state.tokenize = tokenStringHelper;\n  return tokenStringHelper(stream, state);\n}\n\nfunction tokenInterpolation(stream, state) {\n  stream.eat(\"$\");\n  if (stream.eat(\"{\")) {\n    // let clike handle the content of ${...},\n    // we take over again when \"}\" appears (see hooks).\n    state.tokenize = null;\n  } else {\n    state.tokenize = tokenInterpolationIdentifier;\n  }\n  return null;\n}\n\nfunction tokenInterpolationIdentifier(stream, state) {\n  stream.eatWhile(/[\\w_]/);\n  state.tokenize = popInterpolationStack(state);\n  return \"variable\";\n}\n\nexport const dart = clike({\n  keywords: words(\"this super static final const abstract class extends external factory \" +\n                  \"implements mixin get native set typedef with enum throw rethrow \" +\n                  \"assert break case continue default in return new deferred async await covariant \" +\n                  \"try catch finally do else for if switch while import library export \" +\n                  \"part of show hide is as extension on yield late required\"),\n  blockKeywords: words(\"try catch finally do else for if switch while\"),\n  builtin: words(\"void bool num int double dynamic var String Null Never\"),\n  atoms: words(\"true false null\"),\n  hooks: {\n    \"@\": function(stream) {\n      stream.eatWhile(/[\\w\\$_\\.]/);\n      return \"meta\";\n    },\n\n    // custom string handling to deal with triple-quoted strings and string interpolation\n    \"'\": function(stream, state) {\n      return tokenDartString(\"'\", stream, state, false);\n    },\n    \"\\\"\": function(stream, state) {\n      return tokenDartString(\"\\\"\", stream, state, false);\n    },\n    \"r\": function(stream, state) {\n      var peek = stream.peek();\n      if (peek == \"'\" || peek == \"\\\"\") {\n        return tokenDartString(stream.next(), stream, state, true);\n      }\n      return false;\n    },\n\n    \"}\": function(_stream, state) {\n      // \"}\" is end of interpolation, if interpolation stack is non-empty\n      if (sizeInterpolationStack(state) > 0) {\n        state.tokenize = popInterpolationStack(state);\n        return null;\n      }\n      return false;\n    },\n\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false\n      state.tokenize = tokenNestedComment(1)\n      return state.tokenize(stream, state)\n    },\n    token: function(stream, _, style) {\n      if (style == \"variable\") {\n        // Assume uppercase symbols are classes\n        var isUpper = RegExp('^[_$]*[A-Z][a-zA-Z0-9_$]*$','g');\n        if (isUpper.test(stream.current())) {\n          return 'type';\n        }\n      }\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}