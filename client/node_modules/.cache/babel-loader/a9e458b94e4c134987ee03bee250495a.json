{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar contentDisposition = require('content-disposition');\n\nvar deprecate = require('depd')('express');\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar http = require('http');\n\nvar isAbsolute = require('./utils').isAbsolute;\n\nvar onFinished = require('on-finished');\n\nvar path = require('path');\n\nvar statuses = require('statuses');\n\nvar merge = require('utils-merge');\n\nvar sign = require('cookie-signature').sign;\n\nvar normalizeType = require('./utils').normalizeType;\n\nvar normalizeTypes = require('./utils').normalizeTypes;\n\nvar setCharset = require('./utils').setCharset;\n\nvar cookie = require('cookie');\n\nvar send = require('send');\n\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\n\nvar vary = require('vary');\n/**\n * Response prototype.\n * @public\n */\n\n\nvar res = Object.create(http.ServerResponse.prototype);\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res;\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\n\nres.links = function (links) {\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function (rel) {\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type; // settings\n\n  var app = this.app; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  } // disambiguate res.send(status) and res.send(status, num)\n\n\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk];\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n\n      break;\n\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n\n      break;\n  } // write strings in utf-8\n\n\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type'); // reflect this in content-type\n\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  } // determine if ETag should be generated\n\n\n  var etagFn = app.get('etag fn');\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'; // populate Content-Length\n\n  var len;\n\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length;\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding);\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding);\n      encoding = undefined;\n      len = chunk.length;\n    }\n\n    this.set('Content-Length', len);\n  } // populate ETag\n\n\n  var etag;\n\n  if (generateETag && len !== undefined) {\n    if (etag = etagFn(chunk, encoding)) {\n      this.set('ETag', etag);\n    }\n  } // freshness\n\n\n  if (req.fresh) this.statusCode = 304; // strip irrelevant headers\n\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\n\nres.json = function json(obj) {\n  var val = obj; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  } // settings\n\n\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape); // content-type\n\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\n\nres.jsonp = function jsonp(obj) {\n  var val = obj; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  } // settings\n\n\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape);\n  var callback = this.req.query[app.get('jsonp callback name')]; // content-type\n\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  } // fixup callback\n\n\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  } // jsonp\n\n\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript'); // restrict callback charset\n\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, ''); // replace chars not allowed in JavaScript that are in JSON\n\n    body = body.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029'); // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode);\n  this.statusCode = statusCode;\n  this.type('txt');\n  return this.send(body);\n};\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile');\n  } // support function as second arg\n\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  } // create file stream\n\n\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts); // transfer\n\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next(); // next() all but write errors\n\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {}; // support function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // create file stream\n\n\n  var file = send(req, path, opts); // transfer\n\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next(); // next() all but write errors\n\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile, 'res.sendfile: Use res.sendFile instead');\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download(path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null; // support function as second or third arg\n\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null;\n  } else if (typeof options === 'function') {\n    done = options;\n    opts = null;\n  } // set Content-Disposition when file is sent\n\n\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  }; // merge user-provided headers\n\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key];\n      }\n    }\n  } // merge user-provided options\n\n\n  opts = Object.create(opts);\n  opts.headers = headers; // Resolve the full path for sendFile\n\n  var fullPath = resolve(path); // send file\n\n  return this.sendFile(fullPath, opts, done);\n};\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.contentType = res.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1 ? mime.lookup(type) : type;\n  return this.set('Content-Type', ct);\n};\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.format = function (obj) {\n  var req = this.req;\n  var next = req.next;\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n  var key = keys.length > 0 ? req.accepts(keys) : false;\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function (o) {\n      return o.value;\n    });\n    next(err);\n  }\n\n  return this;\n};\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n  return this;\n};\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val) : Array.isArray(val) ? [prev].concat(val) : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.set = res.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val) ? val.map(String) : String(val); // add charset to content-type\n\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n\n  return this;\n};\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\n\nres.get = function (field) {\n  return this.getHeader(field);\n};\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({\n    expires: new Date(1),\n    path: '/'\n  }, options);\n  return this.cookie(name, '', opts);\n};\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n  return this;\n};\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.location = function location(url) {\n  var loc = url; // \"back\" is an alias for the referrer\n\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  } // set location\n\n\n  return this.set('Location', encodeUrl(loc));\n};\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302; // allow status / url\n\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  } // Set location header\n\n\n  address = this.location(address).get('Location'); // Support text/{plain,html} by default\n\n  this.format({\n    text: function () {\n      body = statuses[status] + '. Redirecting to ' + address;\n    },\n    html: function () {\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>';\n    },\n    default: function () {\n      body = '';\n    }\n  }); // Respond\n\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\n\nres.vary = function (field) {\n  // checks for back-compat\n  if (!field || Array.isArray(field) && !field.length) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n  return this;\n};\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this; // support callback function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // merge res.locals\n\n\n  opts._locals = self.locals; // default callback to respond\n\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  }; // render\n\n\n  app.render(view, opts, done);\n}; // pipe the send file stream\n\n\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming; // request aborted\n\n  function onaborted() {\n    if (done) return;\n    done = true;\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  } // directory\n\n\n  function ondirectory() {\n    if (done) return;\n    done = true;\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  } // errors\n\n\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  } // ended\n\n\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  } // file\n\n\n  function onfile() {\n    streaming = false;\n  } // finished\n\n\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  } // streaming\n\n\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  } // pipe\n\n\n  file.pipe(res);\n}\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\n\nfunction stringify(value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces ? JSON.stringify(value, replacer, spaces) : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c';\n\n        case 0x3e:\n          return '\\\\u003e';\n\n        case 0x26:\n          return '\\\\u0026';\n\n        /* istanbul ignore next: unreachable default */\n\n        default:\n          return c;\n      }\n    });\n  }\n\n  return json;\n}","map":{"version":3,"names":["Buffer","require","contentDisposition","deprecate","encodeUrl","escapeHtml","http","isAbsolute","onFinished","path","statuses","merge","sign","normalizeType","normalizeTypes","setCharset","cookie","send","extname","mime","resolve","vary","res","Object","create","ServerResponse","prototype","module","exports","charsetRegExp","status","code","statusCode","links","link","get","set","keys","map","rel","join","body","chunk","encoding","req","type","app","arguments","length","isBuffer","json","etagFn","generateETag","len","undefined","byteLength","from","etag","fresh","removeHeader","method","end","obj","val","escape","replacer","spaces","stringify","jsonp","callback","query","Array","isArray","replace","sendStatus","String","sendFile","options","done","next","opts","TypeError","root","pathname","encodeURI","file","sendfile","err","syscall","function","download","filename","name","headers","i","key","toLowerCase","fullPath","contentType","ct","indexOf","lookup","format","fn","default","accepts","value","Error","types","o","attachment","append","field","prev","concat","header","test","charset","charsets","split","setHeader","getHeader","clearCookie","expires","Date","secret","signed","JSON","now","maxAge","serialize","location","url","loc","redirect","address","text","html","u","render","view","self","_locals","locals","str","streaming","onaborted","ondirectory","onerror","onend","onfile","onfinish","setImmediate","onstream","on","k","pipe","c","charCodeAt"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/express/lib/response.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    // replace chars not allowed in JavaScript that are in JSON\n    body = body\n      .replace(/\\u2028/g, '\\\\u2028')\n      .replace(/\\u2029/g, '\\\\u2029');\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = resolve(path);\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function(o){ return o.value });\n    next(err);\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n      : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}