{"ast":null,"code":"/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","map":{"version":3,"names":["s","m","h","d","y","module","exports","val","options","type","length","parse","isNaN","long","fmtLong","fmtShort","Error","JSON","stringify","str","String","match","exec","n","parseFloat","toLowerCase","undefined","ms","Math","round","plural","name","floor","ceil"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/ms/index.js"],"sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}