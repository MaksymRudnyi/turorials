{"ast":null,"code":"// @ts-nocheck\nimport refractorMarkup from './markup.js';\nxeora.displayName = 'xeora';\nxeora.aliases = ['xeoracube'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function xeora(Prism) {\n  Prism.register(refractorMarkup);\n\n  (function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      variable: Prism.languages.xeora['function-inline'].inside['variable']\n    }, Prism.languages.xeora['function-block']);\n    Prism.languages.xeoracube = Prism.languages.xeora;\n  })(Prism);\n}","map":{"version":3,"names":["refractorMarkup","xeora","displayName","aliases","Prism","register","languages","extend","constant","pattern","inside","punctuation","variable","operator","alias","tag","attribute","insertBefore","xeoracube"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/xeora.js"],"sourcesContent":["// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\n\n/** @type {import('../core.js').Syntax} */\nexport default function xeora(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}