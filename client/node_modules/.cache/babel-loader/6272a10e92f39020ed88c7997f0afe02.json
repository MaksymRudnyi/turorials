{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nexport var header = {\n  name: 'header',\n  keyCommand: 'header',\n  button: {\n    'aria-label': 'Add header text'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    fill: \"currentColor\",\n    viewBox: \"0 0 448 512\",\n    height: \"13\",\n    width: \"13\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M448 448c0 17.69-14.33 32-32 32h-96c-17.67 0-32-14.31-32-32s14.33-32 32-32h16V272H112v144h16c17.67 0 32 14.31 32 32s-14.33 32-32 32H32c-17.67 0-32-14.31-32-32s14.33-32 32-32h16V96H32C14.33 96 0 81.69 0 64s14.33-32 32-32h96c17.67 0 32 14.31 32 32s-14.33 32-32 32h-16v112h224V96h-16c-17.67 0-32-14.31-32-32s14.33-32 32-32h96c17.67 0 32 14.31 32 32s-14.33 32-32 32h-16v320h16c17.7 0 32 14.3 32 32z\"\n    })\n  }),\n  execute: _ref => {\n    var {\n      state,\n      view\n    } = _ref;\n    if (!state || !view) return;\n    var lineInfo = view.state.doc.lineAt(view.state.selection.main.from);\n    var mark = '#';\n    var matchMark = lineInfo.text.match(/^#+/);\n\n    if (matchMark && matchMark[0]) {\n      var txt = matchMark[0];\n\n      if (txt.length < 6) {\n        mark = txt + '#';\n      }\n    }\n\n    if (mark.length > 6) {\n      mark = '#';\n    }\n\n    var title = lineInfo.text.replace(/^#+/, '');\n    view.dispatch({\n      changes: {\n        from: lineInfo.from,\n        to: lineInfo.to,\n        insert: mark + \" \" + title\n      },\n      // selection: EditorSelection.range(lineInfo.from + mark.length, lineInfo.to),\n      selection: {\n        anchor: lineInfo.from + mark.length + 1\n      }\n    });\n  }\n};","map":{"version":3,"sources":["../../src/commands/header.tsx"],"names":["header","name","keyCommand","button","icon","execute","view","lineInfo","mark","matchMark","txt","title","changes","from","to","insert","selection","anchor"],"mappings":";AAEA,OAAO,IAAMA,MAAgB,GAAG;EAC9BC,IAAI,EAD0B,QAAA;EAE9BC,UAAU,EAFoB,QAAA;EAG9BC,MAAM,EAAE;IAAE,cAAc;EAAhB,CAHsB;EAI9BC,IAAI,EAAA,aACF,IAAA,CAAA,KAAA,EAAA;IAAK,IAAI,EAAT,cAAA;IAAyB,OAAO,EAAhC,aAAA;IAA+C,MAAM,EAArD,IAAA;IAA2D,KAAK,EAAhE,IAAA;IAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;MAAM,CAAC,EAAC;IAAR,CAAA;EADF,CAAA,CAL4B;EAS9BC,OAAO,EAAE,IAAA,IAAqB;IAAA,IAApB;MAAA,KAAA;MAASC;IAAT,IAAoB,IAAA;IAC5B,IAAI,CAAA,KAAA,IAAU,CAAd,IAAA,EAAqB;IACrB,IAAMC,QAAQ,GAAGD,IAAI,CAAJA,KAAAA,CAAAA,GAAAA,CAAAA,MAAAA,CAAsBA,IAAI,CAAJA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAvC,IAAiBA,CAAjB;IACA,IAAIE,IAAI,GAAR,GAAA;IACA,IAAMC,SAAS,GAAGF,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAlB,KAAkBA,CAAlB;;IACA,IAAIE,SAAS,IAAIA,SAAS,CAA1B,CAA0B,CAA1B,EAA+B;MAC7B,IAAMC,GAAG,GAAGD,SAAS,CAArB,CAAqB,CAArB;;MACA,IAAIC,GAAG,CAAHA,MAAAA,GAAJ,CAAA,EAAoB;QAClBF,IAAI,GAAGE,GAAG,GAAVF,GAAAA;MACD;IACF;;IACD,IAAIA,IAAI,CAAJA,MAAAA,GAAJ,CAAA,EAAqB;MACnBA,IAAI,GAAJA,GAAAA;IACD;;IACD,IAAMG,KAAK,GAAGJ,QAAQ,CAARA,IAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAAd,EAAcA,CAAd;IACAD,IAAI,CAAJA,QAAAA,CAAc;MACZM,OAAO,EAAE;QACPC,IAAI,EAAEN,QAAQ,CADP,IAAA;QAEPO,EAAE,EAAEP,QAAQ,CAFL,EAAA;QAGPQ,MAAM,EAAKP,IAAL,GAAA,GAAKA,GAAQG;MAHZ,CADG;MAMZ;MACAK,SAAS,EAAE;QAAEC,MAAM,EAAEV,QAAQ,CAARA,IAAAA,GAAgBC,IAAI,CAApBD,MAAAA,GAA8B;MAAxC;IAPC,CAAdD;EASD;AAjC6B,CAAzB","sourcesContent":["import { ICommand } from './';\n\nexport const header: ICommand = {\n  name: 'header',\n  keyCommand: 'header',\n  button: { 'aria-label': 'Add header text' },\n  icon: (\n    <svg fill=\"currentColor\" viewBox=\"0 0 448 512\" height=\"13\" width=\"13\">\n      <path d=\"M448 448c0 17.69-14.33 32-32 32h-96c-17.67 0-32-14.31-32-32s14.33-32 32-32h16V272H112v144h16c17.67 0 32 14.31 32 32s-14.33 32-32 32H32c-17.67 0-32-14.31-32-32s14.33-32 32-32h16V96H32C14.33 96 0 81.69 0 64s14.33-32 32-32h96c17.67 0 32 14.31 32 32s-14.33 32-32 32h-16v112h224V96h-16c-17.67 0-32-14.31-32-32s14.33-32 32-32h96c17.67 0 32 14.31 32 32s-14.33 32-32 32h-16v320h16c17.7 0 32 14.3 32 32z\" />\n    </svg>\n  ),\n  execute: ({ state, view }) => {\n    if (!state || !view) return;\n    const lineInfo = view.state.doc.lineAt(view.state.selection.main.from);\n    let mark = '#';\n    const matchMark = lineInfo.text.match(/^#+/);\n    if (matchMark && matchMark[0]) {\n      const txt = matchMark[0];\n      if (txt.length < 6) {\n        mark = txt + '#';\n      }\n    }\n    if (mark.length > 6) {\n      mark = '#';\n    }\n    const title = lineInfo.text.replace(/^#+/, '');\n    view.dispatch({\n      changes: {\n        from: lineInfo.from,\n        to: lineInfo.to,\n        insert: `${mark} ${title}`,\n      },\n      // selection: EditorSelection.range(lineInfo.from + mark.length, lineInfo.to),\n      selection: { anchor: lineInfo.from + mark.length + 1 },\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}