{"ast":null,"code":"import React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var quote = {\n  name: 'quote',\n  keyCommand: 'quote',\n  button: {\n    'aria-label': 'Add quote text'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    fill: \"currentColor\",\n    viewBox: \"0 0 448 512\",\n    height: \"15\",\n    width: \"15\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M96 96c-53.02 0-96 42.1-96 96s42.98 96 96 96c11.28 0 21.95-2.305 32-5.879V288c0 35.3-28.7 64-64 64-17.67 0-32 14.33-32 32s14.33 32 32 32c70.58 0 128-57.42 128-128v-96c0-53.9-43-96-96-96zm352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96 42.98 96 96 96c11.28 0 21.95-2.305 32-5.879V288c0 35.3-28.7 64-64 64-17.67 0-32 14.33-32 32s14.33 32 32 32c70.58 0 128-57.42 128-128v-96z\"\n    })\n  }),\n  execute: _ref => {\n    var {\n      state,\n      view\n    } = _ref;\n    if (!state || !view) return;\n    var lineInfo = view.state.doc.lineAt(view.state.selection.main.from);\n    var mark = '> ';\n    var matchMark = lineInfo.text.match(/^>\\s/);\n\n    if (matchMark && matchMark[0]) {\n      mark = '';\n    }\n\n    view.dispatch({\n      changes: {\n        from: lineInfo.from,\n        to: lineInfo.to,\n        insert: \"\" + mark + lineInfo.text\n      },\n      // selection: EditorSelection.range(lineInfo.from + mark.length, lineInfo.to),\n      selection: {\n        anchor: view.state.selection.main.from + mark.length\n      }\n    });\n  }\n};","map":{"version":3,"sources":["../../src/commands/quote.tsx"],"names":["quote","name","keyCommand","button","icon","execute","view","lineInfo","mark","matchMark","changes","from","to","insert","text","selection","anchor","length"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;AAGA,OAAO,IAAMA,KAAe,GAAG;EAC7BC,IAAI,EADyB,OAAA;EAE7BC,UAAU,EAFmB,OAAA;EAG7BC,MAAM,EAAE;IAAE,cAAc;EAAhB,CAHqB;EAI7BC,IAAI,EAAA,aACF,IAAA,CAAA,KAAA,EAAA;IAAK,IAAI,EAAT,cAAA;IAAyB,OAAO,EAAhC,aAAA;IAA+C,MAAM,EAArD,IAAA;IAA2D,KAAK,EAAhE,IAAA;IAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;MAAM,CAAC,EAAC;IAAR,CAAA;EADF,CAAA,CAL2B;EAS7BC,OAAO,EAAE,IAAA,IAAqB;IAAA,IAApB;MAAA,KAAA;MAASC;IAAT,IAAoB,IAAA;IAC5B,IAAI,CAAA,KAAA,IAAU,CAAd,IAAA,EAAqB;IACrB,IAAMC,QAAQ,GAAGD,IAAI,CAAJA,KAAAA,CAAAA,GAAAA,CAAAA,MAAAA,CAAsBA,IAAI,CAAJA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAvC,IAAiBA,CAAjB;IACA,IAAIE,IAAI,GAAR,IAAA;IACA,IAAMC,SAAS,GAAGF,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAlB,MAAkBA,CAAlB;;IACA,IAAIE,SAAS,IAAIA,SAAS,CAA1B,CAA0B,CAA1B,EAA+B;MAC7BD,IAAI,GAAJA,EAAAA;IACD;;IACDF,IAAI,CAAJA,QAAAA,CAAc;MACZI,OAAO,EAAE;QACPC,IAAI,EAAEJ,QAAQ,CADP,IAAA;QAEPK,EAAE,EAAEL,QAAQ,CAFL,EAAA;QAGPM,MAAM,EAAA,KAAA,IAAA,GAAYN,QAAQ,CAACO;MAHpB,CADG;MAMZ;MACAC,SAAS,EAAE;QAAEC,MAAM,EAAEV,IAAI,CAAJA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAAA,IAAAA,GAAiCE,IAAI,CAACS;MAAhD;IAPC,CAAdX;EASD;AA1B4B,CAAxB","sourcesContent":["import React from 'react';\nimport { ICommand } from './';\n\nexport const quote: ICommand = {\n  name: 'quote',\n  keyCommand: 'quote',\n  button: { 'aria-label': 'Add quote text' },\n  icon: (\n    <svg fill=\"currentColor\" viewBox=\"0 0 448 512\" height=\"15\" width=\"15\">\n      <path d=\"M96 96c-53.02 0-96 42.1-96 96s42.98 96 96 96c11.28 0 21.95-2.305 32-5.879V288c0 35.3-28.7 64-64 64-17.67 0-32 14.33-32 32s14.33 32 32 32c70.58 0 128-57.42 128-128v-96c0-53.9-43-96-96-96zm352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96 42.98 96 96 96c11.28 0 21.95-2.305 32-5.879V288c0 35.3-28.7 64-64 64-17.67 0-32 14.33-32 32s14.33 32 32 32c70.58 0 128-57.42 128-128v-96z\" />\n    </svg>\n  ),\n  execute: ({ state, view }) => {\n    if (!state || !view) return;\n    const lineInfo = view.state.doc.lineAt(view.state.selection.main.from);\n    let mark = '> ';\n    const matchMark = lineInfo.text.match(/^>\\s/);\n    if (matchMark && matchMark[0]) {\n      mark = '';\n    }\n    view.dispatch({\n      changes: {\n        from: lineInfo.from,\n        to: lineInfo.to,\n        insert: `${mark}${lineInfo.text}`,\n      },\n      // selection: EditorSelection.range(lineInfo.from + mark.length, lineInfo.to),\n      selection: { anchor: view.state.selection.main.from + mark.length },\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}