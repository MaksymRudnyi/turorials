{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar buildURL = require('../helpers/buildURL');\n\nvar InterceptorManager = require('./InterceptorManager');\n\nvar dispatchRequest = require('./dispatchRequest');\n\nvar mergeConfig = require('./mergeConfig');\n\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\n\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\n\n\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config); // Set config.method\n\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  } // filter out skipped interceptors\n\n\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n    promise = Promise.resolve(config);\n\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n  var newConfig = config;\n\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n}; // Provide aliases for supported request methods\n\n\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\nmodule.exports = Axios;","map":{"version":3,"names":["utils","require","buildURL","InterceptorManager","dispatchRequest","mergeConfig","validator","validators","Axios","instanceConfig","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","transitional","undefined","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","requestInterceptorChain","synchronousRequestInterceptors","forEach","unshiftRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","pushResponseInterceptors","push","promise","chain","Array","apply","concat","Promise","resolve","length","then","shift","newConfig","onFulfilled","onRejected","error","reject","getUri","params","paramsSerializer","replace","forEachMethodNoData","data","forEachMethodWithData","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/axios/lib/core/Axios.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}