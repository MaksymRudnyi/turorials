{"ast":null,"code":"/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\nimport { convertElement } from 'hast-util-is-element';\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\n\nexport function parent(node) {\n  // @ts-expect-error: hush.\n  return Array.isArray(node.children);\n}\n/** @type {IsElement} */\n// @ts-expect-error it works.\n\nexport const element = convertElement();","map":{"version":3,"names":["convertElement","parent","node","Array","isArray","children","element"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/hast-util-select/lib/util.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: hush.\n  return Array.isArray(node.children)\n}\n\n/** @type {IsElement} */\n// @ts-expect-error it works.\nexport const element = convertElement()\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,cAAR,QAA6B,sBAA7B;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EAC3B;EACA,OAAOC,KAAK,CAACC,OAAN,CAAcF,IAAI,CAACG,QAAnB,CAAP;AACD;AAED;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGN,cAAc,EAA9B"},"metadata":{},"sourceType":"module"}