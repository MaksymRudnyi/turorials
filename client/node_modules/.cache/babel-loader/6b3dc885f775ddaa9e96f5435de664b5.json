{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\n\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n};\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n};\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Token} */\n\n  let token;\n\n  while (++index < events.length) {\n    token = events[index][1];\n\n    if (token.type === 'labelImage' || token.type === 'labelLink' || token.type === 'labelEnd') {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2);\n      token.type = 'data';\n      index++;\n    }\n  }\n\n  return events;\n}\n/** @type {Resolver} */\n\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n\n  let token;\n  /** @type {number|undefined} */\n\n  let open;\n  /** @type {number|undefined} */\n\n  let close;\n  /** @type {Event[]} */\n\n  let media; // Find an opening.\n\n  while (index--) {\n    token = events[index][1];\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === 'link' || token.type === 'labelLink' && token._inactive) {\n        break;\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === 'labelImage' || token.type === 'labelLink') && !token._balanced) {\n        open = index;\n\n        if (token.type !== 'labelLink') {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index;\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]]; // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)); // Text open.\n\n  media = push(media, [['enter', text, context]]); // Between.\n\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context)); // Text close, marker close, label close.\n\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]); // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)); // Media close.\n\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n/** @type {Tokenizer} */\n\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n\n  let labelStart;\n  /** @type {boolean} */\n\n  let defined; // Find an opening.\n\n  while (index--) {\n    if ((self.events[index][1].type === 'labelImage' || self.events[index][1].type === 'labelLink') && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code);\n    } // It’s a balanced bracket, but contains a link.\n\n\n    if (labelStart._inactive) return balanced(code);\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter('labelEnd');\n    effects.enter('labelMarker');\n    effects.consume(code);\n    effects.exit('labelMarker');\n    effects.exit('labelEnd');\n    return afterLabelEnd;\n  }\n  /** @type {State} */\n\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, ok, defined ? ok : balanced)(code);\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n\n    if (code === 91) {\n      return effects.attempt(fullReferenceConstruct, ok, defined ? effects.attempt(collapsedReferenceConstruct, ok, balanced) : balanced)(code);\n    } // Shortcut reference: `[asd]`?\n\n\n    return defined ? ok(code) : balanced(code);\n  }\n  /** @type {State} */\n\n\n  function balanced(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n/** @type {Tokenizer} */\n\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource');\n    effects.enter('resourceMarker');\n    effects.consume(code);\n    effects.exit('resourceMarker');\n    return factoryWhitespace(effects, open);\n  }\n  /** @type {State} */\n\n\n  function open(code) {\n    if (code === 41) {\n      return end(code);\n    }\n\n    return factoryDestination(effects, destinationAfter, nok, 'resourceDestination', 'resourceDestinationLiteral', 'resourceDestinationLiteralMarker', 'resourceDestinationRaw', 'resourceDestinationString', 32)(code);\n  }\n  /** @type {State} */\n\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, between)(code) : end(code);\n  }\n  /** @type {State} */\n\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, factoryWhitespace(effects, end), nok, 'resourceTitle', 'resourceTitleMarker', 'resourceTitleString')(code);\n    }\n\n    return end(code);\n  }\n  /** @type {State} */\n\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker');\n      effects.consume(code);\n      effects.exit('resourceMarker');\n      effects.exit('resource');\n      return ok;\n    }\n\n    return nok(code);\n  }\n}\n/** @type {Tokenizer} */\n\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(self, effects, afterLabel, nok, 'reference', 'referenceMarker', 'referenceString')(code);\n  }\n  /** @type {State} */\n\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n}\n/** @type {Tokenizer} */\n\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference');\n    effects.enter('referenceMarker');\n    effects.consume(code);\n    effects.exit('referenceMarker');\n    return open;\n  }\n  /** @type {State} */\n\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker');\n      effects.consume(code);\n      effects.exit('referenceMarker');\n      effects.exit('reference');\n      return ok;\n    }\n\n    return nok(code);\n  }\n}","map":{"version":3,"names":["factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","markdownLineEndingOrSpace","push","splice","normalizeIdentifier","resolveAll","labelEnd","name","tokenize","tokenizeLabelEnd","resolveTo","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","fullReferenceConstruct","tokenizeFullReference","collapsedReferenceConstruct","tokenizeCollapsedReference","events","index","token","length","type","context","offset","open","close","media","_inactive","_balanced","group","start","Object","assign","end","label","text","slice","parser","constructs","insideSpan","null","effects","ok","nok","self","labelStart","defined","code","balanced","includes","sliceSerialize","now","enter","consume","exit","afterLabelEnd","attempt","destinationAfter","between","call","afterLabel"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/micromark-core-commonmark/lib/label-end.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}