{"ast":null,"code":"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\nimport { attribute } from './attribute.js';\nimport { className } from './class-name.js';\nimport { id } from './id.js';\nimport { name } from './name.js';\nimport { pseudo } from './pseudo.js';\nimport { element } from './util.js';\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\n\nexport function test(query, node, index, parent, state) {\n  return Boolean(element(node) && state.schema && (!query.tagName || name(query, node)) && (!query.classNames || className(query, node)) && (!query.id || id(query, node)) && (!query.attrs || attribute(query, node, state.schema)) && (!query.pseudos || pseudo(query, node, index, parent, state)));\n}","map":{"version":3,"names":["attribute","className","id","name","pseudo","element","test","query","node","index","parent","state","Boolean","schema","tagName","classNames","attrs","pseudos"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/hast-util-select/lib/test.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\nimport {element} from './util.js'\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(\n    element(node) &&\n      state.schema &&\n      (!query.tagName || name(query, node)) &&\n      (!query.classNames || className(query, node)) &&\n      (!query.id || id(query, node)) &&\n      (!query.attrs || attribute(query, node, state.schema)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,gBAAxB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,EAAR,QAAiB,SAAjB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiD;EACtD,OAAOC,OAAO,CACZP,OAAO,CAACG,IAAD,CAAP,IACEG,KAAK,CAACE,MADR,KAEG,CAACN,KAAK,CAACO,OAAP,IAAkBX,IAAI,CAACI,KAAD,EAAQC,IAAR,CAFzB,MAGG,CAACD,KAAK,CAACQ,UAAP,IAAqBd,SAAS,CAACM,KAAD,EAAQC,IAAR,CAHjC,MAIG,CAACD,KAAK,CAACL,EAAP,IAAaA,EAAE,CAACK,KAAD,EAAQC,IAAR,CAJlB,MAKG,CAACD,KAAK,CAACS,KAAP,IAAgBhB,SAAS,CAACO,KAAD,EAAQC,IAAR,EAAcG,KAAK,CAACE,MAApB,CAL5B,MAMG,CAACN,KAAK,CAACU,OAAP,IAAkBb,MAAM,CAACG,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,CAN3B,CADY,CAAd;AASD"},"metadata":{},"sourceType":"module"}