{"ast":null,"code":"import React__default, { isValidElement, useRef, useLayoutEffect, useEffect, useReducer, cloneElement, useState, createElement } from 'react';\nimport cx from 'clsx';\nimport { render } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nfunction isToastIdValid(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  var height = node.scrollHeight;\n  var style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n      _ref$collapse = _ref.collapse,\n      collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n      _ref$collapseDuration = _ref.collapseDuration,\n      collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        done = _ref2.done,\n        nodeRef = _ref2.nodeRef,\n        isIn = _ref2.isIn;\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var baseClassName = useRef();\n    var animationStep = useRef(0\n    /* Enter */\n    );\n    useLayoutEffect(function () {\n      onEnter();\n    }, []);\n    useEffect(function () {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      var node = nodeRef.current;\n      baseClassName.current = node.className;\n      node.className += \" \" + enterClassName;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered() {\n      var node = nodeRef.current;\n      node.removeEventListener('animationend', onEntered);\n\n      if (animationStep.current === 0\n      /* Enter */\n      ) {\n        node.className = baseClassName.current;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = 1\n      /* Exit */\n      ;\n      var node = nodeRef.current;\n      node.className += \" \" + exitClassName;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      var node = nodeRef.current;\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return React__default.createElement(React__default.Fragment, null, children);\n  };\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\n\nfunction useKeeper(arg, refresh) {\n  if (refresh === void 0) {\n    refresh = false;\n  }\n\n  var ref = useRef(arg);\n  useEffect(function () {\n    if (refresh) ref.current = arg;\n  });\n  return ref.current;\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 0\n    /* ADD */\n    :\n      return [].concat(state, [action.toastId]).filter(function (id) {\n        return id !== action.staleId;\n      });\n\n    case 1\n    /* REMOVE */\n    :\n      return isToastIdValid(action.toastId) ? state.filter(function (id) {\n        return id !== action.toastId;\n      }) : [];\n  }\n}\n\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useReducer2 = useReducer(reducer, []),\n      toast = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var containerRef = useRef(null);\n  var toastCount = useKeeper(0);\n  var queue = useKeeper([]);\n  var collection = useKeeper({});\n  var instance = useKeeper({\n    toastKey: 1,\n    displayedToast: 0,\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return collection[id] || null;\n    }\n  });\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(4\n    /* Change */\n    , toast.length, props.containerId);\n  }, [toast]);\n  useEffect(function () {\n    instance.props = props;\n  });\n\n  function isToastActive(id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var limit = instance.props.limit;\n\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    dispatch({\n      type: 1\n      /* REMOVE */\n      ,\n      toastId: toastId\n    });\n  }\n\n  function dequeueToast() {\n    var _queue$shift = queue.shift(),\n        toastContent = _queue$shift.toastContent,\n        toastProps = _queue$shift.toastProps,\n        staleId = _queue$shift.staleId;\n\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(_ref2) {\n    var containerId = _ref2.containerId,\n        toastId = _ref2.toastId,\n        updateId = _ref2.updateId;\n    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || collection[toastId] && updateId == null ? true : false;\n  } // this function and all the function called inside needs to rely on ref(`useKeeper`)\n\n\n  function buildToast(content, _ref3) {\n    var delay = _ref3.delay,\n        staleId = _ref3.staleId,\n        options = _objectWithoutPropertiesLoose(_ref3, [\"delay\", \"staleId\"]);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId;\n    var props = instance.props;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var isNotAnUpdate = options.updateId == null;\n    if (isNotAnUpdate) toastCount++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast: function deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose; //  tweak for vertical dragging\n\n    if (toastProps.draggableDirection === \"y\"\n    /* Y */\n    && toastProps.draggablePercent === 80\n    /* DRAGGABLE_PERCENT */\n    ) {\n      toastProps.draggablePercent *= 1.5;\n    }\n\n    var closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n    var toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {\n      queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    if (staleId) delete collection[staleId];\n    collection[toastId] = {\n      content: content,\n      props: toastProps\n    };\n    dispatch({\n      type: 0\n      /* ADD */\n      ,\n      toastId: toastId,\n      staleId: staleId\n    });\n  }\n\n  function removeFromCollection(toastId) {\n    delete collection[toastId];\n    var queueLen = queue.length;\n    toastCount = isToastIdValid(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      var freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (var i = 0; i < toDequeue; i++) {\n          dequeueToast();\n        }\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender(cb) {\n    var toastToRender = {};\n    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);\n\n    for (var i = 0; i < toastList.length; i++) {\n      var _toast = collection[toastList[i]];\n      var position = _toast.props.position;\n      toastToRender[position] || (toastToRender[position] = []);\n      toastToRender[position].push(_toast);\n    }\n\n    return Object.keys(toastToRender).map(function (p) {\n      return cb(p, toastToRender[p]);\n    });\n  }\n\n  return {\n    getToastToRender: getToastToRender,\n    collection: collection,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  var _useState = useState(true),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = useRef(null);\n  var drag = useKeeper({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  var syncProps = useKeeper(props, true);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      if (isFn(syncProps.onClose)) syncProps.onClose(isValidElement(syncProps.children) && syncProps.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.draggable && bindDragEvents();\n    return function () {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    if (props.draggable) {\n      var toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n\n      if (props.draggableDirection === \"x\"\n      /* X */\n      ) {\n        drag.start = drag.x;\n        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    if (drag.canDrag) {\n      e.preventDefault();\n      var toast = toastRef.current;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n\n      if (props.draggableDirection === \"x\"\n      /* X */\n      ) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      type = _ref.type,\n      _ref$ariaLabel = _ref.ariaLabel,\n      ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button--\" + type,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn;\n\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--rtl\"] = rtl, _cx));\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent); // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return createElement(\"div\", Object.assign({\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n\nvar Toast = function Toast(props) {\n  var _cx;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      Transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId,\n      deleteToast = props.deleteToast,\n      isIn = props.isIn;\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--rtl\"] = rtl, _cx));\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className);\n  var isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return;\n    var props = {\n      closeToast: closeToast,\n      type: type\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), createElement(\"div\", Object.assign({}, isIn && {\n    role: role\n  }, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), children), renderCloseButton(closeButton), (autoClose || isProgressControlled) && createElement(ProgressBar, Object.assign({}, updateId && !isProgressControlled ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-exit\",\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-exit\"\n});\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n\n  function getClassName(position) {\n    var _cx;\n\n    var defaultClassName = cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container\", \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container--rtl\"] = rtl, _cx));\n    return isFn(className) ? className({\n      position: position,\n      rtl: rtl,\n      defaultClassName: defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n\n  return createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var containerStyle = toastList.length === 0 ? _extends({}, style, {\n      pointerEvents: 'none'\n    }) : _extends({}, style);\n    return createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map(function (_ref) {\n      var content = _ref.content,\n          toastProps = _ref.props;\n      return createElement(Toast, Object.assign({}, toastProps, {\n        isIn: isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* DRAGGABLE_PERCENT */\n  ,\n  draggableDirection: \"x\"\n  /* X */\n  ,\n  role: 'alert'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\n\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nvar createToastByType = function createToastByType(type) {\n  return function (content, options) {\n    return dispatchToast(content, mergeOptions(type, options));\n  };\n};\n\nvar toast = function toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n};\n\ntoast.success = /*#__PURE__*/createToastByType(TYPE.SUCCESS);\ntoast.info = /*#__PURE__*/createToastByType(TYPE.INFO);\ntoast.error = /*#__PURE__*/createToastByType(TYPE.ERROR);\ntoast.warning = /*#__PURE__*/createToastByType(TYPE.WARNING);\ntoast.dark = /*#__PURE__*/createToastByType(TYPE.DARK);\ntoast.warn = toast.warning;\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.props,\n          oldContent = toast.content;\n\n      var nextOptions = _extends({}, oldOptions, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\nexport { Bounce, Flip, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","collapseToast","node","done","duration","height","scrollHeight","style","requestAnimationFrame","minHeight","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","_ref$appendPosition","collapse","_ref$collapse","collapseDuration","ToastTransition","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","useLayoutEffect","onEnter","useEffect","onExited","onExit","current","className","addEventListener","onEntered","removeEventListener","React","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","clearTimeout","emit","args","timer","_this","useKeeper","arg","refresh","ref","reducer","state","action","type","id","staleId","useToastContainer","props","useReducer","x","forceUpdate","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","buildToast","removeToast","clearWaitingQueue","length","indexOf","limit","dequeueToast","shift","toastContent","toastProps","appendToast","isNotValid","updateId","enableMultiContainer","delay","options","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removeFromCollection","onOpen","onClose","cloneElement","queueLen","freeSlot","toDequeue","i","getToastToRender","toastToRender","toastList","newestOnTop","Object","keys","reverse","map","p","getX","e","targetTouches","clientX","getY","clientY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","bindDragEvents","unbindDragEvents","bindFocusEvents","unbindFocusEvents","onDragStart","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","hasFocus","onDragMove","onDragEnd","preventDefault","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","_ref$ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","animationEvent","defaultProps","Toast","Transition","cssClasses","isProgressControlled","renderCloseButton","Bounce","Slide","Zoom","Flip","ToastContainer","getClassName","containerStyle","pointerEvents","containers","latestInstance","containerDomNode","containerConfig","lazy","isAnyContainerMounted","size","container","generateToastId","random","toString","substr","getToastId","dispatchToast","body","appendChild","render","mergeOptions","createToastByType","success","info","error","warning","dark","warn","dismiss","params","isActive","update","oldOptions","oldContent","nextOptions","onChange","configure","config","containerInstance","item","removeChild"],"sources":["../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/core/eventManager.ts","../src/hooks/useKeeper.ts","../src/hooks/toastContainerReducer.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered() {\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.dark = createToastByType(TYPE.DARK);\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}