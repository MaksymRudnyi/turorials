{"ast":null,"code":"export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {},\n      meta = states.languageData || {},\n      hasIndentation = false;\n\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [],\n        orig = states[state];\n\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n\n  return {\n    startState: function () {\n      return {\n        state: \"start\",\n        pending: null,\n        indent: hasIndentation ? [] : null\n      };\n    },\n    copyState: function (state) {\n      var s = {\n        state: state.state,\n        pending: state.pending,\n        indent: state.indent && state.indent.slice(0)\n      };\n      if (state.stack) s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  };\n}\n;\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val;\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n\n  for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function (stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent) state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent) state.indent.pop();\n        var token = rule.token;\n        if (token && token.apply) token = token(matches);\n\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n\n          for (var j = 2; j < matches.length; j++) if (matches[j]) state.pending.push({\n            text: matches[j],\n            token: rule.token[j - 1]\n          });\n\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function (state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1) return null;\n    var pos = state.indent.length - 1,\n        rules = states[state.state];\n\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n\n      break;\n    }\n\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}","map":{"version":3,"names":["simpleMode","states","ensureState","states_","meta","languageData","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","startState","pending","copyState","s","slice","stack","token","tokenFunction","indentFunction","name","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","next","regex","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}