{"ast":null,"code":"function words(array) {\n  var keys = {};\n\n  for (var i = 0; i < array.length; ++i) {\n    keys[array[i]] = true;\n  }\n\n  return keys;\n}\n\nvar keywords = words([\"abstract\", \"accept\", \"allocatable\", \"allocate\", \"array\", \"assign\", \"asynchronous\", \"backspace\", \"bind\", \"block\", \"byte\", \"call\", \"case\", \"class\", \"close\", \"common\", \"contains\", \"continue\", \"cycle\", \"data\", \"deallocate\", \"decode\", \"deferred\", \"dimension\", \"do\", \"elemental\", \"else\", \"encode\", \"end\", \"endif\", \"entry\", \"enumerator\", \"equivalence\", \"exit\", \"external\", \"extrinsic\", \"final\", \"forall\", \"format\", \"function\", \"generic\", \"go\", \"goto\", \"if\", \"implicit\", \"import\", \"include\", \"inquire\", \"intent\", \"interface\", \"intrinsic\", \"module\", \"namelist\", \"non_intrinsic\", \"non_overridable\", \"none\", \"nopass\", \"nullify\", \"open\", \"optional\", \"options\", \"parameter\", \"pass\", \"pause\", \"pointer\", \"print\", \"private\", \"program\", \"protected\", \"public\", \"pure\", \"read\", \"recursive\", \"result\", \"return\", \"rewind\", \"save\", \"select\", \"sequence\", \"stop\", \"subroutine\", \"target\", \"then\", \"to\", \"type\", \"use\", \"value\", \"volatile\", \"where\", \"while\", \"write\"]);\nvar builtins = words([\"abort\", \"abs\", \"access\", \"achar\", \"acos\", \"adjustl\", \"adjustr\", \"aimag\", \"aint\", \"alarm\", \"all\", \"allocated\", \"alog\", \"amax\", \"amin\", \"amod\", \"and\", \"anint\", \"any\", \"asin\", \"associated\", \"atan\", \"besj\", \"besjn\", \"besy\", \"besyn\", \"bit_size\", \"btest\", \"cabs\", \"ccos\", \"ceiling\", \"cexp\", \"char\", \"chdir\", \"chmod\", \"clog\", \"cmplx\", \"command_argument_count\", \"complex\", \"conjg\", \"cos\", \"cosh\", \"count\", \"cpu_time\", \"cshift\", \"csin\", \"csqrt\", \"ctime\", \"c_funloc\", \"c_loc\", \"c_associated\", \"c_null_ptr\", \"c_null_funptr\", \"c_f_pointer\", \"c_null_char\", \"c_alert\", \"c_backspace\", \"c_form_feed\", \"c_new_line\", \"c_carriage_return\", \"c_horizontal_tab\", \"c_vertical_tab\", \"dabs\", \"dacos\", \"dasin\", \"datan\", \"date_and_time\", \"dbesj\", \"dbesj\", \"dbesjn\", \"dbesy\", \"dbesy\", \"dbesyn\", \"dble\", \"dcos\", \"dcosh\", \"ddim\", \"derf\", \"derfc\", \"dexp\", \"digits\", \"dim\", \"dint\", \"dlog\", \"dlog\", \"dmax\", \"dmin\", \"dmod\", \"dnint\", \"dot_product\", \"dprod\", \"dsign\", \"dsinh\", \"dsin\", \"dsqrt\", \"dtanh\", \"dtan\", \"dtime\", \"eoshift\", \"epsilon\", \"erf\", \"erfc\", \"etime\", \"exit\", \"exp\", \"exponent\", \"extends_type_of\", \"fdate\", \"fget\", \"fgetc\", \"float\", \"floor\", \"flush\", \"fnum\", \"fputc\", \"fput\", \"fraction\", \"fseek\", \"fstat\", \"ftell\", \"gerror\", \"getarg\", \"get_command\", \"get_command_argument\", \"get_environment_variable\", \"getcwd\", \"getenv\", \"getgid\", \"getlog\", \"getpid\", \"getuid\", \"gmtime\", \"hostnm\", \"huge\", \"iabs\", \"iachar\", \"iand\", \"iargc\", \"ibclr\", \"ibits\", \"ibset\", \"ichar\", \"idate\", \"idim\", \"idint\", \"idnint\", \"ieor\", \"ierrno\", \"ifix\", \"imag\", \"imagpart\", \"index\", \"int\", \"ior\", \"irand\", \"isatty\", \"ishft\", \"ishftc\", \"isign\", \"iso_c_binding\", \"is_iostat_end\", \"is_iostat_eor\", \"itime\", \"kill\", \"kind\", \"lbound\", \"len\", \"len_trim\", \"lge\", \"lgt\", \"link\", \"lle\", \"llt\", \"lnblnk\", \"loc\", \"log\", \"logical\", \"long\", \"lshift\", \"lstat\", \"ltime\", \"matmul\", \"max\", \"maxexponent\", \"maxloc\", \"maxval\", \"mclock\", \"merge\", \"move_alloc\", \"min\", \"minexponent\", \"minloc\", \"minval\", \"mod\", \"modulo\", \"mvbits\", \"nearest\", \"new_line\", \"nint\", \"not\", \"or\", \"pack\", \"perror\", \"precision\", \"present\", \"product\", \"radix\", \"rand\", \"random_number\", \"random_seed\", \"range\", \"real\", \"realpart\", \"rename\", \"repeat\", \"reshape\", \"rrspacing\", \"rshift\", \"same_type_as\", \"scale\", \"scan\", \"second\", \"selected_int_kind\", \"selected_real_kind\", \"set_exponent\", \"shape\", \"short\", \"sign\", \"signal\", \"sinh\", \"sin\", \"sleep\", \"sngl\", \"spacing\", \"spread\", \"sqrt\", \"srand\", \"stat\", \"sum\", \"symlnk\", \"system\", \"system_clock\", \"tan\", \"tanh\", \"time\", \"tiny\", \"transfer\", \"transpose\", \"trim\", \"ttynam\", \"ubound\", \"umask\", \"unlink\", \"unpack\", \"verify\", \"xor\", \"zabs\", \"zcos\", \"zexp\", \"zlog\", \"zsin\", \"zsqrt\"]);\nvar dataTypes = words([\"c_bool\", \"c_char\", \"c_double\", \"c_double_complex\", \"c_float\", \"c_float_complex\", \"c_funptr\", \"c_int\", \"c_int16_t\", \"c_int32_t\", \"c_int64_t\", \"c_int8_t\", \"c_int_fast16_t\", \"c_int_fast32_t\", \"c_int_fast64_t\", \"c_int_fast8_t\", \"c_int_least16_t\", \"c_int_least32_t\", \"c_int_least64_t\", \"c_int_least8_t\", \"c_intmax_t\", \"c_intptr_t\", \"c_long\", \"c_long_double\", \"c_long_double_complex\", \"c_long_long\", \"c_ptr\", \"c_short\", \"c_signed_char\", \"c_size_t\", \"character\", \"complex\", \"double\", \"integer\", \"logical\", \"real\"]);\nvar isOperatorChar = /[+\\-*&=<>\\/\\:]/;\nvar litOperator = /^\\.(and|or|eq|lt|le|gt|ge|ne|not|eqv|neqv)\\./i;\n\nfunction tokenBase(stream, state) {\n  if (stream.match(litOperator)) {\n    return 'operator';\n  }\n\n  var ch = stream.next();\n\n  if (ch == \"!\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n\n  if (/[\\[\\]\\(\\),]/.test(ch)) {\n    return null;\n  }\n\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  var word = stream.current().toLowerCase();\n\n  if (keywords.hasOwnProperty(word)) {\n    return 'keyword';\n  }\n\n  if (builtins.hasOwnProperty(word) || dataTypes.hasOwnProperty(word)) {\n    return 'builtin';\n  }\n\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false,\n        next,\n        end = false;\n\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n\n      escaped = !escaped && next == \"\\\\\";\n    }\n\n    if (end || !escaped) state.tokenize = null;\n    return \"string\";\n  };\n} // Interface\n\n\nexport const fortran = {\n  startState: function () {\n    return {\n      tokenize: null\n    };\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    return style;\n  }\n};","map":{"version":3,"names":["words","array","keys","i","length","keywords","builtins","dataTypes","isOperatorChar","litOperator","tokenBase","stream","state","match","ch","next","skipToEnd","tokenize","tokenString","test","eatWhile","word","current","toLowerCase","hasOwnProperty","quote","escaped","end","fortran","startState","token","eatSpace","style"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/fortran.js"],"sourcesContent":["function words(array) {\n  var keys = {};\n  for (var i = 0; i < array.length; ++i) {\n    keys[array[i]] = true;\n  }\n  return keys;\n}\n\nvar keywords = words([\n  \"abstract\", \"accept\", \"allocatable\", \"allocate\",\n  \"array\", \"assign\", \"asynchronous\", \"backspace\",\n  \"bind\", \"block\", \"byte\", \"call\", \"case\",\n  \"class\", \"close\", \"common\", \"contains\",\n  \"continue\", \"cycle\", \"data\", \"deallocate\",\n  \"decode\", \"deferred\", \"dimension\", \"do\",\n  \"elemental\", \"else\", \"encode\", \"end\",\n  \"endif\", \"entry\", \"enumerator\", \"equivalence\",\n  \"exit\", \"external\", \"extrinsic\", \"final\",\n  \"forall\", \"format\", \"function\", \"generic\",\n  \"go\", \"goto\", \"if\", \"implicit\", \"import\", \"include\",\n  \"inquire\", \"intent\", \"interface\", \"intrinsic\",\n  \"module\", \"namelist\", \"non_intrinsic\",\n  \"non_overridable\", \"none\", \"nopass\",\n  \"nullify\", \"open\", \"optional\", \"options\",\n  \"parameter\", \"pass\", \"pause\", \"pointer\",\n  \"print\", \"private\", \"program\", \"protected\",\n  \"public\", \"pure\", \"read\", \"recursive\", \"result\",\n  \"return\", \"rewind\", \"save\", \"select\", \"sequence\",\n  \"stop\", \"subroutine\", \"target\", \"then\", \"to\", \"type\",\n  \"use\", \"value\", \"volatile\", \"where\", \"while\",\n  \"write\"]);\nvar builtins = words([\"abort\", \"abs\", \"access\", \"achar\", \"acos\",\n                      \"adjustl\", \"adjustr\", \"aimag\", \"aint\", \"alarm\",\n                      \"all\", \"allocated\", \"alog\", \"amax\", \"amin\",\n                      \"amod\", \"and\", \"anint\", \"any\", \"asin\",\n                      \"associated\", \"atan\", \"besj\", \"besjn\", \"besy\",\n                      \"besyn\", \"bit_size\", \"btest\", \"cabs\", \"ccos\",\n                      \"ceiling\", \"cexp\", \"char\", \"chdir\", \"chmod\",\n                      \"clog\", \"cmplx\", \"command_argument_count\",\n                      \"complex\", \"conjg\", \"cos\", \"cosh\", \"count\",\n                      \"cpu_time\", \"cshift\", \"csin\", \"csqrt\", \"ctime\",\n                      \"c_funloc\", \"c_loc\", \"c_associated\", \"c_null_ptr\",\n                      \"c_null_funptr\", \"c_f_pointer\", \"c_null_char\",\n                      \"c_alert\", \"c_backspace\", \"c_form_feed\",\n                      \"c_new_line\", \"c_carriage_return\",\n                      \"c_horizontal_tab\", \"c_vertical_tab\", \"dabs\",\n                      \"dacos\", \"dasin\", \"datan\", \"date_and_time\",\n                      \"dbesj\", \"dbesj\", \"dbesjn\", \"dbesy\", \"dbesy\",\n                      \"dbesyn\", \"dble\", \"dcos\", \"dcosh\", \"ddim\", \"derf\",\n                      \"derfc\", \"dexp\", \"digits\", \"dim\", \"dint\", \"dlog\",\n                      \"dlog\", \"dmax\", \"dmin\", \"dmod\", \"dnint\",\n                      \"dot_product\", \"dprod\", \"dsign\", \"dsinh\",\n                      \"dsin\", \"dsqrt\", \"dtanh\", \"dtan\", \"dtime\",\n                      \"eoshift\", \"epsilon\", \"erf\", \"erfc\", \"etime\",\n                      \"exit\", \"exp\", \"exponent\", \"extends_type_of\",\n                      \"fdate\", \"fget\", \"fgetc\", \"float\", \"floor\",\n                      \"flush\", \"fnum\", \"fputc\", \"fput\", \"fraction\",\n                      \"fseek\", \"fstat\", \"ftell\", \"gerror\", \"getarg\",\n                      \"get_command\", \"get_command_argument\",\n                      \"get_environment_variable\", \"getcwd\",\n                      \"getenv\", \"getgid\", \"getlog\", \"getpid\",\n                      \"getuid\", \"gmtime\", \"hostnm\", \"huge\", \"iabs\",\n                      \"iachar\", \"iand\", \"iargc\", \"ibclr\", \"ibits\",\n                      \"ibset\", \"ichar\", \"idate\", \"idim\", \"idint\",\n                      \"idnint\", \"ieor\", \"ierrno\", \"ifix\", \"imag\",\n                      \"imagpart\", \"index\", \"int\", \"ior\", \"irand\",\n                      \"isatty\", \"ishft\", \"ishftc\", \"isign\",\n                      \"iso_c_binding\", \"is_iostat_end\", \"is_iostat_eor\",\n                      \"itime\", \"kill\", \"kind\", \"lbound\", \"len\", \"len_trim\",\n                      \"lge\", \"lgt\", \"link\", \"lle\", \"llt\", \"lnblnk\", \"loc\",\n                      \"log\", \"logical\", \"long\", \"lshift\", \"lstat\", \"ltime\",\n                      \"matmul\", \"max\", \"maxexponent\", \"maxloc\", \"maxval\",\n                      \"mclock\", \"merge\", \"move_alloc\", \"min\", \"minexponent\",\n                      \"minloc\", \"minval\", \"mod\", \"modulo\", \"mvbits\",\n                      \"nearest\", \"new_line\", \"nint\", \"not\", \"or\", \"pack\",\n                      \"perror\", \"precision\", \"present\", \"product\", \"radix\",\n                      \"rand\", \"random_number\", \"random_seed\", \"range\",\n                      \"real\", \"realpart\", \"rename\", \"repeat\", \"reshape\",\n                      \"rrspacing\", \"rshift\", \"same_type_as\", \"scale\",\n                      \"scan\", \"second\", \"selected_int_kind\",\n                      \"selected_real_kind\", \"set_exponent\", \"shape\",\n                      \"short\", \"sign\", \"signal\", \"sinh\", \"sin\", \"sleep\",\n                      \"sngl\", \"spacing\", \"spread\", \"sqrt\", \"srand\", \"stat\",\n                      \"sum\", \"symlnk\", \"system\", \"system_clock\", \"tan\",\n                      \"tanh\", \"time\", \"tiny\", \"transfer\", \"transpose\",\n                      \"trim\", \"ttynam\", \"ubound\", \"umask\", \"unlink\",\n                      \"unpack\", \"verify\", \"xor\", \"zabs\", \"zcos\", \"zexp\",\n                      \"zlog\", \"zsin\", \"zsqrt\"]);\n\nvar dataTypes =  words([\"c_bool\", \"c_char\", \"c_double\", \"c_double_complex\",\n                        \"c_float\", \"c_float_complex\", \"c_funptr\", \"c_int\",\n                        \"c_int16_t\", \"c_int32_t\", \"c_int64_t\", \"c_int8_t\",\n                        \"c_int_fast16_t\", \"c_int_fast32_t\", \"c_int_fast64_t\",\n                        \"c_int_fast8_t\", \"c_int_least16_t\", \"c_int_least32_t\",\n                        \"c_int_least64_t\", \"c_int_least8_t\", \"c_intmax_t\",\n                        \"c_intptr_t\", \"c_long\", \"c_long_double\",\n                        \"c_long_double_complex\", \"c_long_long\", \"c_ptr\",\n                        \"c_short\", \"c_signed_char\", \"c_size_t\", \"character\",\n                        \"complex\", \"double\", \"integer\", \"logical\", \"real\"]);\nvar isOperatorChar = /[+\\-*&=<>\\/\\:]/;\nvar litOperator = /^\\.(and|or|eq|lt|le|gt|ge|ne|not|eqv|neqv)\\./i;\n\nfunction tokenBase(stream, state) {\n\n  if (stream.match(litOperator)){\n    return 'operator';\n  }\n\n  var ch = stream.next();\n  if (ch == \"!\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]\\(\\),]/.test(ch)) {\n    return null;\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var word = stream.current().toLowerCase();\n\n  if (keywords.hasOwnProperty(word)){\n    return 'keyword';\n  }\n  if (builtins.hasOwnProperty(word) || dataTypes.hasOwnProperty(word)) {\n    return 'builtin';\n  }\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped) state.tokenize = null;\n    return \"string\";\n  };\n}\n\n// Interface\n\nexport const fortran = {\n  startState: function() {\n    return {tokenize: null};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    return style;\n  }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}