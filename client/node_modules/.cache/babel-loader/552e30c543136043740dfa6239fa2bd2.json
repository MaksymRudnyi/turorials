{"ast":null,"code":"import React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ulist = {\n  name: 'ulist',\n  keyCommand: 'ulist',\n  button: {\n    'aria-label': 'Add ulist text'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    height: \"14\",\n    width: \"14\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M88 48c13.3 0 24 10.75 24 24v48c0 13.3-10.7 24-24 24H40c-13.25 0-24-10.7-24-24V72c0-13.25 10.75-24 24-24h48zm392 16c17.7 0 32 14.33 32 32 0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32 0-17.67 14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zM16 232c0-13.3 10.75-24 24-24h48c13.3 0 24 10.7 24 24v48c0 13.3-10.7 24-24 24H40c-13.25 0-24-10.7-24-24v-48zm72 136c13.3 0 24 10.7 24 24v48c0 13.3-10.7 24-24 24H40c-13.25 0-24-10.7-24-24v-48c0-13.3 10.75-24 24-24h48z\"\n    })\n  }),\n  execute: _ref => {\n    var {\n      state,\n      view\n    } = _ref;\n    if (!state || !view) return;\n    var lineInfo = view.state.doc.lineAt(view.state.selection.main.from);\n    var mark = '1. ';\n    var matchMark = lineInfo.text.match(/^\\1\\./);\n\n    if (matchMark && matchMark[0]) {\n      mark = '';\n    }\n\n    view.dispatch({\n      changes: {\n        from: lineInfo.from,\n        to: lineInfo.to,\n        insert: \"\" + mark + lineInfo.text\n      },\n      // selection: EditorSelection.range(lineInfo.from + mark.length, lineInfo.to),\n      selection: {\n        anchor: view.state.selection.main.from + mark.length\n      }\n    });\n  }\n};","map":{"version":3,"sources":["../../src/commands/ulist.tsx"],"names":["ulist","name","keyCommand","button","icon","execute","view","lineInfo","mark","matchMark","changes","from","to","insert","text","selection","anchor","length"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;AAGA,OAAO,IAAMA,KAAe,GAAG;EAC7BC,IAAI,EADyB,OAAA;EAE7BC,UAAU,EAFmB,OAAA;EAG7BC,MAAM,EAAE;IAAE,cAAc;EAAhB,CAHqB;EAI7BC,IAAI,EAAA,aACF,IAAA,CAAA,KAAA,EAAA;IAAK,OAAO,EAAZ,aAAA;IAA2B,MAAM,EAAjC,IAAA;IAAuC,KAAK,EAA5C,IAAA;IAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;MACE,IAAI,EADN,cAAA;MAEE,CAAC,EAAC;IAFJ,CAAA;EADF,CAAA,CAL2B;EAY7BC,OAAO,EAAE,IAAA,IAAqB;IAAA,IAApB;MAAA,KAAA;MAASC;IAAT,IAAoB,IAAA;IAC5B,IAAI,CAAA,KAAA,IAAU,CAAd,IAAA,EAAqB;IACrB,IAAMC,QAAQ,GAAGD,IAAI,CAAJA,KAAAA,CAAAA,GAAAA,CAAAA,MAAAA,CAAsBA,IAAI,CAAJA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAvC,IAAiBA,CAAjB;IACA,IAAIE,IAAI,GAAR,KAAA;IACA,IAAMC,SAAS,GAAGF,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAlB,OAAkBA,CAAlB;;IACA,IAAIE,SAAS,IAAIA,SAAS,CAA1B,CAA0B,CAA1B,EAA+B;MAC7BD,IAAI,GAAJA,EAAAA;IACD;;IACDF,IAAI,CAAJA,QAAAA,CAAc;MACZI,OAAO,EAAE;QACPC,IAAI,EAAEJ,QAAQ,CADP,IAAA;QAEPK,EAAE,EAAEL,QAAQ,CAFL,EAAA;QAGPM,MAAM,EAAA,KAAA,IAAA,GAAYN,QAAQ,CAACO;MAHpB,CADG;MAMZ;MACAC,SAAS,EAAE;QAAEC,MAAM,EAAEV,IAAI,CAAJA,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAAA,IAAAA,GAAiCE,IAAI,CAACS;MAAhD;IAPC,CAAdX;EASD;AA7B4B,CAAxB","sourcesContent":["import React from 'react';\nimport { ICommand } from './';\n\nexport const ulist: ICommand = {\n  name: 'ulist',\n  keyCommand: 'ulist',\n  button: { 'aria-label': 'Add ulist text' },\n  icon: (\n    <svg viewBox=\"0 0 512 512\" height=\"14\" width=\"14\">\n      <path\n        fill=\"currentColor\"\n        d=\"M88 48c13.3 0 24 10.75 24 24v48c0 13.3-10.7 24-24 24H40c-13.25 0-24-10.7-24-24V72c0-13.25 10.75-24 24-24h48zm392 16c17.7 0 32 14.33 32 32 0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32 0-17.67 14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zM16 232c0-13.3 10.75-24 24-24h48c13.3 0 24 10.7 24 24v48c0 13.3-10.7 24-24 24H40c-13.25 0-24-10.7-24-24v-48zm72 136c13.3 0 24 10.7 24 24v48c0 13.3-10.7 24-24 24H40c-13.25 0-24-10.7-24-24v-48c0-13.3 10.75-24 24-24h48z\"\n      />\n    </svg>\n  ),\n  execute: ({ state, view }) => {\n    if (!state || !view) return;\n    const lineInfo = view.state.doc.lineAt(view.state.selection.main.from);\n    let mark = '1. ';\n    const matchMark = lineInfo.text.match(/^\\1\\./);\n    if (matchMark && matchMark[0]) {\n      mark = '';\n    }\n    view.dispatch({\n      changes: {\n        from: lineInfo.from,\n        to: lineInfo.to,\n        insert: `${mark}${lineInfo.text}`,\n      },\n      // selection: EditorSelection.range(lineInfo.from + mark.length, lineInfo.to),\n      selection: { anchor: view.state.selection.main.from + mark.length },\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}