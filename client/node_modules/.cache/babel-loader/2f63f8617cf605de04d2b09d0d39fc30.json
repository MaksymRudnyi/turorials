{"ast":null,"code":"var toString = Object.prototype.toString;\nvar isModern = typeof Buffer.alloc === 'function' && typeof Buffer.allocUnsafe === 'function' && typeof Buffer.from === 'function';\n\nfunction isArrayBuffer(input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer';\n}\n\nfunction fromArrayBuffer(obj, byteOffset, length) {\n  byteOffset >>>= 0;\n  var maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\");\n  }\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    length >>>= 0;\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\");\n    }\n  }\n\n  return isModern ? Buffer.from(obj.slice(byteOffset, byteOffset + length)) : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)));\n}\n\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  return isModern ? Buffer.from(string, encoding) : new Buffer(string, encoding);\n}\n\nfunction bufferFrom(value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n\n  return isModern ? Buffer.from(value) : new Buffer(value);\n}\n\nmodule.exports = bufferFrom;","map":{"version":3,"names":["toString","Object","prototype","isModern","Buffer","alloc","allocUnsafe","from","isArrayBuffer","input","call","slice","fromArrayBuffer","obj","byteOffset","length","maxLength","byteLength","RangeError","undefined","Uint8Array","fromString","string","encoding","isEncoding","TypeError","bufferFrom","value","encodingOrOffset","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/buffer-from/index.js"],"sourcesContent":["var toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAhC;AAEA,IAAIG,QAAQ,GACV,OAAOC,MAAM,CAACC,KAAd,KAAwB,UAAxB,IACA,OAAOD,MAAM,CAACE,WAAd,KAA8B,UAD9B,IAEA,OAAOF,MAAM,CAACG,IAAd,KAAuB,UAHzB;;AAMA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;EAC7B,OAAOT,QAAQ,CAACU,IAAT,CAAcD,KAAd,EAAqBE,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,MAAsC,aAA7C;AACD;;AAED,SAASC,eAAT,CAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,MAA3C,EAAmD;EACjDD,UAAU,MAAM,CAAhB;EAEA,IAAIE,SAAS,GAAGH,GAAG,CAACI,UAAJ,GAAiBH,UAAjC;;EAEA,IAAIE,SAAS,GAAG,CAAhB,EAAmB;IACjB,MAAM,IAAIE,UAAJ,CAAe,2BAAf,CAAN;EACD;;EAED,IAAIH,MAAM,KAAKI,SAAf,EAA0B;IACxBJ,MAAM,GAAGC,SAAT;EACD,CAFD,MAEO;IACLD,MAAM,MAAM,CAAZ;;IAEA,IAAIA,MAAM,GAAGC,SAAb,EAAwB;MACtB,MAAM,IAAIE,UAAJ,CAAe,2BAAf,CAAN;IACD;EACF;;EAED,OAAOf,QAAQ,GACXC,MAAM,CAACG,IAAP,CAAYM,GAAG,CAACF,KAAJ,CAAUG,UAAV,EAAsBA,UAAU,GAAGC,MAAnC,CAAZ,CADW,GAEX,IAAIX,MAAJ,CAAW,IAAIgB,UAAJ,CAAeP,GAAG,CAACF,KAAJ,CAAUG,UAAV,EAAsBA,UAAU,GAAGC,MAAnC,CAAf,CAAX,CAFJ;AAGD;;AAED,SAASM,UAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;EACrC,IAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,EAAjD,EAAqD;IACnDA,QAAQ,GAAG,MAAX;EACD;;EAED,IAAI,CAACnB,MAAM,CAACoB,UAAP,CAAkBD,QAAlB,CAAL,EAAkC;IAChC,MAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;EACD;;EAED,OAAOtB,QAAQ,GACXC,MAAM,CAACG,IAAP,CAAYe,MAAZ,EAAoBC,QAApB,CADW,GAEX,IAAInB,MAAJ,CAAWkB,MAAX,EAAmBC,QAAnB,CAFJ;AAGD;;AAED,SAASG,UAAT,CAAqBC,KAArB,EAA4BC,gBAA5B,EAA8Cb,MAA9C,EAAsD;EACpD,IAAI,OAAOY,KAAP,KAAiB,QAArB,EAA+B;IAC7B,MAAM,IAAIF,SAAJ,CAAc,uCAAd,CAAN;EACD;;EAED,IAAIjB,aAAa,CAACmB,KAAD,CAAjB,EAA0B;IACxB,OAAOf,eAAe,CAACe,KAAD,EAAQC,gBAAR,EAA0Bb,MAA1B,CAAtB;EACD;;EAED,IAAI,OAAOY,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAON,UAAU,CAACM,KAAD,EAAQC,gBAAR,CAAjB;EACD;;EAED,OAAOzB,QAAQ,GACXC,MAAM,CAACG,IAAP,CAAYoB,KAAZ,CADW,GAEX,IAAIvB,MAAJ,CAAWuB,KAAX,CAFJ;AAGD;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,UAAjB"},"metadata":{},"sourceType":"script"}