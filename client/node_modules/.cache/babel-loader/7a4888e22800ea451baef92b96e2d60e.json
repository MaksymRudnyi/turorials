{"ast":null,"code":"function words(str) {\n  var obj = {},\n      words = str.split(\" \");\n\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n  return obj;\n}\n\nvar keywords = words(\"abstract as assert boolean break byte case catch char class const continue def default \" + \"do double else enum extends final finally float for goto if implements import in \" + \"instanceof int interface long native new package private protected public return \" + \"short static strictfp super switch synchronized threadsafe throw throws trait transient \" + \"try void volatile while\");\nvar blockKeywords = words(\"catch class def do else enum finally for if interface switch trait try while\");\nvar standaloneKeywords = words(\"return break continue\");\nvar atoms = words(\"null true false this\");\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == '\"' || ch == \"'\") {\n    return startString(ch, stream, state);\n  }\n\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n\n    if (stream.eat(/eE/)) {\n      stream.eat(/\\+\\-/);\n      stream.eatWhile(/\\d/);\n    }\n\n    return \"number\";\n  }\n\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize.push(tokenComment);\n      return tokenComment(stream, state);\n    }\n\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (expectExpression(state.lastToken, false)) {\n      return startString(ch, stream, state);\n    }\n  }\n\n  if (ch == \"-\" && stream.eat(\">\")) {\n    curPunc = \"->\";\n    return null;\n  }\n\n  if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n    stream.eatWhile(/[+\\-*&%=<>|~]/);\n    return \"operator\";\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n\n  if (ch == \"@\") {\n    stream.eatWhile(/[\\w\\$_\\.]/);\n    return \"meta\";\n  }\n\n  if (state.lastToken == \".\") return \"property\";\n\n  if (stream.eat(\":\")) {\n    curPunc = \"proplabel\";\n    return \"property\";\n  }\n\n  var cur = stream.current();\n\n  if (atoms.propertyIsEnumerable(cur)) {\n    return \"atom\";\n  }\n\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";else if (standaloneKeywords.propertyIsEnumerable(cur)) curPunc = \"standalone\";\n    return \"keyword\";\n  }\n\n  return \"variable\";\n}\n\ntokenBase.isBase = true;\n\nfunction startString(quote, stream, state) {\n  var tripleQuoted = false;\n\n  if (quote != \"/\" && stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;else return \"string\";\n  }\n\n  function t(stream, state) {\n    var escaped = false,\n        next,\n        end = !tripleQuoted;\n\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        if (!tripleQuoted) {\n          break;\n        }\n\n        if (stream.match(quote + quote)) {\n          end = true;\n          break;\n        }\n      }\n\n      if (quote == '\"' && next == \"$\" && !escaped) {\n        if (stream.eat(\"{\")) {\n          state.tokenize.push(tokenBaseUntilBrace());\n          return \"string\";\n        } else if (stream.match(/^\\w/, false)) {\n          state.tokenize.push(tokenVariableDeref);\n          return \"string\";\n        }\n      }\n\n      escaped = !escaped && next == \"\\\\\";\n    }\n\n    if (end) state.tokenize.pop();\n    return \"string\";\n  }\n\n  state.tokenize.push(t);\n  return t(stream, state);\n}\n\nfunction tokenBaseUntilBrace() {\n  var depth = 1;\n\n  function t(stream, state) {\n    if (stream.peek() == \"}\") {\n      depth--;\n\n      if (depth == 0) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length - 1](stream, state);\n      }\n    } else if (stream.peek() == \"{\") {\n      depth++;\n    }\n\n    return tokenBase(stream, state);\n  }\n\n  t.isBase = true;\n  return t;\n}\n\nfunction tokenVariableDeref(stream, state) {\n  var next = stream.match(/^(\\.|[\\w\\$_]+)/);\n\n  if (!next) {\n    state.tokenize.pop();\n    return state.tokenize[state.tokenize.length - 1](stream, state);\n  }\n\n  return next[0] == \".\" ? null : \"variable\";\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize.pop();\n      break;\n    }\n\n    maybeEnd = ch == \"*\";\n  }\n\n  return \"comment\";\n}\n\nfunction expectExpression(last, newline) {\n  return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) || last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\" || last == \"standalone\" && !newline;\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n  return state.context = state.context.prev;\n} // Interface\n\n\nexport const groovy = {\n  startState: function (indentUnit) {\n    return {\n      tokenize: [tokenBase],\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true,\n      lastToken: null\n    };\n  },\n  token: function (stream, state) {\n    var ctx = state.context;\n\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true; // Automatic semicolon insertion\n\n      if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) {\n        popContext(state);\n        ctx = state.context;\n      }\n    }\n\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = state.tokenize[state.tokenize.length - 1](stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state); // Handle indentation for {x -> \\n ... }\n    else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n      popContext(state);\n      state.context.align = false;\n    } else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n\n      if (ctx.type == \"}\") ctx = popContext(state);\n\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    } else if (curPunc == ctx.type) popContext(state);else if (ctx.type == \"}\" || ctx.type == \"top\" || ctx.type == \"statement\" && curPunc == \"newstatement\") pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    state.lastToken = curPunc || style;\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    if (!state.tokenize[state.tokenize.length - 1].isBase) return null;\n    var firstChar = textAfter && textAfter.charAt(0),\n        ctx = state.context;\n    if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) ctx = ctx.prev;\n    var closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);else if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    },\n    closeBrackets: {\n      brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"']\n    }\n  }\n};","map":{"version":3,"names":["words","str","obj","split","i","length","keywords","blockKeywords","standaloneKeywords","atoms","curPunc","tokenBase","stream","state","ch","next","startString","test","eatWhile","eat","tokenize","push","tokenComment","skipToEnd","expectExpression","lastToken","cur","current","propertyIsEnumerable","isBase","quote","tripleQuoted","t","escaped","end","match","tokenBaseUntilBrace","tokenVariableDeref","pop","depth","peek","maybeEnd","last","newline","Context","indented","column","type","align","prev","pushContext","col","context","popContext","groovy","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","charAt","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close","closeBrackets","brackets"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/groovy.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar keywords = words(\n  \"abstract as assert boolean break byte case catch char class const continue def default \" +\n    \"do double else enum extends final finally float for goto if implements import in \" +\n    \"instanceof int interface long native new package private protected public return \" +\n    \"short static strictfp super switch synchronized threadsafe throw throws trait transient \" +\n    \"try void volatile while\");\nvar blockKeywords = words(\"catch class def do else enum finally for if interface switch trait try while\");\nvar standaloneKeywords = words(\"return break continue\");\nvar atoms = words(\"null true false this\");\n\nvar curPunc;\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\") {\n    return startString(ch, stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    if (stream.eat(/eE/)) { stream.eat(/\\+\\-/); stream.eatWhile(/\\d/); }\n    return \"number\";\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize.push(tokenComment);\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (expectExpression(state.lastToken, false)) {\n      return startString(ch, stream, state);\n    }\n  }\n  if (ch == \"-\" && stream.eat(\">\")) {\n    curPunc = \"->\";\n    return null;\n  }\n  if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n    stream.eatWhile(/[+\\-*&%=<>|~]/);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  if (ch == \"@\") { stream.eatWhile(/[\\w\\$_\\.]/); return \"meta\"; }\n  if (state.lastToken == \".\") return \"property\";\n  if (stream.eat(\":\")) { curPunc = \"proplabel\"; return \"property\"; }\n  var cur = stream.current();\n  if (atoms.propertyIsEnumerable(cur)) { return \"atom\"; }\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    else if (standaloneKeywords.propertyIsEnumerable(cur)) curPunc = \"standalone\";\n    return \"keyword\";\n  }\n  return \"variable\";\n}\ntokenBase.isBase = true;\n\nfunction startString(quote, stream, state) {\n  var tripleQuoted = false;\n  if (quote != \"/\" && stream.eat(quote)) {\n    if (stream.eat(quote)) tripleQuoted = true;\n    else return \"string\";\n  }\n  function t(stream, state) {\n    var escaped = false, next, end = !tripleQuoted;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        if (!tripleQuoted) { break; }\n        if (stream.match(quote + quote)) { end = true; break; }\n      }\n      if (quote == '\"' && next == \"$\" && !escaped) {\n        if (stream.eat(\"{\")) {\n          state.tokenize.push(tokenBaseUntilBrace());\n          return \"string\";\n        } else if (stream.match(/^\\w/, false)) {\n          state.tokenize.push(tokenVariableDeref);\n          return \"string\";\n        }\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end) state.tokenize.pop();\n    return \"string\";\n  }\n  state.tokenize.push(t);\n  return t(stream, state);\n}\n\nfunction tokenBaseUntilBrace() {\n  var depth = 1;\n  function t(stream, state) {\n    if (stream.peek() == \"}\") {\n      depth--;\n      if (depth == 0) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n    } else if (stream.peek() == \"{\") {\n      depth++;\n    }\n    return tokenBase(stream, state);\n  }\n  t.isBase = true;\n  return t;\n}\n\nfunction tokenVariableDeref(stream, state) {\n  var next = stream.match(/^(\\.|[\\w\\$_]+)/)\n  if (!next) {\n    state.tokenize.pop()\n    return state.tokenize[state.tokenize.length-1](stream, state)\n  }\n  return next[0] == \".\" ? null : \"variable\"\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize.pop();\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction expectExpression(last, newline) {\n  return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) ||\n    last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\" ||\n    (last == \"standalone\" && !newline);\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const groovy = {\n  startState: function(indentUnit) {\n    return {\n      tokenize: [tokenBase],\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true,\n      lastToken: null\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      // Automatic semicolon insertion\n      if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) {\n        popContext(state); ctx = state.context;\n      }\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = state.tokenize[state.tokenize.length-1](stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n    // Handle indentation for {x -> \\n ... }\n    else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n      popContext(state);\n      state.context.align = false;\n    }\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    state.lastToken = curPunc || style;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (!state.tokenize[state.tokenize.length-1].isBase) return null;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context;\n    if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) ctx = ctx.prev;\n    var closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"']}\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}