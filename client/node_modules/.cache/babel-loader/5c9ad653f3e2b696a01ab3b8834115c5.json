{"ast":null,"code":"import React from 'react';\nimport { insertAtLineStart } from '../utils/InsertTextAtPosition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title1 = {\n  name: 'title1',\n  keyCommand: 'title1',\n  shortcuts: 'ctrlcmd+1',\n  buttonProps: {\n    'aria-label': 'Insert title 1',\n    title: 'Insert title 1'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 18,\n      textAlign: 'left'\n    },\n    children: \"Title 1\"\n  }),\n  execute: (state, api) => {\n    if (state.selection.start === 0 || /\\n$/.test(state.text)) {\n      api.replaceSelection('# ');\n    } else {\n      insertAtLineStart('# ', state.selection.start, api.textArea);\n    }\n  }\n};","map":{"version":3,"sources":["../../src/commands/title1.tsx"],"names":["title1","name","keyCommand","shortcuts","buttonProps","title","icon","fontSize","textAlign","execute","state","api","insertAtLineStart"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,iBAAA,QAAA,+BAAA;;AAGA,OAAO,IAAMA,MAAgB,GAAG;EAC9BC,IAAI,EAD0B,QAAA;EAE9BC,UAAU,EAFoB,QAAA;EAG9BC,SAAS,EAHqB,WAAA;EAI9BC,WAAW,EAAE;IAAE,cAAF,gBAAA;IAAkCC,KAAK,EAAE;EAAzC,CAJiB;EAK9BC,IAAI,EAAA,aAAE,IAAA,CAAA,KAAA,EAAA;IAAK,KAAK,EAAE;MAAEC,QAAQ,EAAV,EAAA;MAAgBC,SAAS,EAAE;IAA3B,CAAZ;IAAA,QAAA,EAAA;EAAA,CAAA,CALwB;EAM9BC,OAAO,EAAE,CAAA,KAAA,EAAA,GAAA,KAA4C;IACnD,IAAIC,KAAK,CAALA,SAAAA,CAAAA,KAAAA,KAAAA,CAAAA,IAA+B,MAAA,IAAA,CAAWA,KAAK,CAAnD,IAAmC,CAAnC,EAA2D;MACzDC,GAAG,CAAHA,gBAAAA,CAAAA,IAAAA;IADF,CAAA,MAEO;MACLC,iBAAiB,CAAA,IAAA,EAAOF,KAAK,CAALA,SAAAA,CAAP,KAAA,EAA8BC,GAAG,CAAlDC,QAAiB,CAAjBA;IACD;EACF;AAZ6B,CAAzB","sourcesContent":["import React from 'react';\nimport { insertAtLineStart } from '../utils/InsertTextAtPosition';\nimport { ICommand, TextState, TextAreaTextApi } from './';\n\nexport const title1: ICommand = {\n  name: 'title1',\n  keyCommand: 'title1',\n  shortcuts: 'ctrlcmd+1',\n  buttonProps: { 'aria-label': 'Insert title 1', title: 'Insert title 1' },\n  icon: <div style={{ fontSize: 18, textAlign: 'left' }}>Title 1</div>,\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    if (state.selection.start === 0 || /\\n$/.test(state.text)) {\n      api.replaceSelection('# ');\n    } else {\n      insertAtLineStart('# ', state.selection.start, api.textArea);\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}