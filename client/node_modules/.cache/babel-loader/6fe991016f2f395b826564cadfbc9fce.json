{"ast":null,"code":"var own = {}.hasOwnProperty;\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\n\nexport function zwitch(key, options) {\n  var settings = options || {};\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n\n  function one(value) {\n    var fn = one.invalid;\n    var handlers = one.handlers;\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown;\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments);\n    }\n  }\n\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n  return one;\n}","map":{"version":3,"names":["own","hasOwnProperty","zwitch","key","options","settings","one","value","fn","invalid","handlers","call","unknown","apply","arguments"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/zwitch/index.js"],"sourcesContent":["var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n"],"mappings":"AAAA,IAAIA,GAAG,GAAG,GAAGC,cAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;EACnC,IAAIC,QAAQ,GAAGD,OAAO,IAAI,EAA1B;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,SAASE,GAAT,CAAaC,KAAb,EAAoB;IAClB,IAAIC,EAAE,GAAGF,GAAG,CAACG,OAAb;IACA,IAAIC,QAAQ,GAAGJ,GAAG,CAACI,QAAnB;;IAEA,IAAIH,KAAK,IAAIP,GAAG,CAACW,IAAJ,CAASJ,KAAT,EAAgBJ,GAAhB,CAAb,EAAmC;MACjCK,EAAE,GAAGR,GAAG,CAACW,IAAJ,CAASD,QAAT,EAAmBH,KAAK,CAACJ,GAAD,CAAxB,IAAiCO,QAAQ,CAACH,KAAK,CAACJ,GAAD,CAAN,CAAzC,GAAwDG,GAAG,CAACM,OAAjE;IACD;;IAED,IAAIJ,EAAJ,EAAQ;MACN,OAAOA,EAAE,CAACK,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAP;IACD;EACF;;EAEDR,GAAG,CAACI,QAAJ,GAAeL,QAAQ,CAACK,QAAT,IAAqB,EAApC;EACAJ,GAAG,CAACG,OAAJ,GAAcJ,QAAQ,CAACI,OAAvB;EACAH,GAAG,CAACM,OAAJ,GAAcP,QAAQ,CAACO,OAAvB;EAEA,OAAON,GAAP;AACD"},"metadata":{},"sourceType":"module"}