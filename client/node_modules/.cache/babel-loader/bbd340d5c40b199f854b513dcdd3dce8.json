{"ast":null,"code":"// @ts-nocheck\nimport refractorHaskell from './haskell.js';\nidris.displayName = 'idris';\nidris.aliases = ['idr'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function idris(Prism) {\n  Prism.register(refractorHaskell);\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword: /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  });\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  });\n  Prism.languages.idr = Prism.languages.idris;\n}","map":{"version":3,"names":["refractorHaskell","idris","displayName","aliases","Prism","register","languages","extend","comment","pattern","keyword","builtin","undefined","insertBefore","lookbehind","inside","punctuation","idr"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/idris.js"],"sourcesContent":["// @ts-nocheck\nimport refractorHaskell from './haskell.js'\nidris.displayName = 'idris'\nidris.aliases = ['idr']\n\n/** @type {import('../core.js').Syntax} */\nexport default function idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n"],"mappings":"AAAA;AACA,OAAOA,gBAAP,MAA6B,cAA7B;AACAC,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,CAAC,KAAD,CAAhB;AAEA;;AACA,eAAe,SAASF,KAAT,CAAeG,KAAf,EAAsB;EACnCA,KAAK,CAACC,QAAN,CAAeL,gBAAf;EACAI,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,SAAvB,EAAkC;IACxDC,OAAO,EAAE;MACPC,OAAO,EAAE;IADF,CAD+C;IAIxDC,OAAO,EACL,iTALsD;IAMxDC,OAAO,EAAEC;EAN+C,CAAlC,CAAxB;EAQAR,KAAK,CAACE,SAAN,CAAgBO,YAAhB,CAA6B,OAA7B,EAAsC,SAAtC,EAAiD;IAC/C,oBAAoB;MAClBJ,OAAO,EAAE,mDADS;MAElBK,UAAU,EAAE,IAFM;MAGlBC,MAAM,EAAE;QACNC,WAAW,EAAE;MADP;IAHU;EAD2B,CAAjD;EASAZ,KAAK,CAACE,SAAN,CAAgBW,GAAhB,GAAsBb,KAAK,CAACE,SAAN,CAAgBL,KAAtC;AACD"},"metadata":{},"sourceType":"module"}