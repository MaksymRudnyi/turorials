{"ast":null,"code":"function mkVBScript(parserConf) {\n  var ERRORCLASS = 'error';\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n  }\n\n  var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&\\\\\\\\\\\\^<>=]\");\n  var doubleOperators = new RegExp(\"^((<>)|(<=)|(>=))\");\n  var singleDelimiters = new RegExp('^[\\\\.,]');\n  var brackets = new RegExp('^[\\\\(\\\\)]');\n  var identifiers = new RegExp(\"^[A-Za-z][_A-Za-z0-9]*\");\n  var openingKeywords = ['class', 'sub', 'select', 'while', 'if', 'function', 'property', 'with', 'for'];\n  var middleKeywords = ['else', 'elseif', 'case'];\n  var endKeywords = ['next', 'loop', 'wend'];\n  var wordOperators = wordRegexp(['and', 'or', 'not', 'xor', 'is', 'mod', 'eqv', 'imp']);\n  var commonkeywords = ['dim', 'redim', 'then', 'until', 'randomize', 'byval', 'byref', 'new', 'property', 'exit', 'in', 'const', 'private', 'public', 'get', 'set', 'let', 'stop', 'on error resume next', 'on error goto 0', 'option explicit', 'call', 'me']; //This list was from: http://msdn.microsoft.com/en-us/library/f8tbc79x(v=vs.84).aspx\n\n  var atomWords = ['true', 'false', 'nothing', 'empty', 'null']; //This list was from: http://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx\n\n  var builtinFuncsWords = ['abs', 'array', 'asc', 'atn', 'cbool', 'cbyte', 'ccur', 'cdate', 'cdbl', 'chr', 'cint', 'clng', 'cos', 'csng', 'cstr', 'date', 'dateadd', 'datediff', 'datepart', 'dateserial', 'datevalue', 'day', 'escape', 'eval', 'execute', 'exp', 'filter', 'formatcurrency', 'formatdatetime', 'formatnumber', 'formatpercent', 'getlocale', 'getobject', 'getref', 'hex', 'hour', 'inputbox', 'instr', 'instrrev', 'int', 'fix', 'isarray', 'isdate', 'isempty', 'isnull', 'isnumeric', 'isobject', 'join', 'lbound', 'lcase', 'left', 'len', 'loadpicture', 'log', 'ltrim', 'rtrim', 'trim', 'maths', 'mid', 'minute', 'month', 'monthname', 'msgbox', 'now', 'oct', 'replace', 'rgb', 'right', 'rnd', 'round', 'scriptengine', 'scriptenginebuildversion', 'scriptenginemajorversion', 'scriptengineminorversion', 'second', 'setlocale', 'sgn', 'sin', 'space', 'split', 'sqr', 'strcomp', 'string', 'strreverse', 'tan', 'time', 'timer', 'timeserial', 'timevalue', 'typename', 'ubound', 'ucase', 'unescape', 'vartype', 'weekday', 'weekdayname', 'year']; //This list was from: http://msdn.microsoft.com/en-us/library/ydz4cfk3(v=vs.84).aspx\n\n  var builtinConsts = ['vbBlack', 'vbRed', 'vbGreen', 'vbYellow', 'vbBlue', 'vbMagenta', 'vbCyan', 'vbWhite', 'vbBinaryCompare', 'vbTextCompare', 'vbSunday', 'vbMonday', 'vbTuesday', 'vbWednesday', 'vbThursday', 'vbFriday', 'vbSaturday', 'vbUseSystemDayOfWeek', 'vbFirstJan1', 'vbFirstFourDays', 'vbFirstFullWeek', 'vbGeneralDate', 'vbLongDate', 'vbShortDate', 'vbLongTime', 'vbShortTime', 'vbObjectError', 'vbOKOnly', 'vbOKCancel', 'vbAbortRetryIgnore', 'vbYesNoCancel', 'vbYesNo', 'vbRetryCancel', 'vbCritical', 'vbQuestion', 'vbExclamation', 'vbInformation', 'vbDefaultButton1', 'vbDefaultButton2', 'vbDefaultButton3', 'vbDefaultButton4', 'vbApplicationModal', 'vbSystemModal', 'vbOK', 'vbCancel', 'vbAbort', 'vbRetry', 'vbIgnore', 'vbYes', 'vbNo', 'vbCr', 'VbCrLf', 'vbFormFeed', 'vbLf', 'vbNewLine', 'vbNullChar', 'vbNullString', 'vbTab', 'vbVerticalTab', 'vbUseDefault', 'vbTrue', 'vbFalse', 'vbEmpty', 'vbNull', 'vbInteger', 'vbLong', 'vbSingle', 'vbDouble', 'vbCurrency', 'vbDate', 'vbString', 'vbObject', 'vbError', 'vbBoolean', 'vbVariant', 'vbDataObject', 'vbDecimal', 'vbByte', 'vbArray']; //This list was from: http://msdn.microsoft.com/en-us/library/hkc375ea(v=vs.84).aspx\n\n  var builtinObjsWords = ['WScript', 'err', 'debug', 'RegExp'];\n  var knownProperties = ['description', 'firstindex', 'global', 'helpcontext', 'helpfile', 'ignorecase', 'length', 'number', 'pattern', 'source', 'value', 'count'];\n  var knownMethods = ['clear', 'execute', 'raise', 'replace', 'test', 'write', 'writeline', 'close', 'open', 'state', 'eof', 'update', 'addnew', 'end', 'createobject', 'quit'];\n  var aspBuiltinObjsWords = ['server', 'response', 'request', 'session', 'application'];\n  var aspKnownProperties = ['buffer', 'cachecontrol', 'charset', 'contenttype', 'expires', 'expiresabsolute', 'isclientconnected', 'pics', 'status', //response\n  'clientcertificate', 'cookies', 'form', 'querystring', 'servervariables', 'totalbytes', //request\n  'contents', 'staticobjects', //application\n  'codepage', 'lcid', 'sessionid', 'timeout', //session\n  'scripttimeout']; //server\n\n  var aspKnownMethods = ['addheader', 'appendtolog', 'binarywrite', 'end', 'flush', 'redirect', //response\n  'binaryread', //request\n  'remove', 'removeall', 'lock', 'unlock', //application\n  'abandon', //session\n  'getlasterror', 'htmlencode', 'mappath', 'transfer', 'urlencode']; //server\n\n  var knownWords = knownMethods.concat(knownProperties);\n  builtinObjsWords = builtinObjsWords.concat(builtinConsts);\n\n  if (parserConf.isASP) {\n    builtinObjsWords = builtinObjsWords.concat(aspBuiltinObjsWords);\n    knownWords = knownWords.concat(aspKnownMethods, aspKnownProperties);\n  }\n\n  ;\n  var keywords = wordRegexp(commonkeywords);\n  var atoms = wordRegexp(atomWords);\n  var builtinFuncs = wordRegexp(builtinFuncsWords);\n  var builtinObjs = wordRegexp(builtinObjsWords);\n  var known = wordRegexp(knownWords);\n  var stringPrefixes = '\"';\n  var opening = wordRegexp(openingKeywords);\n  var middle = wordRegexp(middleKeywords);\n  var closing = wordRegexp(endKeywords);\n  var doubleClosing = wordRegexp(['end']);\n  var doOpening = wordRegexp(['do']);\n  var noIndentWords = wordRegexp(['on error resume next', 'exit']);\n  var comment = wordRegexp(['rem']);\n\n  function indent(_stream, state) {\n    state.currentIndent++;\n  }\n\n  function dedent(_stream, state) {\n    state.currentIndent--;\n  } // tokenizers\n\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) {\n      return null; //return null;\n    }\n\n    var ch = stream.peek(); // Handle Comments\n\n    if (ch === \"'\") {\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    if (stream.match(comment)) {\n      stream.skipToEnd();\n      return 'comment';\n    } // Handle Number Literals\n\n\n    if (stream.match(/^((&H)|(&O))?[0-9\\.]/i, false) && !stream.match(/^((&H)|(&O))?[0-9\\.]+[a-z_]/i, false)) {\n      var floatLiteral = false; // Floats\n\n      if (stream.match(/^\\d*\\.\\d+/i)) {\n        floatLiteral = true;\n      } else if (stream.match(/^\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      } else if (stream.match(/^\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // Float literals may be \"imaginary\"\n        stream.eat(/J/i);\n        return 'number';\n      } // Integers\n\n\n      var intLiteral = false; // Hex\n\n      if (stream.match(/^&H[0-9a-f]+/i)) {\n        intLiteral = true;\n      } // Octal\n      else if (stream.match(/^&O[0-7]+/i)) {\n        intLiteral = true;\n      } // Decimal\n      else if (stream.match(/^[1-9]\\d*F?/)) {\n        // Decimal literals may be \"imaginary\"\n        stream.eat(/J/i); // TODO - Can you have imaginary longs?\n\n        intLiteral = true;\n      } // Zero by itself with no other piece of number.\n      else if (stream.match(/^0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n\n      if (intLiteral) {\n        // Integer literals may be \"long\"\n        stream.eat(/L/i);\n        return 'number';\n      }\n    } // Handle Strings\n\n\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenStringFactory(stream.current());\n      return state.tokenize(stream, state);\n    } // Handle operators and Delimiters\n\n\n    if (stream.match(doubleOperators) || stream.match(singleOperators) || stream.match(wordOperators)) {\n      return 'operator';\n    }\n\n    if (stream.match(singleDelimiters)) {\n      return null;\n    }\n\n    if (stream.match(brackets)) {\n      return \"bracket\";\n    }\n\n    if (stream.match(noIndentWords)) {\n      state.doInCurrentLine = true;\n      return 'keyword';\n    }\n\n    if (stream.match(doOpening)) {\n      indent(stream, state);\n      state.doInCurrentLine = true;\n      return 'keyword';\n    }\n\n    if (stream.match(opening)) {\n      if (!state.doInCurrentLine) indent(stream, state);else state.doInCurrentLine = false;\n      return 'keyword';\n    }\n\n    if (stream.match(middle)) {\n      return 'keyword';\n    }\n\n    if (stream.match(doubleClosing)) {\n      dedent(stream, state);\n      dedent(stream, state);\n      return 'keyword';\n    }\n\n    if (stream.match(closing)) {\n      if (!state.doInCurrentLine) dedent(stream, state);else state.doInCurrentLine = false;\n      return 'keyword';\n    }\n\n    if (stream.match(keywords)) {\n      return 'keyword';\n    }\n\n    if (stream.match(atoms)) {\n      return 'atom';\n    }\n\n    if (stream.match(known)) {\n      return 'variableName.special';\n    }\n\n    if (stream.match(builtinFuncs)) {\n      return 'builtin';\n    }\n\n    if (stream.match(builtinObjs)) {\n      return 'builtin';\n    }\n\n    if (stream.match(identifiers)) {\n      return 'variable';\n    } // Handle non-detected items\n\n\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenStringFactory(delimiter) {\n    var singleline = delimiter.length == 1;\n    var OUTCLASS = 'string';\n    return function (stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"]/);\n\n        if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return OUTCLASS;\n        } else {\n          stream.eat(/['\"]/);\n        }\n      }\n\n      if (singleline) {\n        state.tokenize = tokenBase;\n      }\n\n      return OUTCLASS;\n    };\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current(); // Handle '.' connected identifiers\n\n    if (current === '.') {\n      style = state.tokenize(stream, state);\n      current = stream.current();\n\n      if (style && (style.substr(0, 8) === 'variable' || style === 'builtin' || style === 'keyword')) {\n        //|| knownWords.indexOf(current.substring(1)) > -1) {\n        if (style === 'builtin' || style === 'keyword') style = 'variable';\n        if (knownWords.indexOf(current.substr(1)) > -1) style = 'keyword';\n        return style;\n      } else {\n        return ERRORCLASS;\n      }\n    }\n\n    return style;\n  }\n\n  return {\n    startState: function () {\n      return {\n        tokenize: tokenBase,\n        lastToken: null,\n        currentIndent: 0,\n        nextLineIndent: 0,\n        doInCurrentLine: false,\n        ignoreKeyword: false\n      };\n    },\n    token: function (stream, state) {\n      if (stream.sol()) {\n        state.currentIndent += state.nextLineIndent;\n        state.nextLineIndent = 0;\n        state.doInCurrentLine = 0;\n      }\n\n      var style = tokenLexer(stream, state);\n      state.lastToken = {\n        style: style,\n        content: stream.current()\n      };\n      if (style === null) style = null;\n      return style;\n    },\n    indent: function (state, textAfter, cx) {\n      var trueText = textAfter.replace(/^\\s+|\\s+$/g, '');\n      if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return cx.unit * (state.currentIndent - 1);\n      if (state.currentIndent < 0) return 0;\n      return state.currentIndent * cx.unit;\n    }\n  };\n}\n\n;\nexport const vbScript = mkVBScript({});\nexport const vbScriptASP = mkVBScript({\n  isASP: true\n});","map":{"version":3,"names":["mkVBScript","parserConf","ERRORCLASS","wordRegexp","words","RegExp","join","singleOperators","doubleOperators","singleDelimiters","brackets","identifiers","openingKeywords","middleKeywords","endKeywords","wordOperators","commonkeywords","atomWords","builtinFuncsWords","builtinConsts","builtinObjsWords","knownProperties","knownMethods","aspBuiltinObjsWords","aspKnownProperties","aspKnownMethods","knownWords","concat","isASP","keywords","atoms","builtinFuncs","builtinObjs","known","stringPrefixes","opening","middle","closing","doubleClosing","doOpening","noIndentWords","comment","indent","_stream","state","currentIndent","dedent","tokenBase","stream","eatSpace","ch","peek","skipToEnd","match","floatLiteral","eat","intLiteral","tokenize","tokenStringFactory","current","doInCurrentLine","next","delimiter","singleline","length","OUTCLASS","eol","eatWhile","tokenLexer","style","substr","indexOf","startState","lastToken","nextLineIndent","ignoreKeyword","token","sol","content","textAfter","cx","trueText","replace","unit","vbScript","vbScriptASP"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/vbscript.js"],"sourcesContent":["function mkVBScript(parserConf) {\n    var ERRORCLASS = 'error';\n\n    function wordRegexp(words) {\n        return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&\\\\\\\\\\\\^<>=]\");\n    var doubleOperators = new RegExp(\"^((<>)|(<=)|(>=))\");\n    var singleDelimiters = new RegExp('^[\\\\.,]');\n    var brackets = new RegExp('^[\\\\(\\\\)]');\n    var identifiers = new RegExp(\"^[A-Za-z][_A-Za-z0-9]*\");\n\n    var openingKeywords = ['class','sub','select','while','if','function', 'property', 'with', 'for'];\n    var middleKeywords = ['else','elseif','case'];\n    var endKeywords = ['next','loop','wend'];\n\n    var wordOperators = wordRegexp(['and', 'or', 'not', 'xor', 'is', 'mod', 'eqv', 'imp']);\n    var commonkeywords = ['dim', 'redim', 'then',  'until', 'randomize',\n                          'byval','byref','new','property', 'exit', 'in',\n                          'const','private', 'public',\n                          'get','set','let', 'stop', 'on error resume next', 'on error goto 0', 'option explicit', 'call', 'me'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/f8tbc79x(v=vs.84).aspx\n    var atomWords = ['true', 'false', 'nothing', 'empty', 'null'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx\n    var builtinFuncsWords = ['abs', 'array', 'asc', 'atn', 'cbool', 'cbyte', 'ccur', 'cdate', 'cdbl', 'chr', 'cint', 'clng', 'cos', 'csng', 'cstr', 'date', 'dateadd', 'datediff', 'datepart',\n                        'dateserial', 'datevalue', 'day', 'escape', 'eval', 'execute', 'exp', 'filter', 'formatcurrency', 'formatdatetime', 'formatnumber', 'formatpercent', 'getlocale', 'getobject',\n                        'getref', 'hex', 'hour', 'inputbox', 'instr', 'instrrev', 'int', 'fix', 'isarray', 'isdate', 'isempty', 'isnull', 'isnumeric', 'isobject', 'join', 'lbound', 'lcase', 'left',\n                        'len', 'loadpicture', 'log', 'ltrim', 'rtrim', 'trim', 'maths', 'mid', 'minute', 'month', 'monthname', 'msgbox', 'now', 'oct', 'replace', 'rgb', 'right', 'rnd', 'round',\n                        'scriptengine', 'scriptenginebuildversion', 'scriptenginemajorversion', 'scriptengineminorversion', 'second', 'setlocale', 'sgn', 'sin', 'space', 'split', 'sqr', 'strcomp',\n                        'string', 'strreverse', 'tan', 'time', 'timer', 'timeserial', 'timevalue', 'typename', 'ubound', 'ucase', 'unescape', 'vartype', 'weekday', 'weekdayname', 'year'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/ydz4cfk3(v=vs.84).aspx\n    var builtinConsts = ['vbBlack', 'vbRed', 'vbGreen', 'vbYellow', 'vbBlue', 'vbMagenta', 'vbCyan', 'vbWhite', 'vbBinaryCompare', 'vbTextCompare',\n                         'vbSunday', 'vbMonday', 'vbTuesday', 'vbWednesday', 'vbThursday', 'vbFriday', 'vbSaturday', 'vbUseSystemDayOfWeek', 'vbFirstJan1', 'vbFirstFourDays', 'vbFirstFullWeek',\n                         'vbGeneralDate', 'vbLongDate', 'vbShortDate', 'vbLongTime', 'vbShortTime', 'vbObjectError',\n                         'vbOKOnly', 'vbOKCancel', 'vbAbortRetryIgnore', 'vbYesNoCancel', 'vbYesNo', 'vbRetryCancel', 'vbCritical', 'vbQuestion', 'vbExclamation', 'vbInformation', 'vbDefaultButton1', 'vbDefaultButton2',\n                         'vbDefaultButton3', 'vbDefaultButton4', 'vbApplicationModal', 'vbSystemModal', 'vbOK', 'vbCancel', 'vbAbort', 'vbRetry', 'vbIgnore', 'vbYes', 'vbNo',\n                         'vbCr', 'VbCrLf', 'vbFormFeed', 'vbLf', 'vbNewLine', 'vbNullChar', 'vbNullString', 'vbTab', 'vbVerticalTab', 'vbUseDefault', 'vbTrue', 'vbFalse',\n                         'vbEmpty', 'vbNull', 'vbInteger', 'vbLong', 'vbSingle', 'vbDouble', 'vbCurrency', 'vbDate', 'vbString', 'vbObject', 'vbError', 'vbBoolean', 'vbVariant', 'vbDataObject', 'vbDecimal', 'vbByte', 'vbArray'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/hkc375ea(v=vs.84).aspx\n    var builtinObjsWords = ['WScript', 'err', 'debug', 'RegExp'];\n    var knownProperties = ['description', 'firstindex', 'global', 'helpcontext', 'helpfile', 'ignorecase', 'length', 'number', 'pattern', 'source', 'value', 'count'];\n    var knownMethods = ['clear', 'execute', 'raise', 'replace', 'test', 'write', 'writeline', 'close', 'open', 'state', 'eof', 'update', 'addnew', 'end', 'createobject', 'quit'];\n\n    var aspBuiltinObjsWords = ['server', 'response', 'request', 'session', 'application'];\n    var aspKnownProperties = ['buffer', 'cachecontrol', 'charset', 'contenttype', 'expires', 'expiresabsolute', 'isclientconnected', 'pics', 'status', //response\n                              'clientcertificate', 'cookies', 'form', 'querystring', 'servervariables', 'totalbytes', //request\n                              'contents', 'staticobjects', //application\n                              'codepage', 'lcid', 'sessionid', 'timeout', //session\n                              'scripttimeout']; //server\n    var aspKnownMethods = ['addheader', 'appendtolog', 'binarywrite', 'end', 'flush', 'redirect', //response\n                           'binaryread', //request\n                           'remove', 'removeall', 'lock', 'unlock', //application\n                           'abandon', //session\n                           'getlasterror', 'htmlencode', 'mappath', 'transfer', 'urlencode']; //server\n\n    var knownWords = knownMethods.concat(knownProperties);\n\n    builtinObjsWords = builtinObjsWords.concat(builtinConsts);\n\n    if (parserConf.isASP){\n        builtinObjsWords = builtinObjsWords.concat(aspBuiltinObjsWords);\n        knownWords = knownWords.concat(aspKnownMethods, aspKnownProperties);\n    };\n\n    var keywords = wordRegexp(commonkeywords);\n    var atoms = wordRegexp(atomWords);\n    var builtinFuncs = wordRegexp(builtinFuncsWords);\n    var builtinObjs = wordRegexp(builtinObjsWords);\n    var known = wordRegexp(knownWords);\n    var stringPrefixes = '\"';\n\n    var opening = wordRegexp(openingKeywords);\n    var middle = wordRegexp(middleKeywords);\n    var closing = wordRegexp(endKeywords);\n    var doubleClosing = wordRegexp(['end']);\n    var doOpening = wordRegexp(['do']);\n    var noIndentWords = wordRegexp(['on error resume next', 'exit']);\n    var comment = wordRegexp(['rem']);\n\n\n    function indent(_stream, state) {\n      state.currentIndent++;\n    }\n\n    function dedent(_stream, state) {\n      state.currentIndent--;\n    }\n    // tokenizers\n    function tokenBase(stream, state) {\n        if (stream.eatSpace()) {\n            return null\n            //return null;\n        }\n\n        var ch = stream.peek();\n\n        // Handle Comments\n        if (ch === \"'\") {\n            stream.skipToEnd();\n            return 'comment';\n        }\n        if (stream.match(comment)){\n            stream.skipToEnd();\n            return 'comment';\n        }\n\n\n        // Handle Number Literals\n        if (stream.match(/^((&H)|(&O))?[0-9\\.]/i, false) && !stream.match(/^((&H)|(&O))?[0-9\\.]+[a-z_]/i, false)) {\n            var floatLiteral = false;\n            // Floats\n            if (stream.match(/^\\d*\\.\\d+/i)) { floatLiteral = true; }\n            else if (stream.match(/^\\d+\\.\\d*/)) { floatLiteral = true; }\n            else if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n\n            if (floatLiteral) {\n                // Float literals may be \"imaginary\"\n                stream.eat(/J/i);\n                return 'number';\n            }\n            // Integers\n            var intLiteral = false;\n            // Hex\n            if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n            // Octal\n            else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n            // Decimal\n            else if (stream.match(/^[1-9]\\d*F?/)) {\n                // Decimal literals may be \"imaginary\"\n                stream.eat(/J/i);\n                // TODO - Can you have imaginary longs?\n                intLiteral = true;\n            }\n            // Zero by itself with no other piece of number.\n            else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n            if (intLiteral) {\n                // Integer literals may be \"long\"\n                stream.eat(/L/i);\n                return 'number';\n            }\n        }\n\n        // Handle Strings\n        if (stream.match(stringPrefixes)) {\n            state.tokenize = tokenStringFactory(stream.current());\n            return state.tokenize(stream, state);\n        }\n\n        // Handle operators and Delimiters\n        if (stream.match(doubleOperators)\n            || stream.match(singleOperators)\n            || stream.match(wordOperators)) {\n            return 'operator';\n        }\n        if (stream.match(singleDelimiters)) {\n            return null;\n        }\n\n        if (stream.match(brackets)) {\n            return \"bracket\";\n        }\n\n        if (stream.match(noIndentWords)) {\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n\n        if (stream.match(doOpening)) {\n            indent(stream,state);\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n        if (stream.match(opening)) {\n            if (! state.doInCurrentLine)\n              indent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n        if (stream.match(middle)) {\n            return 'keyword';\n        }\n\n\n        if (stream.match(doubleClosing)) {\n            dedent(stream,state);\n            dedent(stream,state);\n\n            return 'keyword';\n        }\n        if (stream.match(closing)) {\n            if (! state.doInCurrentLine)\n              dedent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n\n        if (stream.match(keywords)) {\n            return 'keyword';\n        }\n\n        if (stream.match(atoms)) {\n            return 'atom';\n        }\n\n        if (stream.match(known)) {\n            return 'variableName.special';\n        }\n\n        if (stream.match(builtinFuncs)) {\n            return 'builtin';\n        }\n\n        if (stream.match(builtinObjs)){\n            return 'builtin';\n        }\n\n        if (stream.match(identifiers)) {\n            return 'variable';\n        }\n\n        // Handle non-detected items\n        stream.next();\n        return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n        var singleline = delimiter.length == 1;\n        var OUTCLASS = 'string';\n\n        return function(stream, state) {\n            while (!stream.eol()) {\n                stream.eatWhile(/[^'\"]/);\n                if (stream.match(delimiter)) {\n                    state.tokenize = tokenBase;\n                    return OUTCLASS;\n                } else {\n                    stream.eat(/['\"]/);\n                }\n            }\n            if (singleline) {\n              state.tokenize = tokenBase;\n            }\n            return OUTCLASS;\n        };\n    }\n\n\n    function tokenLexer(stream, state) {\n        var style = state.tokenize(stream, state);\n        var current = stream.current();\n\n        // Handle '.' connected identifiers\n        if (current === '.') {\n            style = state.tokenize(stream, state);\n\n            current = stream.current();\n            if (style && (style.substr(0, 8) === 'variable' || style==='builtin' || style==='keyword')){//|| knownWords.indexOf(current.substring(1)) > -1) {\n                if (style === 'builtin' || style === 'keyword') style='variable';\n                if (knownWords.indexOf(current.substr(1)) > -1) style='keyword';\n\n                return style;\n            } else {\n                return ERRORCLASS;\n            }\n        }\n\n        return style;\n    }\n\n    return {\n        startState: function() {\n            return {\n              tokenize: tokenBase,\n              lastToken: null,\n              currentIndent: 0,\n              nextLineIndent: 0,\n              doInCurrentLine: false,\n              ignoreKeyword: false\n\n\n          };\n        },\n\n        token: function(stream, state) {\n            if (stream.sol()) {\n              state.currentIndent += state.nextLineIndent;\n              state.nextLineIndent = 0;\n              state.doInCurrentLine = 0;\n            }\n            var style = tokenLexer(stream, state);\n\n            state.lastToken = {style:style, content: stream.current()};\n\n            if (style===null) style=null;\n\n            return style;\n        },\n\n        indent: function(state, textAfter, cx) {\n            var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n            if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return cx.unit*(state.currentIndent-1);\n            if(state.currentIndent < 0) return 0;\n            return state.currentIndent * cx.unit\n        }\n\n    };\n};\n\nexport const vbScript = mkVBScript({})\nexport const vbScriptASP = mkVBScript({isASP: true})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}