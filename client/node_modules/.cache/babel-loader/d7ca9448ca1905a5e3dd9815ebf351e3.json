{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nimport refractorMarkupTemplating from './markup-templating.js';\ntt2.displayName = 'tt2';\ntt2.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function tt2(Prism) {\n  Prism.register(refractorClike);\n  Prism.register(refractorMarkupTemplating);\n\n  (function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    });\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    });\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    });\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }); // The different types of TT2 strings \"replace\" the C-like standard string\n\n    delete Prism.languages.tt2.string;\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n    });\n  })(Prism);\n}","map":{"version":3,"names":["refractorClike","refractorMarkupTemplating","tt2","displayName","aliases","Prism","register","languages","extend","comment","keyword","punctuation","insertBefore","operator","variable","pattern","delimiter","alias","greedy","inside","string","hooks","add","env","tt2Pattern","buildPlaceholders","tokenizePlaceholders"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/tt2.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nimport refractorMarkupTemplating from './markup-templating.js'\ntt2.displayName = 'tt2'\ntt2.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function tt2(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACA,OAAOC,yBAAP,MAAsC,wBAAtC;AACAC,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;EACjCA,KAAK,CAACC,QAAN,CAAeN,cAAf;EACAK,KAAK,CAACC,QAAN,CAAeL,yBAAf;;EACC,CAAC,UAAUI,KAAV,EAAiB;IACjBA,KAAK,CAACE,SAAN,CAAgBL,GAAhB,GAAsBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;MACpDC,OAAO,EAAE,qBAD2C;MAEpDC,OAAO,EACL,yNAHkD;MAIpDC,WAAW,EAAE;IAJuC,CAAhC,CAAtB;IAMAN,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,KAA7B,EAAoC,QAApC,EAA8C;MAC5CC,QAAQ,EAAE,gDADkC;MAE5CC,QAAQ,EAAE;QACRC,OAAO,EAAE;MADD;IAFkC,CAA9C;IAMAV,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,KAA7B,EAAoC,SAApC,EAA+C;MAC7CI,SAAS,EAAE;QACTD,OAAO,EAAE,sBADA;QAETE,KAAK,EAAE;MAFE;IADkC,CAA/C;IAMAZ,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,KAA7B,EAAoC,QAApC,EAA8C;MAC5C,wBAAwB;QACtBG,OAAO,EAAE,+BADa;QAEtBG,MAAM,EAAE,IAFc;QAGtBD,KAAK,EAAE;MAHe,CADoB;MAM5C,wBAAwB;QACtBF,OAAO,EAAE,+BADa;QAEtBG,MAAM,EAAE,IAFc;QAGtBD,KAAK,EAAE,QAHe;QAItBE,MAAM,EAAE;UACNL,QAAQ,EAAE;YACRC,OAAO,EAAE;UADD;QADJ;MAJc;IANoB,CAA9C,EAnBiB,CAmCd;;IAEH,OAAOV,KAAK,CAACE,SAAN,CAAgBL,GAAhB,CAAoBkB,MAA3B;IACAf,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;MAChD,IAAIC,UAAU,GAAG,iBAAjB;MACAnB,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCkB,iBAArC,CACEF,GADF,EAEE,KAFF,EAGEC,UAHF;IAKD,CAPD;IAQAnB,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;MAC/ClB,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCmB,oBAArC,CAA0DH,GAA1D,EAA+D,KAA/D;IACD,CAFD;EAGD,CAjDA,EAiDElB,KAjDF;AAkDF"},"metadata":{},"sourceType":"module"}