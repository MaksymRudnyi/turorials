{"ast":null,"code":"function switchState(source, setState, f) {\n  setState(f);\n  return f(source, setState);\n}\n\nvar lowerRE = /[a-z]/;\nvar upperRE = /[A-Z]/;\nvar innerRE = /[a-zA-Z0-9_]/;\nvar digitRE = /[0-9]/;\nvar hexRE = /[0-9A-Fa-f]/;\nvar symbolRE = /[-&*+.\\\\/<>=?^|:]/;\nvar specialRE = /[(),[\\]{}]/;\nvar spacesRE = /[ \\v\\f]/; // newlines are handled in tokenizer\n\nfunction normal() {\n  return function (source, setState) {\n    if (source.eatWhile(spacesRE)) {\n      return null;\n    }\n\n    var char = source.next();\n\n    if (specialRE.test(char)) {\n      return char === '{' && source.eat('-') ? switchState(source, setState, chompMultiComment(1)) : char === '[' && source.match('glsl|') ? switchState(source, setState, chompGlsl) : 'builtin';\n    }\n\n    if (char === '\\'') {\n      return switchState(source, setState, chompChar);\n    }\n\n    if (char === '\"') {\n      return source.eat('\"') ? source.eat('\"') ? switchState(source, setState, chompMultiString) : 'string' : switchState(source, setState, chompSingleString);\n    }\n\n    if (upperRE.test(char)) {\n      source.eatWhile(innerRE);\n      return 'type';\n    }\n\n    if (lowerRE.test(char)) {\n      var isDef = source.pos === 1;\n      source.eatWhile(innerRE);\n      return isDef ? \"def\" : \"variable\";\n    }\n\n    if (digitRE.test(char)) {\n      if (char === '0') {\n        if (source.eat(/[xX]/)) {\n          source.eatWhile(hexRE); // should require at least 1\n\n          return \"number\";\n        }\n      } else {\n        source.eatWhile(digitRE);\n      }\n\n      if (source.eat('.')) {\n        source.eatWhile(digitRE); // should require at least 1\n      }\n\n      if (source.eat(/[eE]/)) {\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n\n      return \"number\";\n    }\n\n    if (symbolRE.test(char)) {\n      if (char === '-' && source.eat('-')) {\n        source.skipToEnd();\n        return \"comment\";\n      }\n\n      source.eatWhile(symbolRE);\n      return \"keyword\";\n    }\n\n    if (char === '_') {\n      return \"keyword\";\n    }\n\n    return \"error\";\n  };\n}\n\nfunction chompMultiComment(nest) {\n  if (nest == 0) {\n    return normal();\n  }\n\n  return function (source, setState) {\n    while (!source.eol()) {\n      var char = source.next();\n\n      if (char == '{' && source.eat('-')) {\n        ++nest;\n      } else if (char == '-' && source.eat('}')) {\n        --nest;\n\n        if (nest === 0) {\n          setState(normal());\n          return 'comment';\n        }\n      }\n    }\n\n    setState(chompMultiComment(nest));\n    return 'comment';\n  };\n}\n\nfunction chompMultiString(source, setState) {\n  while (!source.eol()) {\n    var char = source.next();\n\n    if (char === '\"' && source.eat('\"') && source.eat('\"')) {\n      setState(normal());\n      return 'string';\n    }\n  }\n\n  return 'string';\n}\n\nfunction chompSingleString(source, setState) {\n  while (source.skipTo('\\\\\"')) {\n    source.next();\n    source.next();\n  }\n\n  if (source.skipTo('\"')) {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompChar(source, setState) {\n  while (source.skipTo(\"\\\\'\")) {\n    source.next();\n    source.next();\n  }\n\n  if (source.skipTo(\"'\")) {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompGlsl(source, setState) {\n  while (!source.eol()) {\n    var char = source.next();\n\n    if (char === '|' && source.eat(']')) {\n      setState(normal());\n      return 'string';\n    }\n  }\n\n  return 'string';\n}\n\nvar wellKnownWords = {\n  case: 1,\n  of: 1,\n  as: 1,\n  if: 1,\n  then: 1,\n  else: 1,\n  let: 1,\n  in: 1,\n  type: 1,\n  alias: 1,\n  module: 1,\n  where: 1,\n  import: 1,\n  exposing: 1,\n  port: 1\n};\nexport const elm = {\n  startState: function () {\n    return {\n      f: normal()\n    };\n  },\n  copyState: function (s) {\n    return {\n      f: s.f\n    };\n  },\n  token: function (stream, state) {\n    var type = state.f(stream, function (s) {\n      state.f = s;\n    });\n    var word = stream.current();\n    return wellKnownWords.hasOwnProperty(word) ? 'keyword' : type;\n  }\n};","map":{"version":3,"names":["switchState","source","setState","f","lowerRE","upperRE","innerRE","digitRE","hexRE","symbolRE","specialRE","spacesRE","normal","eatWhile","char","next","test","eat","chompMultiComment","match","chompGlsl","chompChar","chompMultiString","chompSingleString","isDef","pos","skipToEnd","nest","eol","skipTo","wellKnownWords","case","of","as","if","then","else","let","in","type","alias","module","where","import","exposing","port","elm","startState","copyState","s","token","stream","state","word","current","hasOwnProperty"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/elm.js"],"sourcesContent":["function switchState(source, setState, f)\n{\n  setState(f);\n  return f(source, setState);\n}\n\nvar lowerRE = /[a-z]/;\nvar upperRE = /[A-Z]/;\nvar innerRE = /[a-zA-Z0-9_]/;\n\nvar digitRE = /[0-9]/;\nvar hexRE = /[0-9A-Fa-f]/;\nvar symbolRE = /[-&*+.\\\\/<>=?^|:]/;\nvar specialRE = /[(),[\\]{}]/;\nvar spacesRE = /[ \\v\\f]/; // newlines are handled in tokenizer\n\nfunction normal()\n{\n  return function(source, setState)\n  {\n    if (source.eatWhile(spacesRE))\n    {\n      return null;\n    }\n\n    var char = source.next();\n\n    if (specialRE.test(char))\n    {\n      return (char === '{' && source.eat('-'))\n        ? switchState(source, setState, chompMultiComment(1))\n        : (char === '[' && source.match('glsl|'))\n        ? switchState(source, setState, chompGlsl)\n        : 'builtin';\n    }\n\n    if (char === '\\'')\n    {\n      return switchState(source, setState, chompChar);\n    }\n\n    if (char === '\"')\n    {\n      return source.eat('\"')\n        ? source.eat('\"')\n        ? switchState(source, setState, chompMultiString)\n        : 'string'\n      : switchState(source, setState, chompSingleString);\n    }\n\n    if (upperRE.test(char))\n    {\n      source.eatWhile(innerRE);\n      return 'type';\n    }\n\n    if (lowerRE.test(char))\n    {\n      var isDef = source.pos === 1;\n      source.eatWhile(innerRE);\n      return isDef ? \"def\" : \"variable\";\n    }\n\n    if (digitRE.test(char))\n    {\n      if (char === '0')\n      {\n        if (source.eat(/[xX]/))\n        {\n          source.eatWhile(hexRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      else\n      {\n        source.eatWhile(digitRE);\n      }\n      if (source.eat('.'))\n      {\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      if (source.eat(/[eE]/))\n      {\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return \"number\";\n    }\n\n    if (symbolRE.test(char))\n    {\n      if (char === '-' && source.eat('-'))\n      {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      source.eatWhile(symbolRE);\n      return \"keyword\";\n    }\n\n    if (char === '_')\n    {\n      return \"keyword\";\n    }\n\n    return \"error\";\n  }\n}\n\nfunction chompMultiComment(nest)\n{\n  if (nest == 0)\n  {\n    return normal();\n  }\n  return function(source, setState)\n  {\n    while (!source.eol())\n    {\n      var char = source.next();\n      if (char == '{' && source.eat('-'))\n      {\n        ++nest;\n      }\n      else if (char == '-' && source.eat('}'))\n      {\n        --nest;\n        if (nest === 0)\n        {\n          setState(normal());\n          return 'comment';\n        }\n      }\n    }\n    setState(chompMultiComment(nest));\n    return 'comment';\n  }\n}\n\nfunction chompMultiString(source, setState)\n{\n  while (!source.eol())\n  {\n    var char = source.next();\n    if (char === '\"' && source.eat('\"') && source.eat('\"'))\n    {\n      setState(normal());\n      return 'string';\n    }\n  }\n  return 'string';\n}\n\nfunction chompSingleString(source, setState)\n{\n  while (source.skipTo('\\\\\"')) { source.next(); source.next(); }\n  if (source.skipTo('\"'))\n  {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompChar(source, setState)\n{\n  while (source.skipTo(\"\\\\'\")) { source.next(); source.next(); }\n  if (source.skipTo(\"'\"))\n  {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompGlsl(source, setState)\n{\n  while (!source.eol())\n  {\n    var char = source.next();\n    if (char === '|' && source.eat(']'))\n    {\n      setState(normal());\n      return 'string';\n    }\n  }\n  return 'string';\n}\n\nvar wellKnownWords = {\n  case: 1,\n  of: 1,\n  as: 1,\n  if: 1,\n  then: 1,\n  else: 1,\n  let: 1,\n    in: 1,\n  type: 1,\n  alias: 1,\n  module: 1,\n  where: 1,\n  import: 1,\n  exposing: 1,\n  port: 1\n};\n\nexport const elm = {\n  startState: function ()  { return { f: normal() }; },\n  copyState:  function (s) { return { f: s.f }; },\n\n  token: function(stream, state) {\n    var type = state.f(stream, function(s) { state.f = s; });\n    var word = stream.current();\n    return (wellKnownWords.hasOwnProperty(word)) ? 'keyword' : type;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}