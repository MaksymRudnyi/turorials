{"ast":null,"code":"/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag;\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto');\n\nvar Stats = require('fs').Stats;\n/**\n * Module variables.\n * @private\n */\n\n\nvar toString = Object.prototype.toString;\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag(entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"';\n  } // compute hash of entity\n\n\n  var hash = crypto.createHash('sha1').update(entity, 'utf8').digest('base64').substring(0, 27); // compute length of entity\n\n  var len = typeof entity === 'string' ? Buffer.byteLength(entity, 'utf8') : entity.length;\n  return '\"' + len.toString(16) + '-' + hash + '\"';\n}\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\n\nfunction etag(entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required');\n  } // support fs.Stats object\n\n\n  var isStats = isstats(entity);\n  var weak = options && typeof options.weak === 'boolean' ? options.weak : isStats; // validate argument\n\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats');\n  } // generate entity tag\n\n\n  var tag = isStats ? stattag(entity) : entitytag(entity);\n  return weak ? 'W/' + tag : tag;\n}\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\n\nfunction isstats(obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true;\n  } // quack quack\n\n\n  return obj && typeof obj === 'object' && 'ctime' in obj && toString.call(obj.ctime) === '[object Date]' && 'mtime' in obj && toString.call(obj.mtime) === '[object Date]' && 'ino' in obj && typeof obj.ino === 'number' && 'size' in obj && typeof obj.size === 'number';\n}\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\n\nfunction stattag(stat) {\n  var mtime = stat.mtime.getTime().toString(16);\n  var size = stat.size.toString(16);\n  return '\"' + size + '-' + mtime + '\"';\n}","map":{"version":3,"names":["module","exports","etag","crypto","require","Stats","toString","Object","prototype","entitytag","entity","length","hash","createHash","update","digest","substring","len","Buffer","byteLength","options","TypeError","isStats","isstats","weak","isBuffer","tag","stattag","obj","call","ctime","mtime","ino","size","stat","getTime"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/etag/index.js"],"sourcesContent":["/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}