{"ast":null,"code":"// developer.mozilla.org/en-US/docs/Web/HTML/Element\nvar tagKeywords_ = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"bgsound\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\"]; // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n// Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\n\nvar documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\nvar mediaTypes_ = [\"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\", \"tty\", \"tv\", \"embossed\"];\nvar mediaFeatures_ = [\"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\", \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\", \"min-device-height\", \"max-device-height\", \"aspect-ratio\", \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\", \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\", \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\", \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\", \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"dynamic-range\", \"video-dynamic-range\"];\nvar propertyKeywords_ = [\"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\", \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\", \"animation-direction\", \"animation-duration\", \"animation-fill-mode\", \"animation-iteration-count\", \"animation-name\", \"animation-play-state\", \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\", \"background\", \"background-attachment\", \"background-clip\", \"background-color\", \"background-image\", \"background-origin\", \"background-position\", \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\", \"border-image-repeat\", \"border-image-slice\", \"border-image-source\", \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\", \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\", \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\", \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\", \"drop-initial-after-adjust\", \"drop-initial-after-align\", \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\", \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\", \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-position\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\", \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\", \"justify-content\", \"left\", \"letter-spacing\", \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\", \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\", \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\", \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marker-offset\", \"marks\", \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\", \"max-width\", \"min-height\", \"min-width\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\", \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\", \"pitch-range\", \"play-during\", \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\", \"region-break-before\", \"region-break-inside\", \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\", \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\", \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\", \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\", \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\", \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\", \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\", \"transition-property\", \"transition-timing-function\", \"unicode-bidi\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"z-index\", \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\", \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\", \"color-interpolation\", \"color-interpolation-filters\", \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\", \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\", \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\", \"font-smoothing\", \"osx-font-smoothing\"];\nvar nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\", \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\", \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"zoom\"];\nvar fontProperties_ = [\"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"];\nvar colorKeywords_ = [\"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\", \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\", \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\", \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"];\nvar valueKeywords_ = [\"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\", \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\", \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"avoid\", \"avoid-column\", \"avoid-page\", \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\", \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\", \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\", \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\", \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"column\", \"compact\", \"condensed\", \"conic-gradient\", \"contain\", \"content\", \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"dashed\", \"decimal\", \"decimal-leading-zero\", \"default\", \"default-button\", \"destination-atop\", \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\", \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\", \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\", \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\", \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\", \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\", \"ethiopic-numeric\", \"ew-resize\", \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"flex\", \"footnotes\", \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"groove\", \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hebrew\", \"help\", \"hidden\", \"hide\", \"high\", \"higher\", \"highlight\", \"highlighttext\", \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"icon\", \"ignore\", \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\", \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\", \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\", \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\", \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lower-roman\", \"lowercase\", \"ltr\", \"malayalam\", \"match\", \"matrix\", \"matrix3d\", \"media-play-button\", \"media-slider\", \"media-sliderthumb\", \"media-volume-slider\", \"media-volume-sliderthumb\", \"medium\", \"menu\", \"menulist\", \"menulist-button\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\", \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"myanmar\", \"n-resize\", \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\", \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\", \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeating-conic-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\", \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\", \"row-resize\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\", \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\", \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"solid\", \"somali\", \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"spell-out\", \"square\", \"square-button\", \"standard\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"sub\", \"subpixel-antialiased\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"table\", \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\", \"tamil\", \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\", \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\", \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\", \"trad-chinese-formal\", \"trad-chinese-informal\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"up\", \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\", \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\", \"windowtext\", \"words\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\", \"bicubic\", \"optimizespeed\", \"grayscale\", \"row\", \"row-reverse\", \"wrap\", \"wrap-reverse\", \"column-reverse\", \"flex-start\", \"flex-end\", \"space-between\", \"space-around\", \"unset\"];\nvar wordOperatorKeywords_ = [\"in\", \"and\", \"or\", \"not\", \"is not\", \"is a\", \"is\", \"isnt\", \"defined\", \"if unless\"],\n    blockKeywords_ = [\"for\", \"if\", \"else\", \"unless\", \"from\", \"to\"],\n    commonAtoms_ = [\"null\", \"true\", \"false\", \"href\", \"title\", \"type\", \"not-allowed\", \"readonly\", \"disabled\"],\n    commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\nvar hintWords = tagKeywords_.concat(documentTypes_, mediaTypes_, mediaFeatures_, propertyKeywords_, nonStandardPropertyKeywords_, colorKeywords_, valueKeywords_, fontProperties_, wordOperatorKeywords_, blockKeywords_, commonAtoms_, commonDef_);\n\nfunction wordRegexp(words) {\n  words = words.sort(function (a, b) {\n    return b > a;\n  });\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nfunction keySet(array) {\n  var keys = {};\n\n  for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n\n  return keys;\n}\n\nfunction escapeRegExp(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nvar tagKeywords = keySet(tagKeywords_),\n    tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n    propertyKeywords = keySet(propertyKeywords_),\n    nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n    valueKeywords = keySet(valueKeywords_),\n    colorKeywords = keySet(colorKeywords_),\n    documentTypes = keySet(documentTypes_),\n    documentTypesRegexp = wordRegexp(documentTypes_),\n    mediaFeatures = keySet(mediaFeatures_),\n    mediaTypes = keySet(mediaTypes_),\n    fontProperties = keySet(fontProperties_),\n    operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n    wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n    blockKeywords = keySet(blockKeywords_),\n    vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n    commonAtoms = keySet(commonAtoms_),\n    firstWordMatch = \"\",\n    states = {},\n    ch,\n    style,\n    type,\n    override;\n/**\n * Tokenizers\n */\n\nfunction tokenBase(stream, state) {\n  firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n  state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n  state.context.line.indent = stream.indentation();\n  ch = stream.peek(); // Line comment\n\n  if (stream.match(\"//\")) {\n    stream.skipToEnd();\n    return [\"comment\", \"comment\"];\n  } // Block comment\n\n\n  if (stream.match(\"/*\")) {\n    state.tokenize = tokenCComment;\n    return tokenCComment(stream, state);\n  } // String\n\n\n  if (ch == \"\\\"\" || ch == \"'\") {\n    stream.next();\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  } // Def\n\n\n  if (ch == \"@\") {\n    stream.next();\n    stream.eatWhile(/[\\w\\\\-]/);\n    return [\"def\", stream.current()];\n  } // ID selector or Hex color\n\n\n  if (ch == \"#\") {\n    stream.next(); // Hex color\n\n    if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n      return [\"atom\", \"atom\"];\n    } // ID selector\n\n\n    if (stream.match(/^[a-z][\\w-]*/i)) {\n      return [\"builtin\", \"hash\"];\n    }\n  } // Vendor prefixes\n\n\n  if (stream.match(vendorPrefixesRegexp)) {\n    return [\"meta\", \"vendor-prefixes\"];\n  } // Numbers\n\n\n  if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n    stream.eatWhile(/[a-z%]/i);\n    return [\"number\", \"unit\"];\n  } // !important|optional\n\n\n  if (ch == \"!\") {\n    stream.next();\n    return [stream.match(/^(important|optional)/i) ? \"keyword\" : \"operator\", \"important\"];\n  } // Class\n\n\n  if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n    return [\"qualifier\", \"qualifier\"];\n  } // url url-prefix domain regexp\n\n\n  if (stream.match(documentTypesRegexp)) {\n    if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n    return [\"property\", \"word\"];\n  } // Mixins / Functions\n\n\n  if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"mixin\"];\n  } // Block mixins\n\n\n  if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"block-mixin\"];\n  } // Parent Reference BEM naming\n\n\n  if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n    return [\"qualifier\", \"qualifier\"];\n  } // / Root Reference & Parent Reference\n\n\n  if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n    stream.backUp(1);\n    return [\"variableName.special\", \"reference\"];\n  }\n\n  if (stream.match(/^&{1}\\s*$/)) {\n    return [\"variableName.special\", \"reference\"];\n  } // Word operator\n\n\n  if (stream.match(wordOperatorKeywordsRegexp)) {\n    return [\"operator\", \"operator\"];\n  } // Word\n\n\n  if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n    // Variable\n    if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n      if (!wordIsTag(stream.current())) {\n        stream.match('.');\n        return [\"variable\", \"variable-name\"];\n      }\n    }\n\n    return [\"variable\", \"word\"];\n  } // Operators\n\n\n  if (stream.match(operatorsRegexp)) {\n    return [\"operator\", stream.current()];\n  } // Delimiters\n\n\n  if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n    stream.next();\n    return [null, ch];\n  } // Non-detected items\n\n\n  stream.next();\n  return [null, null];\n}\n/**\n * Token comment\n */\n\n\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = null;\n      break;\n    }\n\n    maybeEnd = ch == \"*\";\n  }\n\n  return [\"comment\", \"comment\"];\n}\n/**\n * Token string\n */\n\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false,\n        ch;\n\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        if (quote == \")\") stream.backUp(1);\n        break;\n      }\n\n      escaped = !escaped && ch == \"\\\\\";\n    }\n\n    if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n    return [\"string\", \"string\"];\n  };\n}\n/**\n * Token parenthesized\n */\n\n\nfunction tokenParenthesized(stream, state) {\n  stream.next(); // Must be \"(\"\n\n  if (!stream.match(/\\s*[\\\"\\')]/, false)) state.tokenize = tokenString(\")\");else state.tokenize = null;\n  return [null, \"(\"];\n}\n/**\n * Context management\n */\n\n\nfunction Context(type, indent, prev, line) {\n  this.type = type;\n  this.indent = indent;\n  this.prev = prev;\n  this.line = line || {\n    firstWord: \"\",\n    indent: 0\n  };\n}\n\nfunction pushContext(state, stream, type, indent) {\n  indent = indent >= 0 ? indent : stream.indentUnit;\n  state.context = new Context(type, stream.indentation() + indent, state.context);\n  return type;\n}\n\nfunction popContext(state, stream, currentIndent) {\n  var contextIndent = state.context.indent - stream.indentUnit;\n  currentIndent = currentIndent || false;\n  state.context = state.context.prev;\n  if (currentIndent) state.context.indent = contextIndent;\n  return state.context.type;\n}\n\nfunction pass(type, stream, state) {\n  return states[state.context.type](type, stream, state);\n}\n\nfunction popAndPass(type, stream, state, n) {\n  for (var i = n || 1; i > 0; i--) state.context = state.context.prev;\n\n  return pass(type, stream, state);\n}\n/**\n * Parser\n */\n\n\nfunction wordIsTag(word) {\n  return word.toLowerCase() in tagKeywords;\n}\n\nfunction wordIsProperty(word) {\n  word = word.toLowerCase();\n  return word in propertyKeywords || word in fontProperties;\n}\n\nfunction wordIsBlock(word) {\n  return word.toLowerCase() in blockKeywords;\n}\n\nfunction wordIsVendorPrefix(word) {\n  return word.toLowerCase().match(vendorPrefixesRegexp);\n}\n\nfunction wordAsValue(word) {\n  var wordLC = word.toLowerCase();\n  var override = \"variable\";\n  if (wordIsTag(word)) override = \"tag\";else if (wordIsBlock(word)) override = \"block-keyword\";else if (wordIsProperty(word)) override = \"property\";else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\"; // Font family\n  else if (word.match(/^[A-Z]/)) override = \"string\";\n  return override;\n}\n\nfunction typeIsBlock(type, stream) {\n  return endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\") || type == \"block-mixin\";\n}\n\nfunction typeIsInterpolation(type, stream) {\n  return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n}\n\nfunction typeIsPseudo(type, stream) {\n  return type == \":\" && stream.match(/^[a-z-]+/, false);\n}\n\nfunction startOfLine(stream) {\n  return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n}\n\nfunction endOfLine(stream) {\n  return stream.eol() || stream.match(/^\\s*$/, false);\n}\n\nfunction firstWordOfLine(line) {\n  var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n  var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n  return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n}\n/**\n * Block\n */\n\n\nstates.block = function (type, stream, state) {\n  if (type == \"comment\" && startOfLine(stream) || type == \",\" && endOfLine(stream) || type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n\n  if (endOfLine(stream) && type == \"]\") {\n    if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n  }\n\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n\n  if (type == \"}\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\", 0);\n  }\n\n  if (type == \"variable-name\") {\n    if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"variableName\");\n    } else {\n      return pushContext(state, stream, \"variableName\", 0);\n    }\n  }\n\n  if (type == \"=\") {\n    if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n\n    return pushContext(state, stream, \"block\");\n  }\n\n  if (type == \"*\") {\n    if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/, false)) {\n      override = \"tag\";\n      return pushContext(state, stream, \"block\");\n    }\n  }\n\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n\n  if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n\n  if (/@extends?/.test(type)) {\n    return pushContext(state, stream, \"extend\", 0);\n  }\n\n  if (type && type.charAt(0) == \"@\") {\n    // Property Lookup\n    if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n      override = \"variable\";\n      return \"block\";\n    }\n\n    if (/(@import|@require|@charset)/.test(type)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n\n    return pushContext(state, stream, \"block\");\n  }\n\n  if (type == \"reference\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n\n  if (type == \"(\") {\n    return pushContext(state, stream, \"parens\");\n  }\n\n  if (type == \"vendor-prefixes\") {\n    return pushContext(state, stream, \"vendorPrefixes\");\n  }\n\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n\n    if (override == \"property\") {\n      if (startOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      } else {\n        override = \"atom\";\n        return \"block\";\n      }\n    }\n\n    if (override == \"tag\") {\n      // tag is a css value\n      if (/embed|menu|pre|progress|sub|table/.test(word)) {\n        if (wordIsProperty(firstWordOfLine(stream))) {\n          override = \"atom\";\n          return \"block\";\n        }\n      } // tag is an attribute\n\n\n      if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word + \"\\\\s*\\\\]\"))) {\n        override = \"atom\";\n        return \"block\";\n      } // tag is a variable\n\n\n      if (tagVariablesRegexp.test(word)) {\n        if (startOfLine(stream) && stream.string.match(/=/) || !startOfLine(stream) && !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) && !wordIsTag(firstWordOfLine(stream))) {\n          override = \"variable\";\n          if (wordIsBlock(firstWordOfLine(stream))) return \"block\";\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n\n      if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    }\n\n    if (override == \"block-keyword\") {\n      override = \"keyword\"; // Postfix conditionals\n\n      if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n        return \"block\";\n      }\n\n      return pushContext(state, stream, \"block\");\n    }\n\n    if (word == \"return\") return pushContext(state, stream, \"block\", 0); // Placeholder selector\n\n    if (override == \"variable\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n\n  return state.context.type;\n};\n/**\n * Parens\n */\n\n\nstates.parens = function (type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n  if (type == \")\") {\n    if (state.context.prev.type == \"parens\") {\n      return popContext(state, stream);\n    }\n\n    if (stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream) || wordIsBlock(firstWordOfLine(stream)) || /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) || !stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) && wordIsTag(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\");\n    }\n\n    if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) || stream.string.match(/^\\s*(\\(|\\)|[0-9])/) || stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) || stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");else return pushContext(state, stream, \"block\", 0);\n  }\n\n  if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n    override = \"variable\";\n  }\n\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n\n    if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n      override = \"variable\";\n    }\n\n    if (override == \"property\" || word == \"to\") override = \"atom\";\n  }\n\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\");\n  }\n\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n\n  return state.context.type;\n};\n/**\n * Vendor prefixes\n */\n\n\nstates.vendorPrefixes = function (type, stream, state) {\n  if (type == \"word\") {\n    override = \"property\";\n    return pushContext(state, stream, \"block\", 0);\n  }\n\n  return popContext(state, stream);\n};\n/**\n * Pseudo\n */\n\n\nstates.pseudo = function (type, stream, state) {\n  if (!wordIsProperty(firstWordOfLine(stream.string))) {\n    stream.match(/^[a-z-]+/);\n    override = \"variableName.special\";\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    return popContext(state, stream);\n  }\n\n  return popAndPass(type, stream, state);\n};\n/**\n * atBlock\n */\n\n\nstates.atBlock = function (type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    if (/^(only|not|and|or)$/.test(word)) override = \"keyword\";else if (documentTypes.hasOwnProperty(word)) override = \"tag\";else if (mediaTypes.hasOwnProperty(word)) override = \"attribute\";else if (mediaFeatures.hasOwnProperty(word)) override = \"property\";else if (nonStandardPropertyKeywords.hasOwnProperty(word)) override = \"string.special\";else override = wordAsValue(stream.current());\n\n    if (override == \"tag\" && endOfLine(stream)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n\n  if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n    override = \"keyword\";\n  }\n\n  return state.context.type;\n};\n\nstates.atBlock_parens = function (type, stream, state) {\n  if (type == \"{\" || type == \"}\") return state.context.type;\n\n  if (type == \")\") {\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");else return pushContext(state, stream, \"atBlock\");\n  }\n\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    override = wordAsValue(word);\n    if (/^(max|min)/.test(word)) override = \"property\";\n\n    if (override == \"tag\") {\n      tagVariablesRegexp.test(word) ? override = \"variable\" : override = \"atom\";\n    }\n\n    return state.context.type;\n  }\n\n  return states.atBlock(type, stream, state);\n};\n/**\n * Keyframes\n */\n\n\nstates.keyframes = function (type, stream, state) {\n  if (stream.indentation() == \"0\" && (type == \"}\" && startOfLine(stream) || type == \"]\" || type == \"hash\" || type == \"qualifier\" || wordIsTag(stream.current()))) {\n    return popAndPass(type, stream, state);\n  }\n\n  if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n\n  if (type == \"}\") {\n    if (startOfLine(stream)) return popContext(state, stream, true);else return pushContext(state, stream, \"keyframes\");\n  }\n\n  if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n      return pushContext(state, stream, \"keyframes\");\n    }\n  }\n\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n\n  if (type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n\n  return state.context.type;\n};\n/**\n * Interpolation\n */\n\n\nstates.interpolation = function (type, stream, state) {\n  if (type == \"{\") popContext(state, stream) && pushContext(state, stream, \"block\");\n\n  if (type == \"}\") {\n    if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) || stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\");\n    }\n\n    if (!stream.string.match(/^(\\{|\\s*\\&)/) || stream.match(/\\s*[\\w-]/, false)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n\n    return pushContext(state, stream, \"block\");\n  }\n\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\", 0);\n  }\n\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"tag\") override = \"atom\";\n  }\n\n  return state.context.type;\n};\n/**\n * Extend/s\n */\n\n\nstates.extend = function (type, stream, state) {\n  if (type == \"[\" || type == \"=\") return \"extend\";\n  if (type == \"]\") return popContext(state, stream);\n\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    return \"extend\";\n  }\n\n  return popContext(state, stream);\n};\n/**\n * Variable name\n */\n\n\nstates.variableName = function (type, stream, state) {\n  if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n    if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable\";\n    return \"variableName\";\n  }\n\n  return popAndPass(type, stream, state);\n};\n\nexport const stylus = {\n  startState: function () {\n    return {\n      tokenize: null,\n      state: \"block\",\n      context: new Context(\"block\", 0, null)\n    };\n  },\n  token: function (stream, state) {\n    if (!state.tokenize && stream.eatSpace()) return null;\n    style = (state.tokenize || tokenBase)(stream, state);\n\n    if (style && typeof style == \"object\") {\n      type = style[1];\n      style = style[0];\n    }\n\n    override = style;\n    state.state = states[state.state](type, stream, state);\n    return override;\n  },\n  indent: function (state, textAfter, iCx) {\n    var cx = state.context,\n        ch = textAfter && textAfter.charAt(0),\n        indent = cx.indent,\n        lineFirstWord = firstWordOfLine(textAfter),\n        lineIndent = iCx.lineIndent(iCx.pos),\n        prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n        prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n    if (cx.prev && (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") || ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") || ch == \"{\" && cx.type == \"at\")) {\n      indent = cx.indent - iCx.unit;\n    } else if (!/(\\})/.test(ch)) {\n      if (/@|\\$|\\d/.test(ch) || /^\\{/.test(textAfter) || /^\\s*\\/(\\/|\\*)/.test(textAfter) || /^\\s*\\/\\*/.test(prevLineFirstWord) || /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) || /^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) || /^return/.test(textAfter) || wordIsBlock(lineFirstWord)) {\n        indent = lineIndent;\n      } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n        if (/\\,\\s*$/.test(prevLineFirstWord)) {\n          indent = prevLineIndent;\n        } else if (!state.sol() && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      } else if (!/,\\s*$/.test(textAfter) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n        if (wordIsBlock(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else if (/^\\{/.test(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + iCx.unit;\n        } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n          indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n        } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) || /=\\s*$/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord) || /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n          indent = prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      }\n    }\n\n    return indent;\n  },\n  languageData: {\n    indentOnInput: /^\\s*\\}$/,\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    },\n    autocomplete: hintWords\n  }\n};","map":{"version":3,"names":["tagKeywords_","documentTypes_","mediaTypes_","mediaFeatures_","propertyKeywords_","nonStandardPropertyKeywords_","fontProperties_","colorKeywords_","valueKeywords_","wordOperatorKeywords_","blockKeywords_","commonAtoms_","commonDef_","hintWords","concat","wordRegexp","words","sort","a","b","RegExp","join","keySet","array","keys","i","length","escapeRegExp","text","replace","tagKeywords","tagVariablesRegexp","propertyKeywords","nonStandardPropertyKeywords","valueKeywords","colorKeywords","documentTypes","documentTypesRegexp","mediaFeatures","mediaTypes","fontProperties","operatorsRegexp","wordOperatorKeywordsRegexp","blockKeywords","vendorPrefixesRegexp","commonAtoms","firstWordMatch","states","ch","style","type","override","tokenBase","stream","state","string","match","context","line","firstWord","indent","indentation","peek","skipToEnd","tokenize","tokenCComment","next","tokenString","eatWhile","current","tokenParenthesized","backUp","wordIsTag","test","maybeEnd","quote","escaped","Context","prev","pushContext","indentUnit","popContext","currentIndent","contextIndent","pass","popAndPass","n","word","toLowerCase","wordIsProperty","wordIsBlock","wordIsVendorPrefix","wordAsValue","wordLC","typeIsBlock","endOfLine","typeIsInterpolation","typeIsPseudo","startOfLine","sol","eol","firstWordOfLine","re","result","block","charAt","slice","parens","vendorPrefixes","pseudo","atBlock","hasOwnProperty","atBlock_parens","keyframes","interpolation","extend","variableName","stylus","startState","token","eatSpace","textAfter","iCx","cx","lineFirstWord","lineIndent","pos","prevLineFirstWord","prevLineIndent","unit","languageData","indentOnInput","commentTokens","open","close","autocomplete"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/stylus.js"],"sourcesContent":["// developer.mozilla.org/en-US/docs/Web/HTML/Element\nvar tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n// github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n// Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\nvar documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\nvar mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\nvar mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\",\"dynamic-range\",\"video-dynamic-range\"];\nvar propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\nvar nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\nvar fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\nvar colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\nvar valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"conic-gradient\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"high\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-play-button\",\"media-slider\",\"media-sliderthumb\",\"media-volume-slider\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeating-conic-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"standard\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\nvar wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n    blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n    commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n    commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\nvar hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                    propertyKeywords_,nonStandardPropertyKeywords_,\n                                    colorKeywords_,valueKeywords_,fontProperties_,\n                                    wordOperatorKeywords_,blockKeywords_,\n                                    commonAtoms_,commonDef_);\n\nfunction wordRegexp(words) {\n  words = words.sort(function(a,b){return b > a;});\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nfunction keySet(array) {\n  var keys = {};\n  for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n  return keys;\n}\n\nfunction escapeRegExp(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nvar tagKeywords = keySet(tagKeywords_),\n    tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n    propertyKeywords = keySet(propertyKeywords_),\n    nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n    valueKeywords = keySet(valueKeywords_),\n    colorKeywords = keySet(colorKeywords_),\n    documentTypes = keySet(documentTypes_),\n    documentTypesRegexp = wordRegexp(documentTypes_),\n    mediaFeatures = keySet(mediaFeatures_),\n    mediaTypes = keySet(mediaTypes_),\n    fontProperties = keySet(fontProperties_),\n    operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n    wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n    blockKeywords = keySet(blockKeywords_),\n    vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n    commonAtoms = keySet(commonAtoms_),\n    firstWordMatch = \"\",\n    states = {},\n    ch,\n    style,\n    type,\n    override;\n\n/**\n * Tokenizers\n */\nfunction tokenBase(stream, state) {\n  firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n  state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n  state.context.line.indent = stream.indentation();\n  ch = stream.peek();\n\n  // Line comment\n  if (stream.match(\"//\")) {\n    stream.skipToEnd();\n    return [\"comment\", \"comment\"];\n  }\n  // Block comment\n  if (stream.match(\"/*\")) {\n    state.tokenize = tokenCComment;\n    return tokenCComment(stream, state);\n  }\n  // String\n  if (ch == \"\\\"\" || ch == \"'\") {\n    stream.next();\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  // Def\n  if (ch == \"@\") {\n    stream.next();\n    stream.eatWhile(/[\\w\\\\-]/);\n    return [\"def\", stream.current()];\n  }\n  // ID selector or Hex color\n  if (ch == \"#\") {\n    stream.next();\n    // Hex color\n    if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n      return [\"atom\", \"atom\"];\n    }\n    // ID selector\n    if (stream.match(/^[a-z][\\w-]*/i)) {\n      return [\"builtin\", \"hash\"];\n    }\n  }\n  // Vendor prefixes\n  if (stream.match(vendorPrefixesRegexp)) {\n    return [\"meta\", \"vendor-prefixes\"];\n  }\n  // Numbers\n  if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n    stream.eatWhile(/[a-z%]/i);\n    return [\"number\", \"unit\"];\n  }\n  // !important|optional\n  if (ch == \"!\") {\n    stream.next();\n    return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n  }\n  // Class\n  if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n    return [\"qualifier\", \"qualifier\"];\n  }\n  // url url-prefix domain regexp\n  if (stream.match(documentTypesRegexp)) {\n    if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n    return [\"property\", \"word\"];\n  }\n  // Mixins / Functions\n  if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"mixin\"];\n  }\n  // Block mixins\n  if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"block-mixin\"];\n  }\n  // Parent Reference BEM naming\n  if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n    return [\"qualifier\", \"qualifier\"];\n  }\n  // / Root Reference & Parent Reference\n  if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n    stream.backUp(1);\n    return [\"variableName.special\", \"reference\"];\n  }\n  if (stream.match(/^&{1}\\s*$/)) {\n    return [\"variableName.special\", \"reference\"];\n  }\n  // Word operator\n  if (stream.match(wordOperatorKeywordsRegexp)) {\n    return [\"operator\", \"operator\"];\n  }\n  // Word\n  if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n    // Variable\n    if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n      if (!wordIsTag(stream.current())) {\n        stream.match('.');\n        return [\"variable\", \"variable-name\"];\n      }\n    }\n    return [\"variable\", \"word\"];\n  }\n  // Operators\n  if (stream.match(operatorsRegexp)) {\n    return [\"operator\", stream.current()];\n  }\n  // Delimiters\n  if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n    stream.next();\n    return [null, ch];\n  }\n  // Non-detected items\n  stream.next();\n  return [null, null];\n}\n\n/**\n * Token comment\n */\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false, ch;\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return [\"comment\", \"comment\"];\n}\n\n/**\n * Token string\n */\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        if (quote == \")\") stream.backUp(1);\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n    return [\"string\", \"string\"];\n  };\n}\n\n/**\n * Token parenthesized\n */\nfunction tokenParenthesized(stream, state) {\n  stream.next(); // Must be \"(\"\n  if (!stream.match(/\\s*[\\\"\\')]/, false))\n    state.tokenize = tokenString(\")\");\n  else\n    state.tokenize = null;\n  return [null, \"(\"];\n}\n\n/**\n * Context management\n */\nfunction Context(type, indent, prev, line) {\n  this.type = type;\n  this.indent = indent;\n  this.prev = prev;\n  this.line = line || {firstWord: \"\", indent: 0};\n}\n\nfunction pushContext(state, stream, type, indent) {\n  indent = indent >= 0 ? indent : stream.indentUnit;\n  state.context = new Context(type, stream.indentation() + indent, state.context);\n  return type;\n}\n\nfunction popContext(state, stream, currentIndent) {\n  var contextIndent = state.context.indent - stream.indentUnit;\n  currentIndent = currentIndent || false;\n  state.context = state.context.prev;\n  if (currentIndent) state.context.indent = contextIndent;\n  return state.context.type;\n}\n\nfunction pass(type, stream, state) {\n  return states[state.context.type](type, stream, state);\n}\n\nfunction popAndPass(type, stream, state, n) {\n  for (var i = n || 1; i > 0; i--)\n    state.context = state.context.prev;\n  return pass(type, stream, state);\n}\n\n\n/**\n * Parser\n */\nfunction wordIsTag(word) {\n  return word.toLowerCase() in tagKeywords;\n}\n\nfunction wordIsProperty(word) {\n  word = word.toLowerCase();\n  return word in propertyKeywords || word in fontProperties;\n}\n\nfunction wordIsBlock(word) {\n  return word.toLowerCase() in blockKeywords;\n}\n\nfunction wordIsVendorPrefix(word) {\n  return word.toLowerCase().match(vendorPrefixesRegexp);\n}\n\nfunction wordAsValue(word) {\n  var wordLC = word.toLowerCase();\n  var override = \"variable\";\n  if (wordIsTag(word)) override = \"tag\";\n  else if (wordIsBlock(word)) override = \"block-keyword\";\n  else if (wordIsProperty(word)) override = \"property\";\n  else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n  else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n  // Font family\n  else if (word.match(/^[A-Z]/)) override = \"string\";\n  return override;\n}\n\nfunction typeIsBlock(type, stream) {\n  return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n}\n\nfunction typeIsInterpolation(type, stream) {\n  return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n}\n\nfunction typeIsPseudo(type, stream) {\n  return type == \":\" && stream.match(/^[a-z-]+/, false);\n}\n\nfunction startOfLine(stream) {\n  return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n}\n\nfunction endOfLine(stream) {\n  return stream.eol() || stream.match(/^\\s*$/, false);\n}\n\nfunction firstWordOfLine(line) {\n  var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n  var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n  return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n}\n\n\n/**\n * Block\n */\nstates.block = function(type, stream, state) {\n  if ((type == \"comment\" && startOfLine(stream)) ||\n      (type == \",\" && endOfLine(stream)) ||\n      type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n  if (endOfLine(stream) && type == \"]\") {\n    if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n  }\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"}\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  if (type == \"variable-name\") {\n    if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"variableName\");\n    }\n    else {\n      return pushContext(state, stream, \"variableName\", 0);\n    }\n  }\n  if (type == \"=\") {\n    if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"*\") {\n    if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n      override = \"tag\";\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n  if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n  if (/@extends?/.test(type)) {\n    return pushContext(state, stream, \"extend\", 0);\n  }\n  if (type && type.charAt(0) == \"@\") {\n\n    // Property Lookup\n    if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n      override = \"variable\";\n      return \"block\";\n    }\n    if (/(@import|@require|@charset)/.test(type)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"reference\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"(\") {\n    return pushContext(state, stream, \"parens\");\n  }\n\n  if (type == \"vendor-prefixes\") {\n    return pushContext(state, stream, \"vendorPrefixes\");\n  }\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n\n    if (override == \"property\") {\n      if (startOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      } else {\n        override = \"atom\";\n        return \"block\";\n      }\n    }\n\n    if (override == \"tag\") {\n\n      // tag is a css value\n      if (/embed|menu|pre|progress|sub|table/.test(word)) {\n        if (wordIsProperty(firstWordOfLine(stream))) {\n          override = \"atom\";\n          return \"block\";\n        }\n      }\n\n      // tag is an attribute\n      if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n        override = \"atom\";\n        return \"block\";\n      }\n\n      // tag is a variable\n      if (tagVariablesRegexp.test(word)) {\n        if ((startOfLine(stream) && stream.string.match(/=/)) ||\n            (!startOfLine(stream) &&\n             !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n             !wordIsTag(firstWordOfLine(stream)))) {\n          override = \"variable\";\n          if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n\n      if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    }\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n\n      // Postfix conditionals\n      if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n        return \"block\";\n      }\n      return pushContext(state, stream, \"block\");\n    }\n    if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n    // Placeholder selector\n    if (override == \"variable\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  return state.context.type;\n};\n\n\n/**\n * Parens\n */\nstates.parens = function(type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"parens\");\n  if (type == \")\") {\n    if (state.context.prev.type == \"parens\") {\n      return popContext(state, stream);\n    }\n    if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n        wordIsBlock(firstWordOfLine(stream)) ||\n        /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n        (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n         wordIsTag(firstWordOfLine(stream)))) {\n      return pushContext(state, stream, \"block\");\n    }\n    if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n        stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n        stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n        stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    else return pushContext(state, stream, \"block\", 0);\n  }\n  if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n    override = \"variable\";\n  }\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n    if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n      override = \"variable\";\n    }\n    if (override == \"property\" || word == \"to\") override = \"atom\";\n  }\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\");\n  }\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n  return state.context.type;\n};\n\n\n/**\n * Vendor prefixes\n */\nstates.vendorPrefixes = function(type, stream, state) {\n  if (type == \"word\") {\n    override = \"property\";\n    return pushContext(state, stream, \"block\", 0);\n  }\n  return popContext(state, stream);\n};\n\n\n/**\n * Pseudo\n */\nstates.pseudo = function(type, stream, state) {\n  if (!wordIsProperty(firstWordOfLine(stream.string))) {\n    stream.match(/^[a-z-]+/);\n    override = \"variableName.special\";\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    return popContext(state, stream);\n  }\n  return popAndPass(type, stream, state);\n};\n\n\n/**\n * atBlock\n */\nstates.atBlock = function(type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    if (/^(only|not|and|or)$/.test(word))\n      override = \"keyword\";\n    else if (documentTypes.hasOwnProperty(word))\n      override = \"tag\";\n    else if (mediaTypes.hasOwnProperty(word))\n      override = \"attribute\";\n    else if (mediaFeatures.hasOwnProperty(word))\n      override = \"property\";\n    else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n      override = \"string.special\";\n    else override = wordAsValue(stream.current());\n    if (override == \"tag\" && endOfLine(stream)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n    override = \"keyword\";\n  }\n  return state.context.type;\n};\n\nstates.atBlock_parens = function(type, stream, state) {\n  if (type == \"{\" || type == \"}\") return state.context.type;\n  if (type == \")\") {\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    else return pushContext(state, stream, \"atBlock\");\n  }\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    override = wordAsValue(word);\n    if (/^(max|min)/.test(word)) override = \"property\";\n    if (override == \"tag\") {\n      tagVariablesRegexp.test(word) ? override = \"variable\" : override = \"atom\";\n    }\n    return state.context.type;\n  }\n  return states.atBlock(type, stream, state);\n};\n\n\n/**\n * Keyframes\n */\nstates.keyframes = function(type, stream, state) {\n  if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                      || type == \"qualifier\" || wordIsTag(stream.current()))) {\n    return popAndPass(type, stream, state);\n  }\n  if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n  if (type == \"}\") {\n    if (startOfLine(stream)) return popContext(state, stream, true);\n    else return pushContext(state, stream, \"keyframes\");\n  }\n  if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n      return pushContext(state, stream, \"keyframes\");\n    }\n  }\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n  if (type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  return state.context.type;\n};\n\n\n/**\n * Interpolation\n */\nstates.interpolation = function(type, stream, state) {\n  if (type == \"{\") popContext(state, stream) && pushContext(state, stream, \"block\");\n  if (type == \"}\") {\n    if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n        (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n      return pushContext(state, stream, \"block\");\n    }\n    if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n        stream.match(/\\s*[\\w-]/,false)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\", 0);\n  }\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"tag\") override = \"atom\";\n  }\n  return state.context.type;\n};\n\n\n/**\n * Extend/s\n */\nstates.extend = function(type, stream, state) {\n  if (type == \"[\" || type == \"=\") return \"extend\";\n  if (type == \"]\") return popContext(state, stream);\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    return \"extend\";\n  }\n  return popContext(state, stream);\n};\n\n\n/**\n * Variable name\n */\nstates.variableName = function(type, stream, state) {\n  if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n    if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable\";\n    return \"variableName\";\n  }\n  return popAndPass(type, stream, state);\n};\n\nexport const stylus = {\n  startState: function() {\n    return {\n      tokenize: null,\n      state: \"block\",\n      context: new Context(\"block\", 0, null)\n    };\n  },\n  token: function(stream, state) {\n    if (!state.tokenize && stream.eatSpace()) return null;\n    style = (state.tokenize || tokenBase)(stream, state);\n    if (style && typeof style == \"object\") {\n      type = style[1];\n      style = style[0];\n    }\n    override = style;\n    state.state = states[state.state](type, stream, state);\n    return override;\n  },\n  indent: function(state, textAfter, iCx) {\n    var cx = state.context,\n        ch = textAfter && textAfter.charAt(0),\n        indent = cx.indent,\n        lineFirstWord = firstWordOfLine(textAfter),\n        lineIndent = iCx.lineIndent(iCx.pos),\n        prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n        prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n    if (cx.prev &&\n        (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n         ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n         ch == \"{\" && (cx.type == \"at\"))) {\n      indent = cx.indent - iCx.unit;\n    } else if (!(/(\\})/.test(ch))) {\n      if (/@|\\$|\\d/.test(ch) ||\n          /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n          /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n          /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n/^return/.test(textAfter) ||\n              wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n        if (/\\,\\s*$/.test(prevLineFirstWord)) {\n          indent = prevLineIndent;\n        } else if (!state.sol() && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      } else if (!/,\\s*$/.test(textAfter) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n        if (wordIsBlock(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else if (/^\\{/.test(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + iCx.unit;\n        } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n          indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n        } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                   /=\\s*$/.test(prevLineFirstWord) ||\n                   wordIsTag(prevLineFirstWord) ||\n                   /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n          indent = prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      }\n    }\n    return indent;\n  },\n  languageData: {\n    indentOnInput: /^\\s*\\}$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    autocomplete: hintWords\n  }\n};\n"],"mappings":"AAAA;AACA,IAAIA,YAAY,GAAG,CAAC,GAAD,EAAK,MAAL,EAAY,SAAZ,EAAsB,MAAtB,EAA6B,SAA7B,EAAuC,OAAvC,EAA+C,OAA/C,EAAwD,GAAxD,EAA6D,MAA7D,EAAoE,KAApE,EAA2E,KAA3E,EAAiF,SAAjF,EAA2F,YAA3F,EAAwG,MAAxG,EAA+G,IAA/G,EAAoH,QAApH,EAA6H,QAA7H,EAAsI,SAAtI,EAAgJ,MAAhJ,EAAwJ,MAAxJ,EAA+J,KAA/J,EAAqK,UAArK,EAAgL,MAAhL,EAAuL,UAAvL,EAAkM,IAAlM,EAAuM,KAAvM,EAA6M,SAA7M,EAAuN,KAAvN,EAA6N,KAA7N,EAAoO,IAApO,EAAyO,IAAzO,EAA8O,IAA9O,EAAmP,OAAnP,EAA2P,UAA3P,EAAsQ,YAAtQ,EAAmR,QAAnR,EAA4R,QAA5R,EAAqS,MAArS,EAA4S,IAA5S,EAAkT,IAAlT,EAAuT,IAAvT,EAA4T,IAA5T,EAAiU,IAAjU,EAAsU,IAAtU,EAA2U,MAA3U,EAAkV,QAAlV,EAA2V,QAA3V,EAAoW,IAApW,EAAyW,MAAzW,EAAgX,GAAhX,EAAoX,QAApX,EAA8X,KAA9X,EAAoY,OAApY,EAA4Y,KAA5Y,EAAkZ,KAAlZ,EAAwZ,QAAxZ,EAAia,OAAja,EAAya,QAAza,EAAkb,IAAlb,EAAub,MAAvb,EAA8b,MAA9b,EAAqc,KAArc,EAA4c,MAA5c,EAAmd,SAAnd,EAA6d,MAA7d,EAAoe,UAApe,EAA+e,MAA/e,EAAsf,OAAtf,EAA8f,KAA9f,EAAogB,MAApgB,EAA2gB,UAA3gB,EAAuhB,UAAvhB,EAAkiB,QAAliB,EAA2iB,IAA3iB,EAAgjB,UAAhjB,EAA2jB,QAA3jB,EAAokB,QAApkB,EAA6kB,GAA7kB,EAAilB,OAAjlB,EAAylB,KAAzlB,EAAgmB,UAAhmB,EAA2mB,GAA3mB,EAA+mB,IAA/mB,EAAonB,IAApnB,EAAynB,MAAznB,EAAgoB,GAAhoB,EAAooB,MAApoB,EAA2oB,QAA3oB,EAAopB,SAAppB,EAA8pB,QAA9pB,EAAwqB,OAAxqB,EAAgrB,QAAhrB,EAAyrB,MAAzrB,EAAgsB,QAAhsB,EAAysB,OAAzsB,EAAitB,KAAjtB,EAAutB,SAAvtB,EAAiuB,KAAjuB,EAAuuB,OAAvuB,EAA+uB,OAA/uB,EAAuvB,IAAvvB,EAA4vB,UAA5vB,EAAuwB,OAAvwB,EAA+wB,IAA/wB,EAAoxB,OAApxB,EAA4xB,MAA5xB,EAAmyB,IAAnyB,EAAwyB,OAAxyB,EAAizB,GAAjzB,EAAqzB,IAArzB,EAA0zB,KAA1zB,EAAg0B,OAAh0B,CAAnB,C,CAEA;AACA;;AACA,IAAIC,cAAc,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,EAAmC,KAAnC,CAArB;AACA,IAAIC,WAAW,GAAG,CAAC,KAAD,EAAO,OAAP,EAAe,SAAf,EAAyB,UAAzB,EAAoC,OAApC,EAA4C,YAA5C,EAAyD,QAAzD,EAAkE,KAAlE,EAAwE,IAAxE,EAA6E,UAA7E,CAAlB;AACA,IAAIC,cAAc,GAAG,CAAC,OAAD,EAAS,WAAT,EAAqB,WAArB,EAAiC,QAAjC,EAA0C,YAA1C,EAAuD,YAAvD,EAAoE,cAApE,EAAmF,kBAAnF,EAAsG,kBAAtG,EAAyH,eAAzH,EAAyI,mBAAzI,EAA6J,mBAA7J,EAAiL,cAAjL,EAAgM,kBAAhM,EAAmN,kBAAnN,EAAsO,qBAAtO,EAA4P,yBAA5P,EAAsR,yBAAtR,EAAgT,OAAhT,EAAwT,WAAxT,EAAoU,WAApU,EAAgV,aAAhV,EAA8V,iBAA9V,EAAgX,iBAAhX,EAAkY,YAAlY,EAA+Y,gBAA/Y,EAAga,gBAAha,EAAib,YAAjb,EAA8b,gBAA9b,EAA+c,gBAA/c,EAAge,MAAhe,EAAue,MAAve,EAA8e,eAA9e,EAA8f,qBAA9f,CAArB;AACA,IAAIC,iBAAiB,GAAG,CAAC,eAAD,EAAiB,aAAjB,EAA+B,YAA/B,EAA4C,kBAA5C,EAA+D,oBAA/D,EAAoF,cAApF,EAAmG,WAAnG,EAA+G,iBAA/G,EAAiI,qBAAjI,EAAuJ,oBAAvJ,EAA4K,qBAA5K,EAAkM,2BAAlM,EAA8N,gBAA9N,EAA+O,sBAA/O,EAAsQ,2BAAtQ,EAAkS,YAAlS,EAA+S,SAA/S,EAAyT,qBAAzT,EAA+U,YAA/U,EAA4V,uBAA5V,EAAoX,iBAApX,EAAsY,kBAAtY,EAAyZ,kBAAzZ,EAA4a,mBAA5a,EAAgc,qBAAhc,EAAsd,mBAAtd,EAA0e,iBAA1e,EAA4f,gBAA5f,EAA6gB,SAA7gB,EAAuhB,OAAvhB,EAA+hB,gBAA/hB,EAAgjB,gBAAhjB,EAAikB,gBAAjkB,EAAklB,iBAAllB,EAAomB,QAApmB,EAA6mB,eAA7mB,EAA6nB,qBAA7nB,EAAmpB,2BAAnpB,EAA+qB,4BAA/qB,EAA4sB,qBAA5sB,EAAkuB,qBAAluB,EAAwvB,iBAAxvB,EAA0wB,cAA1wB,EAAyxB,cAAzxB,EAAwyB,qBAAxyB,EAA8zB,qBAA9zB,EAAo1B,oBAAp1B,EAAy2B,qBAAz2B,EAA+3B,oBAA/3B,EAAo5B,aAAp5B,EAAk6B,mBAAl6B,EAAs7B,mBAAt7B,EAA08B,mBAA18B,EAA89B,eAA99B,EAA8+B,cAA9+B,EAA6/B,oBAA7/B,EAAkhC,oBAAlhC,EAAuiC,oBAAviC,EAA4jC,gBAA5jC,EAA6kC,cAA7kC,EAA4lC,YAA5lC,EAAymC,kBAAzmC,EAA4nC,wBAA5nC,EAAqpC,yBAArpC,EAA+qC,kBAA/qC,EAAksC,kBAAlsC,EAAqtC,cAArtC,EAAouC,QAApuC,EAA6uC,sBAA7uC,EAAowC,YAApwC,EAAixC,YAAjxC,EAA8xC,aAA9xC,EAA4yC,cAA5yC,EAA2zC,cAA3zC,EAA00C,cAA10C,EAAy1C,OAAz1C,EAAi2C,MAAj2C,EAAw2C,OAAx2C,EAAg3C,eAAh3C,EAAg4C,cAAh4C,EAA+4C,aAA/4C,EAA65C,YAA75C,EAA06C,aAA16C,EAAw7C,mBAAx7C,EAA48C,mBAA58C,EAAg+C,mBAAh+C,EAAo/C,aAAp/C,EAAkgD,cAAlgD,EAAihD,SAAjhD,EAA2hD,SAA3hD,EAAqiD,mBAAriD,EAAyjD,eAAzjD,EAAykD,MAAzkD,EAAglD,KAAhlD,EAAslD,WAAtlD,EAAkmD,YAAlmD,EAA+mD,QAA/mD,EAAwnD,WAAxnD,EAAooD,SAApoD,EAA8oD,mBAA9oD,EAAkqD,2BAAlqD,EAA8rD,0BAA9rD,EAAytD,4BAAztD,EAAsvD,2BAAtvD,EAAkxD,mBAAlxD,EAAsyD,oBAAtyD,EAA2zD,WAA3zD,EAAu0D,aAAv0D,EAAq1D,KAAr1D,EAA21D,cAA31D,EAA02D,MAA12D,EAAi3D,YAAj3D,EAA83D,gBAA93D,EAA+4D,WAA/4D,EAA25D,WAA35D,EAAu6D,aAAv6D,EAAq7D,WAAr7D,EAAi8D,OAAj8D,EAAy8D,cAAz8D,EAAw9D,WAAx9D,EAAo+D,WAAp+D,EAAg/D,MAAh/D,EAAu/D,uBAAv/D,EAA+gE,aAA/gE,EAA6hE,cAA7hE,EAA4iE,wBAA5iE,EAAqkE,WAArkE,EAAilE,kBAAjlE,EAAomE,cAApmE,EAAmnE,YAAnnE,EAAgoE,gBAAhoE,EAAipE,cAAjpE,EAAgqE,yBAAhqE,EAA0rE,mBAA1rE,EAA8sE,yBAA9sE,EAAwuE,wBAAxuE,EAAiwE,sBAAjwE,EAAwxE,uBAAxxE,EAAgzE,aAAhzE,EAA8zE,MAA9zE,EAAq0E,WAAr0E,EAAi1E,mBAAj1E,EAAq2E,gBAAr2E,EAAs3E,oBAAt3E,EAA24E,gBAA34E,EAA45E,aAA55E,EAA06E,iBAA16E,EAA47E,mBAA57E,EAAg9E,UAAh9E,EAA29E,cAA39E,EAA0+E,gBAA1+E,EAA2/E,eAA3/E,EAA2gF,qBAA3gF,EAAiiF,uBAAjiF,EAAyjF,oBAAzjF,EAA8kF,qBAA9kF,EAAomF,QAApmF,EAA6mF,SAA7mF,EAAunF,MAAvnF,EAA8nF,mBAA9nF,EAAkpF,iBAAlpF,EAAoqF,kBAApqF,EAAurF,kBAAvrF,EAA0sF,iBAA1sF,EAA4tF,MAA5tF,EAAmuF,gBAAnuF,EAAovF,YAApvF,EAAiwF,aAAjwF,EAA+wF,eAA/wF,EAA+xF,oBAA/xF,EAAozF,qBAApzF,EAA00F,wBAA10F,EAAm2F,YAAn2F,EAAg3F,kBAAh3F,EAAm4F,qBAAn4F,EAAy5F,iBAAz5F,EAA26F,QAA36F,EAAo7F,eAAp7F,EAAo8F,aAAp8F,EAAk9F,cAAl9F,EAAi+F,YAAj+F,EAA8+F,eAA9+F,EAA8/F,OAA9/F,EAAsgG,mBAAtgG,EAA0hG,cAA1hG,EAAyiG,oBAAziG,EAA8jG,eAA9jG,EAA8kG,eAA9kG,EAA8lG,YAA9lG,EAA2mG,WAA3mG,EAAunG,YAAvnG,EAAooG,WAApoG,EAAgpG,SAAhpG,EAA0pG,UAA1pG,EAAqqG,WAArqG,EAAirG,UAAjrG,EAA4rG,WAA5rG,EAAwsG,QAAxsG,EAAitG,YAAjtG,EAA8tG,iBAA9tG,EAAgvG,SAAhvG,EAA0vG,OAA1vG,EAAkwG,SAAlwG,EAA4wG,SAA5wG,EAAsxG,eAAtxG,EAAsyG,gBAAtyG,EAAuzG,eAAvzG,EAAu0G,eAAv0G,EAAu1G,UAAv1G,EAAk2G,gBAAl2G,EAAm3G,eAAn3G,EAAm4G,YAAn4G,EAAg5G,YAAh5G,EAA65G,SAA75G,EAAu6G,gBAAv6G,EAAw7G,cAAx7G,EAAu8G,eAAv8G,EAAu9G,aAAv9G,EAAq+G,MAAr+G,EAA4+G,kBAA5+G,EAA+/G,mBAA//G,EAAmhH,mBAAnhH,EAAuiH,aAAviH,EAAqjH,OAArjH,EAA6jH,aAA7jH,EAA2kH,cAA3kH,EAA0lH,aAA1lH,EAAwmH,oBAAxmH,EAA6nH,OAA7nH,EAAqoH,aAAroH,EAAmpH,aAAnpH,EAAiqH,UAAjqH,EAA4qH,oBAA5qH,EAAisH,kBAAjsH,EAAotH,QAAptH,EAA6tH,oBAA7tH,EAAkvH,qBAAlvH,EAAwwH,qBAAxwH,EAA8xH,iBAA9xH,EAAgzH,kBAAhzH,EAAm0H,QAAn0H,EAA40H,MAA50H,EAAm1H,YAAn1H,EAAg2H,aAAh2H,EAA82H,UAA92H,EAAy3H,OAAz3H,EAAi4H,UAAj4H,EAA44H,gBAA54H,EAA65H,YAA75H,EAA06H,eAA16H,EAA07H,eAA17H,EAA08H,WAA18H,EAAs9H,uBAAt9H,EAA8+H,cAA9+H,EAA6/H,cAA7/H,EAA4gI,eAA5gI,EAA4hI,MAA5hI,EAAmiI,OAAniI,EAA2iI,UAA3iI,EAAsjI,cAAtjI,EAAqkI,eAArkI,EAAqlI,mBAArlI,EAAymI,aAAzmI,EAAunI,QAAvnI,EAAgoI,YAAhoI,EAA6oI,UAA7oI,EAAwpI,cAAxpI,EAAuqI,QAAvqI,EAAgrI,aAAhrI,EAA8rI,YAA9rI,EAA2sI,iBAA3sI,EAA6tI,YAA7tI,EAA0uI,iBAA1uI,EAA4vI,iBAA5vI,EAA8wI,uBAA9wI,EAAsyI,sBAAtyI,EAA6zI,sBAA7zI,EAAo1I,uBAAp1I,EAA42I,eAA52I,EAA43I,qBAA53I,EAAk5I,wBAAl5I,EAA26I,qBAA36I,EAAi8I,aAAj8I,EAA+8I,aAA/8I,EAA69I,cAA79I,EAA4+I,cAA5+I,EAA2/I,eAA3/I,EAA2gJ,aAA3gJ,EAAyhJ,kBAAzhJ,EAA4iJ,qBAA5iJ,EAAkkJ,gBAAlkJ,EAAmlJ,yBAAnlJ,EAA6mJ,WAA7mJ,EAAynJ,KAAznJ,EAA+nJ,WAA/nJ,EAA2oJ,kBAA3oJ,EAA8pJ,iBAA9pJ,EAAgrJ,YAAhrJ,EAA6rJ,kBAA7rJ,EAAgtJ,qBAAhtJ,EAAsuJ,qBAAtuJ,EAA4vJ,4BAA5vJ,EAAyxJ,cAAzxJ,EAAwyJ,gBAAxyJ,EAAyzJ,YAAzzJ,EAAs0J,eAAt0J,EAAs1J,gBAAt1J,EAAu2J,cAAv2J,EAAs3J,aAAt3J,EAAo4J,aAAp4J,EAAk5J,YAAl5J,EAA+5J,cAA/5J,EAA86J,cAA96J,EAA67J,QAA77J,EAAs8J,aAAt8J,EAAo9J,QAAp9J,EAA69J,OAA79J,EAAq+J,aAAr+J,EAAm/J,YAAn/J,EAAggK,cAAhgK,EAA+gK,WAA/gK,EAA2hK,SAA3hK,EAAqiK,WAAriK,EAAijK,WAAjjK,EAA6jK,MAA7jK,EAAokK,mBAApkK,EAAwlK,QAAxlK,EAAimK,aAAjmK,EAA+mK,eAA/mK,EAA+nK,gBAA/nK,EAAgpK,YAAhpK,EAA6pK,cAA7pK,EAA4qK,gBAA5qK,EAA6rK,qBAA7rK,EAAmtK,6BAAntK,EAAivK,iBAAjvK,EAAmwK,MAAnwK,EAA0wK,cAA1wK,EAAyxK,WAAzxK,EAAqyK,iBAAryK,EAAuzK,QAAvzK,EAAg0K,YAAh0K,EAA60K,YAA70K,EAA01K,cAA11K,EAAy2K,iBAAz2K,EAA23K,QAA33K,EAAo4K,kBAAp4K,EAAu5K,mBAAv5K,EAA26K,gBAA36K,EAA47K,iBAA57K,EAA88K,mBAA98K,EAAk+K,gBAAl+K,EAAm/K,cAAn/K,EAAkgL,gBAAlgL,EAAmhL,gBAAnhL,EAAoiL,mBAApiL,EAAwjL,8BAAxjL,EAAulL,4BAAvlL,EAAonL,aAApnL,EAAkoL,cAAloL,EAAipL,gBAAjpL,EAAkqL,oBAAlqL,CAAxB;AACA,IAAIC,4BAA4B,GAAG,CAAC,uBAAD,EAAyB,sBAAzB,EAAgD,6BAAhD,EAA8E,sBAA9E,EAAqG,2BAArG,EAAiI,wBAAjI,EAA0J,0BAA1J,EAAqL,uBAArL,EAA6M,cAA7M,EAA4N,2BAA5N,EAAwP,wBAAxP,EAAiR,4BAAjR,EAA8S,gCAA9S,EAA+U,MAA/U,CAAnC;AACA,IAAIC,eAAe,GAAG,CAAC,aAAD,EAAe,KAAf,EAAqB,eAArB,EAAqC,cAArC,EAAoD,uBAApD,EAA4E,cAA5E,EAA2F,aAA3F,EAAyG,YAAzG,CAAtB;AACA,IAAIC,cAAc,GAAG,CAAC,WAAD,EAAa,cAAb,EAA4B,MAA5B,EAAmC,YAAnC,EAAgD,OAAhD,EAAwD,OAAxD,EAAgE,QAAhE,EAAyE,OAAzE,EAAiF,gBAAjF,EAAkG,MAAlG,EAAyG,YAAzG,EAAsH,OAAtH,EAA8H,WAA9H,EAA0I,WAA1I,EAAsJ,YAAtJ,EAAmK,WAAnK,EAA+K,OAA/K,EAAuL,gBAAvL,EAAwM,UAAxM,EAAmN,SAAnN,EAA6N,MAA7N,EAAoO,UAApO,EAA+O,UAA/O,EAA0P,eAA1P,EAA0Q,UAA1Q,EAAqR,WAArR,EAAiS,WAAjS,EAA6S,aAA7S,EAA2T,gBAA3T,EAA4U,YAA5U,EAAyV,YAAzV,EAAsW,SAAtW,EAAgX,YAAhX,EAA6X,cAA7X,EAA4Y,eAA5Y,EAA4Z,eAA5Z,EAA4a,eAA5a,EAA4b,YAA5b,EAAyc,UAAzc,EAAod,aAApd,EAAke,SAAle,EAA4e,YAA5e,EAAyf,WAAzf,EAAqgB,aAArgB,EAAmhB,aAAnhB,EAAiiB,SAAjiB,EAA2iB,WAA3iB,EAAujB,YAAvjB,EAAokB,MAApkB,EAA2kB,WAA3kB,EAAulB,MAAvlB,EAA8lB,MAA9lB,EAAqmB,OAArmB,EAA6mB,aAA7mB,EAA2nB,UAA3nB,EAAsoB,SAAtoB,EAAgpB,WAAhpB,EAA4pB,QAA5pB,EAAqqB,OAArqB,EAA6qB,OAA7qB,EAAqrB,UAArrB,EAAgsB,eAAhsB,EAAgtB,WAAhtB,EAA4tB,cAA5tB,EAA2uB,WAA3uB,EAAuvB,YAAvvB,EAAowB,WAApwB,EAAgxB,sBAAhxB,EAAuyB,WAAvyB,EAAmzB,YAAnzB,EAAg0B,WAAh0B,EAA40B,aAA50B,EAA01B,eAA11B,EAA02B,cAA12B,EAAy3B,gBAAz3B,EAA04B,gBAA14B,EAA25B,aAA35B,EAAy6B,MAAz6B,EAAg7B,WAAh7B,EAA47B,OAA57B,EAAo8B,SAAp8B,EAA88B,QAA98B,EAAu9B,kBAAv9B,EAA0+B,YAA1+B,EAAu/B,cAAv/B,EAAsgC,cAAtgC,EAAqhC,gBAArhC,EAAsiC,iBAAtiC,EAAwjC,mBAAxjC,EAA4kC,iBAA5kC,EAA8lC,iBAA9lC,EAAgnC,cAAhnC,EAA+nC,WAA/nC,EAA2oC,WAA3oC,EAAupC,UAAvpC,EAAkqC,aAAlqC,EAAgrC,MAAhrC,EAAurC,SAAvrC,EAAisC,OAAjsC,EAAysC,WAAzsC,EAAqtC,QAArtC,EAA8tC,WAA9tC,EAA0uC,QAA1uC,EAAmvC,eAAnvC,EAAmwC,WAAnwC,EAA+wC,eAA/wC,EAA+xC,eAA/xC,EAA+yC,YAA/yC,EAA4zC,WAA5zC,EAAw0C,MAAx0C,EAA+0C,MAA/0C,EAAs1C,MAAt1C,EAA61C,YAA71C,EAA02C,QAA12C,EAAm3C,eAAn3C,EAAm4C,KAAn4C,EAAy4C,WAAz4C,EAAq5C,WAAr5C,EAAi6C,aAAj6C,EAA+6C,QAA/6C,EAAw7C,YAAx7C,EAAq8C,UAAr8C,EAAg9C,UAAh9C,EAA29C,QAA39C,EAAo+C,QAAp+C,EAA6+C,SAA7+C,EAAu/C,WAAv/C,EAAmgD,WAAngD,EAA+gD,MAA/gD,EAAshD,aAAthD,EAAoiD,WAApiD,EAAgjD,KAAhjD,EAAsjD,MAAtjD,EAA6jD,SAA7jD,EAAukD,QAAvkD,EAAglD,WAAhlD,EAA4lD,QAA5lD,EAAqmD,OAArmD,EAA6mD,OAA7mD,EAAqnD,YAArnD,EAAkoD,QAAloD,EAA2oD,aAA3oD,CAArB;AACA,IAAIC,cAAc,GAAG,CAAC,OAAD,EAAS,UAAT,EAAoB,cAApB,EAAmC,UAAnC,EAA8C,eAA9C,EAA8D,MAA9D,EAAqE,mBAArE,EAAyF,OAAzF,EAAiG,OAAjG,EAAyG,KAAzG,EAA+G,YAA/G,EAA4H,YAA5H,EAAyI,WAAzI,EAAqJ,QAArJ,EAA8J,SAA9J,EAAwK,iBAAxK,EAA0L,aAA1L,EAAwM,cAAxM,EAAuN,cAAvN,EAAsO,UAAtO,EAAiP,WAAjP,EAA6P,MAA7P,EAAoQ,MAApQ,EAA2Q,OAA3Q,EAAmR,cAAnR,EAAkS,YAAlS,EAA+S,cAA/S,EAA8T,YAA9T,EAA2U,WAA3U,EAAuV,UAAvV,EAAkW,OAAlW,EAA0W,eAA1W,EAA0X,QAA1X,EAAmY,SAAnY,EAA6Y,OAA7Y,EAAqZ,OAArZ,EAA6Z,YAA7Z,EAA0a,MAA1a,EAAib,QAAjb,EAA0b,QAA1b,EAAmc,YAAnc,EAAgd,MAAhd,EAAud,QAAvd,EAAge,OAAhe,EAAwe,WAAxe,EAAof,YAApf,EAAigB,SAAjgB,EAA2gB,QAA3gB,EAAohB,YAAphB,EAAiiB,iBAAjiB,EAAmjB,cAAnjB,EAAkkB,YAAlkB,EAA+kB,MAA/kB,EAAslB,WAAtlB,EAAkmB,YAAlmB,EAA+mB,qBAA/mB,EAAqoB,SAAroB,EAA+oB,aAA/oB,EAA6pB,OAA7pB,EAAqqB,MAArqB,EAA4qB,QAA5qB,EAAqrB,UAArrB,EAAgsB,QAAhsB,EAAysB,aAAzsB,EAAutB,oBAAvtB,EAA4uB,mBAA5uB,EAAgwB,iBAAhwB,EAAkxB,OAAlxB,EAA0xB,MAA1xB,EAAiyB,aAAjyB,EAA+yB,YAA/yB,EAA4zB,UAA5zB,EAAu0B,QAAv0B,EAAg1B,SAAh1B,EAA01B,WAA11B,EAAs2B,gBAAt2B,EAAu3B,SAAv3B,EAAi4B,SAAj4B,EAA24B,UAA34B,EAAs5B,aAAt5B,EAAo6B,cAAp6B,EAAm7B,YAAn7B,EAAg8B,MAAh8B,EAAu8B,SAAv8B,EAAi9B,UAAj9B,EAA49B,OAA59B,EAAo+B,MAAp+B,EAA2+B,OAA3+B,EAAm/B,WAAn/B,EAA+/B,cAA//B,EAA8gC,SAA9gC,EAAwhC,QAAxhC,EAAiiC,QAAjiC,EAA0iC,SAA1iC,EAAojC,sBAApjC,EAA2kC,SAA3kC,EAAqlC,gBAArlC,EAAsmC,kBAAtmC,EAAynC,gBAAznC,EAA0oC,iBAA1oC,EAA4pC,kBAA5pC,EAA+qC,YAA/qC,EAA4rC,MAA5rC,EAAmsC,SAAnsC,EAA6sC,mBAA7sC,EAAiuC,iBAAjuC,EAAmvC,UAAnvC,EAA8vC,UAA9vC,EAAywC,cAAzwC,EAAwxC,QAAxxC,EAAiyC,QAAjyC,EAA0yC,MAA1yC,EAAizC,UAAjzC,EAA4zC,MAA5zC,EAAm0C,SAAn0C,EAA60C,aAA70C,EAA21C,UAA31C,EAAs2C,SAAt2C,EAAg3C,SAAh3C,EAA03C,UAA13C,EAAq4C,OAAr4C,EAA64C,KAA74C,EAAm5C,UAAn5C,EAA85C,kBAA95C,EAAi7C,wBAAj7C,EAA08C,sBAA18C,EAAi+C,wBAAj+C,EAA0/C,wBAA1/C,EAAmhD,yBAAnhD,EAA6iD,yBAA7iD,EAAukD,yBAAvkD,EAAimD,uBAAjmD,EAAynD,yBAAznD,EAAmpD,0BAAnpD,EAA8qD,yBAA9qD,EAAwsD,yBAAxsD,EAAkuD,yBAAluD,EAA4vD,uBAA5vD,EAAoxD,kBAApxD,EAAuyD,WAAvyD,EAAmzD,UAAnzD,EAA8zD,SAA9zD,EAAw0D,iBAAx0D,EAA01D,gBAA11D,EAA22D,SAA32D,EAAq3D,MAAr3D,EAA43D,MAA53D,EAAm4D,OAAn4D,EAA24D,MAA34D,EAAk5D,MAAl5D,EAAy5D,WAAz5D,EAAq6D,UAAr6D,EAAg7D,MAAh7D,EAAu7D,oBAAv7D,EAA48D,UAA58D,EAAu9D,UAAv9D,EAAk+D,QAAl+D,EAA2+D,UAA3+D,EAAs/D,UAAt/D,EAAigE,MAAjgE,EAAwgE,QAAxgE,EAAihE,kBAAjhE,EAAoiE,QAApiE,EAA6iE,MAA7iE,EAAojE,QAApjE,EAA6jE,MAA7jE,EAAokE,MAApkE,EAA2kE,QAA3kE,EAAolE,WAAplE,EAAgmE,eAAhmE,EAAgnE,UAAhnE,EAA2nE,gBAA3nE,EAA4oE,YAA5oE,EAAypE,KAAzpE,EAA+pE,MAA/pE,EAAsqE,MAAtqE,EAA6qE,QAA7qE,EAAsrE,gBAAtrE,EAAusE,iBAAvsE,EAAytE,qBAAztE,EAA+uE,UAA/uE,EAA0vE,gBAA1vE,EAA2wE,UAA3wE,EAAsxE,SAAtxE,EAAgyE,SAAhyE,EAA0yE,QAA1yE,EAAmzE,aAAnzE,EAAi0E,cAAj0E,EAAg1E,aAAh1E,EAA81E,cAA91E,EAA62E,OAA72E,EAAq3E,QAAr3E,EAA83E,WAA93E,EAA04E,QAA14E,EAAm5E,QAAn5E,EAA45E,iBAA55E,EAA86E,mBAA96E,EAAk8E,SAAl8E,EAA48E,SAA58E,EAAs9E,UAAt9E,EAAi+E,gBAAj+E,EAAk/E,UAAl/E,EAA6/E,OAA7/E,EAAqgF,sBAArgF,EAA4hF,qBAA5hF,EAAkjF,uBAAljF,EAA0kF,WAA1kF,EAAslF,KAAtlF,EAA4lF,OAA5lF,EAAomF,QAApmF,EAA6mF,MAA7mF,EAAonF,OAApnF,EAA4nF,SAA5nF,EAAsoF,cAAtoF,EAAqpF,QAArpF,EAA8pF,iBAA9pF,EAAgrF,OAAhrF,EAAwrF,WAAxrF,EAAosF,SAApsF,EAA8sF,UAA9sF,EAAytF,OAAztF,EAAiuF,SAAjuF,EAA2uF,MAA3uF,EAAkvF,OAAlvF,EAA0vF,aAA1vF,EAAwwF,gBAAxwF,EAAyxF,aAAzxF,EAAuyF,mBAAvyF,EAA2zF,aAA3zF,EAAy0F,iBAAz0F,EAA21F,aAA31F,EAAy2F,WAAz2F,EAAq3F,KAAr3F,EAA23F,WAA33F,EAAu4F,OAAv4F,EAA+4F,QAA/4F,EAAw5F,UAAx5F,EAAm6F,mBAAn6F,EAAu7F,cAAv7F,EAAs8F,mBAAt8F,EAA09F,qBAA19F,EAAg/F,0BAAh/F,EAA2gG,QAA3gG,EAAohG,MAAphG,EAA2hG,UAA3hG,EAAsiG,iBAAtiG,EAAwjG,UAAxjG,EAAmkG,aAAnkG,EAAilG,QAAjlG,EAA0lG,eAA1lG,EAA0mG,KAA1mG,EAAgnG,WAAhnG,EAA4nG,WAA5nG,EAAwoG,MAAxoG,EAA+oG,UAA/oG,EAA0pG,SAA1pG,EAAoqG,UAApqG,EAA+qG,UAA/qG,EAA0rG,WAA1rG,EAAssG,aAAtsG,EAAotG,gBAAptG,EAAquG,SAAruG,EAA+uG,eAA/uG,EAA+vG,WAA/vG,EAA2wG,MAA3wG,EAAkxG,QAAlxG,EAA2xG,aAA3xG,EAAyyG,QAAzyG,EAAkzG,WAAlzG,EAA8zG,SAA9zG,EAAw0G,SAAx0G,EAAk1G,WAAl1G,EAA81G,aAA91G,EAA42G,SAA52G,EAAs3G,OAAt3G,EAA83G,YAA93G,EAA24G,oBAA34G,EAAg6G,eAAh6G,EAAg7G,OAAh7G,EAAw7G,OAAx7G,EAAg8G,QAAh8G,EAAy8G,SAAz8G,EAAm9G,eAAn9G,EAAm+G,SAAn+G,EAA6+G,UAA7+G,EAAw/G,SAAx/G,EAAkgH,aAAlgH,EAAghH,SAAhhH,EAA0hH,MAA1hH,EAAiiH,QAAjiH,EAA0iH,SAA1iH,EAAojH,aAApjH,EAAkkH,aAAlkH,EAAglH,cAAhlH,EAA+lH,SAA/lH,EAAymH,SAAzmH,EAAmnH,UAAnnH,EAA8nH,KAA9nH,EAAooH,UAApoH,EAA+oH,UAA/oH,EAA0pH,aAA1pH,EAAwqH,UAAxqH,EAAmrH,aAAnrH,EAAisH,iBAAjsH,EAAmtH,OAAntH,EAA2tH,WAA3tH,EAAuuH,YAAvuH,EAAovH,2BAApvH,EAAgxH,WAAhxH,EAA4xH,QAA5xH,EAAqyH,UAAryH,EAAgzH,QAAhzH,EAAyzH,2BAAzzH,EAAq1H,2BAAr1H,EAAi3H,0BAAj3H,EAA44H,UAA54H,EAAu5H,UAAv5H,EAAk6H,OAAl6H,EAA06H,SAA16H,EAAo7H,KAAp7H,EAA07H,MAA17H,EAAi8H,OAAj8H,EAAy8H,OAAz8H,EAAi9H,QAAj9H,EAA09H,UAA19H,EAAq+H,SAAr+H,EAA++H,SAA/+H,EAAy/H,SAAz/H,EAAmgI,OAAngI,EAA2gI,YAA3gI,EAAwhI,KAAxhI,EAA8hI,QAA9hI,EAAuiI,SAAviI,EAAijI,UAAjjI,EAA4jI,YAA5jI,EAAykI,OAAzkI,EAAilI,SAAjlI,EAA2lI,QAA3lI,EAAomI,QAApmI,EAA6mI,QAA7mI,EAAsnI,QAAtnI,EAA+nI,WAA/nI,EAA2oI,iBAA3oI,EAA6pI,WAA7pI,EAAyqI,aAAzqI,EAAurI,2BAAvrI,EAAmtI,wBAAntI,EAA4uI,4BAA5uI,EAAywI,gCAAzwI,EAA0yI,gBAA1yI,EAA2zI,eAA3zI,EAA20I,UAA30I,EAAs1I,OAAt1I,EAA81I,MAA91I,EAAq2I,QAAr2I,EAA82I,qBAA92I,EAAo4I,uBAAp4I,EAA45I,QAA55I,EAAq6I,MAAr6I,EAA46I,OAA56I,EAAo7I,OAAp7I,EAA47I,kBAA57I,EAA+8I,OAA/8I,EAAu9I,mBAAv9I,EAA2+I,iBAA3+I,EAA6/I,wBAA7/I,EAAshJ,sBAAthJ,EAA6iJ,MAA7iJ,EAAojJ,OAApjJ,EAA4jJ,YAA5jJ,EAAykJ,eAAzkJ,EAAylJ,SAAzlJ,EAAmmJ,OAAnmJ,EAA2mJ,QAA3mJ,EAAonJ,aAApnJ,EAAkoJ,WAAloJ,EAA8oJ,YAA9oJ,EAA2pJ,aAA3pJ,EAAyqJ,OAAzqJ,EAAirJ,WAAjrJ,EAA6rJ,QAA7rJ,EAAssJ,eAAtsJ,EAAstJ,UAAttJ,EAAiuJ,OAAjuJ,EAAyuJ,QAAzuJ,EAAkvJ,YAAlvJ,EAA+vJ,SAA/vJ,EAAywJ,QAAzwJ,EAAkxJ,KAAlxJ,EAAwxJ,sBAAxxJ,EAA+yJ,OAA/yJ,EAAuzJ,WAAvzJ,EAAm0J,UAAn0J,EAA80J,SAA90J,EAAw1J,OAAx1J,EAAg2J,eAAh2J,EAAg3J,YAAh3J,EAA63J,cAA73J,EAA44J,oBAA54J,EAAi6J,oBAAj6J,EAAs7J,oBAAt7J,EAA28J,WAA38J,EAAu9J,iBAAv9J,EAAy+J,OAAz+J,EAAi/J,QAAj/J,EAA0/J,MAA1/J,EAAigK,aAAjgK,EAA+gK,UAA/gK,EAA0hK,UAA1hK,EAAqiK,WAAriK,EAAijK,MAAjjK,EAAwjK,OAAxjK,EAAgkK,MAAhkK,EAAukK,kBAAvkK,EAA0lK,YAA1lK,EAAumK,iBAAvmK,EAAynK,mBAAznK,EAA6oK,cAA7oK,EAA4pK,SAA5pK,EAAsqK,OAAtqK,EAA8qK,aAA9qK,EAA4rK,qBAA5rK,EAAktK,aAAltK,EAAguK,qBAAhuK,EAAsvK,IAAtvK,EAA2vK,KAA3vK,EAAiwK,qBAAjwK,EAAuxK,uBAAvxK,EAA+yK,WAA/yK,EAA2zK,aAA3zK,EAAy0K,YAAz0K,EAAs1K,YAAt1K,EAAm2K,YAAn2K,EAAg3K,aAAh3K,EAA83K,iBAA93K,EAAg5K,gBAAh5K,EAAi6K,WAAj6K,EAA66K,IAA76K,EAAk7K,aAAl7K,EAAg8K,gBAAh8K,EAAi9K,aAAj9K,EAA+9K,mBAA/9K,EAAm/K,aAAn/K,EAAigL,iBAAjgL,EAAmhL,aAAnhL,EAAiiL,WAAjiL,EAA6iL,MAA7iL,EAAojL,KAApjL,EAA0jL,KAA1jL,EAAgkL,UAAhkL,EAA2kL,eAA3kL,EAA2lL,SAA3lL,EAAqmL,aAArmL,EAAmnL,gBAAnnL,EAAooL,eAApoL,EAAopL,QAAppL,EAA6pL,UAA7pL,EAAwqL,MAAxqL,EAA+qL,MAA/qL,EAAsrL,OAAtrL,EAA8rL,QAA9rL,EAAusL,aAAvsL,EAAqtL,YAArtL,EAAkuL,OAAluL,EAA0uL,SAA1uL,EAAovL,SAApvL,EAA8vL,KAA9vL,EAAowL,UAApwL,EAA+wL,UAA/wL,EAA0xL,SAA1xL,EAAoyL,eAApyL,EAAozL,WAApzL,EAAg0L,KAAh0L,EAAs0L,aAAt0L,EAAo1L,MAAp1L,EAA21L,cAA31L,EAA02L,gBAA12L,EAA23L,YAA33L,EAAw4L,UAAx4L,EAAm5L,eAAn5L,EAAm6L,cAAn6L,EAAm7L,OAAn7L,CAArB;AAEA,IAAIC,qBAAqB,GAAG,CAAC,IAAD,EAAM,KAAN,EAAY,IAAZ,EAAiB,KAAjB,EAAuB,QAAvB,EAAgC,MAAhC,EAAuC,IAAvC,EAA4C,MAA5C,EAAmD,SAAnD,EAA6D,WAA7D,CAA5B;AAAA,IACIC,cAAc,GAAG,CAAC,KAAD,EAAO,IAAP,EAAY,MAAZ,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC,IAArC,CADrB;AAAA,IAEIC,YAAY,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,OAAf,EAAuB,MAAvB,EAA8B,OAA9B,EAAsC,MAAtC,EAA6C,aAA7C,EAA2D,UAA3D,EAAsE,UAAtE,CAFnB;AAAA,IAGIC,UAAU,GAAG,CAAC,YAAD,EAAe,YAAf,EAA6B,QAA7B,EAAuC,WAAvC,EAAoD,OAApD,EAA6D,OAA7D,EAAsE,WAAtE,EAAmF,QAAnF,EAA6F,MAA7F,CAHjB;AAKA,IAAIC,SAAS,GAAGb,YAAY,CAACc,MAAb,CAAoBb,cAApB,EAAmCC,WAAnC,EAA+CC,cAA/C,EACoBC,iBADpB,EACsCC,4BADtC,EAEoBE,cAFpB,EAEmCC,cAFnC,EAEkDF,eAFlD,EAGoBG,qBAHpB,EAG0CC,cAH1C,EAIoBC,YAJpB,EAIiCC,UAJjC,CAAhB;;AAMA,SAASG,UAAT,CAAoBC,KAApB,EAA2B;EACzBA,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAW,UAASC,CAAT,EAAWC,CAAX,EAAa;IAAC,OAAOA,CAAC,GAAGD,CAAX;EAAc,CAAvC,CAAR;EACA,OAAO,IAAIE,MAAJ,CAAW,QAAQJ,KAAK,CAACK,IAAN,CAAW,KAAX,CAAR,GAA4B,OAAvC,CAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EACrB,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkC,EAAED,CAApC,EAAuCD,IAAI,CAACD,KAAK,CAACE,CAAD,CAAN,CAAJ,GAAiB,IAAjB;;EACvC,OAAOD,IAAP;AACD;;AAED,SAASG,YAAT,CAAsBC,IAAtB,EAA4B;EAC1B,OAAOA,IAAI,CAACC,OAAL,CAAa,0BAAb,EAAyC,MAAzC,CAAP;AACD;;AAED,IAAIC,WAAW,GAAGR,MAAM,CAACtB,YAAD,CAAxB;AAAA,IACI+B,kBAAkB,GAAG,qBADzB;AAAA,IAEIC,gBAAgB,GAAGV,MAAM,CAAClB,iBAAD,CAF7B;AAAA,IAGI6B,2BAA2B,GAAGX,MAAM,CAACjB,4BAAD,CAHxC;AAAA,IAII6B,aAAa,GAAGZ,MAAM,CAACd,cAAD,CAJ1B;AAAA,IAKI2B,aAAa,GAAGb,MAAM,CAACf,cAAD,CAL1B;AAAA,IAMI6B,aAAa,GAAGd,MAAM,CAACrB,cAAD,CAN1B;AAAA,IAOIoC,mBAAmB,GAAGtB,UAAU,CAACd,cAAD,CAPpC;AAAA,IAQIqC,aAAa,GAAGhB,MAAM,CAACnB,cAAD,CAR1B;AAAA,IASIoC,UAAU,GAAGjB,MAAM,CAACpB,WAAD,CATvB;AAAA,IAUIsC,cAAc,GAAGlB,MAAM,CAAChB,eAAD,CAV3B;AAAA,IAWImC,eAAe,GAAG,0DAXtB;AAAA,IAYIC,0BAA0B,GAAG3B,UAAU,CAACN,qBAAD,CAZ3C;AAAA,IAaIkC,aAAa,GAAGrB,MAAM,CAACZ,cAAD,CAb1B;AAAA,IAcIkC,oBAAoB,GAAG,IAAIxB,MAAJ,CAAW,wBAAX,CAd3B;AAAA,IAeIyB,WAAW,GAAGvB,MAAM,CAACX,YAAD,CAfxB;AAAA,IAgBImC,cAAc,GAAG,EAhBrB;AAAA,IAiBIC,MAAM,GAAG,EAjBb;AAAA,IAkBIC,EAlBJ;AAAA,IAmBIC,KAnBJ;AAAA,IAoBIC,IApBJ;AAAA,IAqBIC,QArBJ;AAuBA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;EAChCR,cAAc,GAAGO,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,6HAApB,CAAjB;EACAF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBC,SAAnB,GAA+Bb,cAAc,GAAGA,cAAc,CAAC,CAAD,CAAd,CAAkBjB,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,CAAH,GAA2C,EAAxF;EACAyB,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBE,MAAnB,GAA4BP,MAAM,CAACQ,WAAP,EAA5B;EACAb,EAAE,GAAGK,MAAM,CAACS,IAAP,EAAL,CAJgC,CAMhC;;EACA,IAAIT,MAAM,CAACG,KAAP,CAAa,IAAb,CAAJ,EAAwB;IACtBH,MAAM,CAACU,SAAP;IACA,OAAO,CAAC,SAAD,EAAY,SAAZ,CAAP;EACD,CAV+B,CAWhC;;;EACA,IAAIV,MAAM,CAACG,KAAP,CAAa,IAAb,CAAJ,EAAwB;IACtBF,KAAK,CAACU,QAAN,GAAiBC,aAAjB;IACA,OAAOA,aAAa,CAACZ,MAAD,EAASC,KAAT,CAApB;EACD,CAf+B,CAgBhC;;;EACA,IAAIN,EAAE,IAAI,IAAN,IAAcA,EAAE,IAAI,GAAxB,EAA6B;IAC3BK,MAAM,CAACa,IAAP;IACAZ,KAAK,CAACU,QAAN,GAAiBG,WAAW,CAACnB,EAAD,CAA5B;IACA,OAAOM,KAAK,CAACU,QAAN,CAAeX,MAAf,EAAuBC,KAAvB,CAAP;EACD,CArB+B,CAsBhC;;;EACA,IAAIN,EAAE,IAAI,GAAV,EAAe;IACbK,MAAM,CAACa,IAAP;IACAb,MAAM,CAACe,QAAP,CAAgB,SAAhB;IACA,OAAO,CAAC,KAAD,EAAQf,MAAM,CAACgB,OAAP,EAAR,CAAP;EACD,CA3B+B,CA4BhC;;;EACA,IAAIrB,EAAE,IAAI,GAAV,EAAe;IACbK,MAAM,CAACa,IAAP,GADa,CAEb;;IACA,IAAIb,MAAM,CAACG,KAAP,CAAa,mDAAb,CAAJ,EAAuE;MACrE,OAAO,CAAC,MAAD,EAAS,MAAT,CAAP;IACD,CALY,CAMb;;;IACA,IAAIH,MAAM,CAACG,KAAP,CAAa,eAAb,CAAJ,EAAmC;MACjC,OAAO,CAAC,SAAD,EAAY,MAAZ,CAAP;IACD;EACF,CAvC+B,CAwChC;;;EACA,IAAIH,MAAM,CAACG,KAAP,CAAaZ,oBAAb,CAAJ,EAAwC;IACtC,OAAO,CAAC,MAAD,EAAS,iBAAT,CAAP;EACD,CA3C+B,CA4ChC;;;EACA,IAAIS,MAAM,CAACG,KAAP,CAAa,mBAAb,CAAJ,EAAuC;IACrCH,MAAM,CAACe,QAAP,CAAgB,SAAhB;IACA,OAAO,CAAC,QAAD,EAAW,MAAX,CAAP;EACD,CAhD+B,CAiDhC;;;EACA,IAAIpB,EAAE,IAAI,GAAV,EAAe;IACbK,MAAM,CAACa,IAAP;IACA,OAAO,CAACb,MAAM,CAACG,KAAP,CAAa,wBAAb,IAAyC,SAAzC,GAAoD,UAArD,EAAiE,WAAjE,CAAP;EACD,CArD+B,CAsDhC;;;EACA,IAAIR,EAAE,IAAI,GAAN,IAAaK,MAAM,CAACG,KAAP,CAAa,iBAAb,CAAjB,EAAkD;IAChD,OAAO,CAAC,WAAD,EAAc,WAAd,CAAP;EACD,CAzD+B,CA0DhC;;;EACA,IAAIH,MAAM,CAACG,KAAP,CAAanB,mBAAb,CAAJ,EAAuC;IACrC,IAAIgB,MAAM,CAACS,IAAP,MAAiB,GAArB,EAA0BR,KAAK,CAACU,QAAN,GAAiBM,kBAAjB;IAC1B,OAAO,CAAC,UAAD,EAAa,MAAb,CAAP;EACD,CA9D+B,CA+DhC;;;EACA,IAAIjB,MAAM,CAACG,KAAP,CAAa,iBAAb,CAAJ,EAAqC;IACnCH,MAAM,CAACkB,MAAP,CAAc,CAAd;IACA,OAAO,CAAC,SAAD,EAAY,OAAZ,CAAP;EACD,CAnE+B,CAoEhC;;;EACA,IAAIlB,MAAM,CAACG,KAAP,CAAa,uBAAb,CAAJ,EAA2C;IACzCH,MAAM,CAACkB,MAAP,CAAc,CAAd;IACA,OAAO,CAAC,SAAD,EAAY,aAAZ,CAAP;EACD,CAxE+B,CAyEhC;;;EACA,IAAIlB,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,OAApB,KAAgCH,MAAM,CAACG,KAAP,CAAa,mBAAb,CAApC,EAAuE;IACrE,OAAO,CAAC,WAAD,EAAc,WAAd,CAAP;EACD,CA5E+B,CA6EhC;;;EACA,IAAIH,MAAM,CAACG,KAAP,CAAa,2BAAb,CAAJ,EAA+C;IAC7CH,MAAM,CAACkB,MAAP,CAAc,CAAd;IACA,OAAO,CAAC,sBAAD,EAAyB,WAAzB,CAAP;EACD;;EACD,IAAIlB,MAAM,CAACG,KAAP,CAAa,WAAb,CAAJ,EAA+B;IAC7B,OAAO,CAAC,sBAAD,EAAyB,WAAzB,CAAP;EACD,CApF+B,CAqFhC;;;EACA,IAAIH,MAAM,CAACG,KAAP,CAAad,0BAAb,CAAJ,EAA8C;IAC5C,OAAO,CAAC,UAAD,EAAa,UAAb,CAAP;EACD,CAxF+B,CAyFhC;;;EACA,IAAIW,MAAM,CAACG,KAAP,CAAa,2BAAb,CAAJ,EAA+C;IAC7C;IACA,IAAIH,MAAM,CAACG,KAAP,CAAa,uBAAb,EAAsC,KAAtC,CAAJ,EAAkD;MAChD,IAAI,CAACgB,SAAS,CAACnB,MAAM,CAACgB,OAAP,EAAD,CAAd,EAAkC;QAChChB,MAAM,CAACG,KAAP,CAAa,GAAb;QACA,OAAO,CAAC,UAAD,EAAa,eAAb,CAAP;MACD;IACF;;IACD,OAAO,CAAC,UAAD,EAAa,MAAb,CAAP;EACD,CAnG+B,CAoGhC;;;EACA,IAAIH,MAAM,CAACG,KAAP,CAAaf,eAAb,CAAJ,EAAmC;IACjC,OAAO,CAAC,UAAD,EAAaY,MAAM,CAACgB,OAAP,EAAb,CAAP;EACD,CAvG+B,CAwGhC;;;EACA,IAAI,kBAAkBI,IAAlB,CAAuBzB,EAAvB,CAAJ,EAAgC;IAC9BK,MAAM,CAACa,IAAP;IACA,OAAO,CAAC,IAAD,EAAOlB,EAAP,CAAP;EACD,CA5G+B,CA6GhC;;;EACAK,MAAM,CAACa,IAAP;EACA,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASD,aAAT,CAAuBZ,MAAvB,EAA+BC,KAA/B,EAAsC;EACpC,IAAIoB,QAAQ,GAAG,KAAf;EAAA,IAAsB1B,EAAtB;;EACA,OAAO,CAACA,EAAE,GAAGK,MAAM,CAACa,IAAP,EAAN,KAAwB,IAA/B,EAAqC;IACnC,IAAIQ,QAAQ,IAAI1B,EAAE,IAAI,GAAtB,EAA2B;MACzBM,KAAK,CAACU,QAAN,GAAiB,IAAjB;MACA;IACD;;IACDU,QAAQ,GAAI1B,EAAE,IAAI,GAAlB;EACD;;EACD,OAAO,CAAC,SAAD,EAAY,SAAZ,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASmB,WAAT,CAAqBQ,KAArB,EAA4B;EAC1B,OAAO,UAAStB,MAAT,EAAiBC,KAAjB,EAAwB;IAC7B,IAAIsB,OAAO,GAAG,KAAd;IAAA,IAAqB5B,EAArB;;IACA,OAAO,CAACA,EAAE,GAAGK,MAAM,CAACa,IAAP,EAAN,KAAwB,IAA/B,EAAqC;MACnC,IAAIlB,EAAE,IAAI2B,KAAN,IAAe,CAACC,OAApB,EAA6B;QAC3B,IAAID,KAAK,IAAI,GAAb,EAAkBtB,MAAM,CAACkB,MAAP,CAAc,CAAd;QAClB;MACD;;MACDK,OAAO,GAAG,CAACA,OAAD,IAAY5B,EAAE,IAAI,IAA5B;IACD;;IACD,IAAIA,EAAE,IAAI2B,KAAN,IAAe,CAACC,OAAD,IAAYD,KAAK,IAAI,GAAxC,EAA6CrB,KAAK,CAACU,QAAN,GAAiB,IAAjB;IAC7C,OAAO,CAAC,QAAD,EAAW,QAAX,CAAP;EACD,CAXD;AAYD;AAED;AACA;AACA;;;AACA,SAASM,kBAAT,CAA4BjB,MAA5B,EAAoCC,KAApC,EAA2C;EACzCD,MAAM,CAACa,IAAP,GADyC,CAC1B;;EACf,IAAI,CAACb,MAAM,CAACG,KAAP,CAAa,YAAb,EAA2B,KAA3B,CAAL,EACEF,KAAK,CAACU,QAAN,GAAiBG,WAAW,CAAC,GAAD,CAA5B,CADF,KAGEb,KAAK,CAACU,QAAN,GAAiB,IAAjB;EACF,OAAO,CAAC,IAAD,EAAO,GAAP,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASa,OAAT,CAAiB3B,IAAjB,EAAuBU,MAAvB,EAA+BkB,IAA/B,EAAqCpB,IAArC,EAA2C;EACzC,KAAKR,IAAL,GAAYA,IAAZ;EACA,KAAKU,MAAL,GAAcA,MAAd;EACA,KAAKkB,IAAL,GAAYA,IAAZ;EACA,KAAKpB,IAAL,GAAYA,IAAI,IAAI;IAACC,SAAS,EAAE,EAAZ;IAAgBC,MAAM,EAAE;EAAxB,CAApB;AACD;;AAED,SAASmB,WAAT,CAAqBzB,KAArB,EAA4BD,MAA5B,EAAoCH,IAApC,EAA0CU,MAA1C,EAAkD;EAChDA,MAAM,GAAGA,MAAM,IAAI,CAAV,GAAcA,MAAd,GAAuBP,MAAM,CAAC2B,UAAvC;EACA1B,KAAK,CAACG,OAAN,GAAgB,IAAIoB,OAAJ,CAAY3B,IAAZ,EAAkBG,MAAM,CAACQ,WAAP,KAAuBD,MAAzC,EAAiDN,KAAK,CAACG,OAAvD,CAAhB;EACA,OAAOP,IAAP;AACD;;AAED,SAAS+B,UAAT,CAAoB3B,KAApB,EAA2BD,MAA3B,EAAmC6B,aAAnC,EAAkD;EAChD,IAAIC,aAAa,GAAG7B,KAAK,CAACG,OAAN,CAAcG,MAAd,GAAuBP,MAAM,CAAC2B,UAAlD;EACAE,aAAa,GAAGA,aAAa,IAAI,KAAjC;EACA5B,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,CAAcqB,IAA9B;EACA,IAAII,aAAJ,EAAmB5B,KAAK,CAACG,OAAN,CAAcG,MAAd,GAAuBuB,aAAvB;EACnB,OAAO7B,KAAK,CAACG,OAAN,CAAcP,IAArB;AACD;;AAED,SAASkC,IAAT,CAAclC,IAAd,EAAoBG,MAApB,EAA4BC,KAA5B,EAAmC;EACjC,OAAOP,MAAM,CAACO,KAAK,CAACG,OAAN,CAAcP,IAAf,CAAN,CAA2BA,IAA3B,EAAiCG,MAAjC,EAAyCC,KAAzC,CAAP;AACD;;AAED,SAAS+B,UAAT,CAAoBnC,IAApB,EAA0BG,MAA1B,EAAkCC,KAAlC,EAAyCgC,CAAzC,EAA4C;EAC1C,KAAK,IAAI7D,CAAC,GAAG6D,CAAC,IAAI,CAAlB,EAAqB7D,CAAC,GAAG,CAAzB,EAA4BA,CAAC,EAA7B,EACE6B,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,CAAcqB,IAA9B;;EACF,OAAOM,IAAI,CAAClC,IAAD,EAAOG,MAAP,EAAeC,KAAf,CAAX;AACD;AAGD;AACA;AACA;;;AACA,SAASkB,SAAT,CAAmBe,IAAnB,EAAyB;EACvB,OAAOA,IAAI,CAACC,WAAL,MAAsB1D,WAA7B;AACD;;AAED,SAAS2D,cAAT,CAAwBF,IAAxB,EAA8B;EAC5BA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAP;EACA,OAAOD,IAAI,IAAIvD,gBAAR,IAA4BuD,IAAI,IAAI/C,cAA3C;AACD;;AAED,SAASkD,WAAT,CAAqBH,IAArB,EAA2B;EACzB,OAAOA,IAAI,CAACC,WAAL,MAAsB7C,aAA7B;AACD;;AAED,SAASgD,kBAAT,CAA4BJ,IAA5B,EAAkC;EAChC,OAAOA,IAAI,CAACC,WAAL,GAAmBhC,KAAnB,CAAyBZ,oBAAzB,CAAP;AACD;;AAED,SAASgD,WAAT,CAAqBL,IAArB,EAA2B;EACzB,IAAIM,MAAM,GAAGN,IAAI,CAACC,WAAL,EAAb;EACA,IAAIrC,QAAQ,GAAG,UAAf;EACA,IAAIqB,SAAS,CAACe,IAAD,CAAb,EAAqBpC,QAAQ,GAAG,KAAX,CAArB,KACK,IAAIuC,WAAW,CAACH,IAAD,CAAf,EAAuBpC,QAAQ,GAAG,eAAX,CAAvB,KACA,IAAIsC,cAAc,CAACF,IAAD,CAAlB,EAA0BpC,QAAQ,GAAG,UAAX,CAA1B,KACA,IAAI0C,MAAM,IAAI3D,aAAV,IAA2B2D,MAAM,IAAIhD,WAAzC,EAAsDM,QAAQ,GAAG,MAAX,CAAtD,KACA,IAAI0C,MAAM,IAAI,QAAV,IAAsBA,MAAM,IAAI1D,aAApC,EAAmDgB,QAAQ,GAAG,SAAX,CAAnD,CAEL;EAFK,KAGA,IAAIoC,IAAI,CAAC/B,KAAL,CAAW,QAAX,CAAJ,EAA0BL,QAAQ,GAAG,QAAX;EAC/B,OAAOA,QAAP;AACD;;AAED,SAAS2C,WAAT,CAAqB5C,IAArB,EAA2BG,MAA3B,EAAmC;EACjC,OAAS0C,SAAS,CAAC1C,MAAD,CAAT,KAAsBH,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAAvB,IAA8BA,IAAI,IAAI,MAAtC,IAAgDA,IAAI,IAAI,WAA9E,CAAD,IAAgGA,IAAI,IAAI,aAAhH;AACD;;AAED,SAAS8C,mBAAT,CAA6B9C,IAA7B,EAAmCG,MAAnC,EAA2C;EACzC,OAAOH,IAAI,IAAI,GAAR,IAAeG,MAAM,CAACG,KAAP,CAAa,gBAAb,EAA+B,KAA/B,CAAtB;AACD;;AAED,SAASyC,YAAT,CAAsB/C,IAAtB,EAA4BG,MAA5B,EAAoC;EAClC,OAAOH,IAAI,IAAI,GAAR,IAAeG,MAAM,CAACG,KAAP,CAAa,UAAb,EAAyB,KAAzB,CAAtB;AACD;;AAED,SAAS0C,WAAT,CAAqB7C,MAArB,EAA6B;EAC3B,OAAOA,MAAM,CAAC8C,GAAP,MAAgB9C,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,IAAIpC,MAAJ,CAAW,UAAUO,YAAY,CAAC0B,MAAM,CAACgB,OAAP,EAAD,CAAjC,CAApB,CAAvB;AACD;;AAED,SAAS0B,SAAT,CAAmB1C,MAAnB,EAA2B;EACzB,OAAOA,MAAM,CAAC+C,GAAP,MAAgB/C,MAAM,CAACG,KAAP,CAAa,OAAb,EAAsB,KAAtB,CAAvB;AACD;;AAED,SAAS6C,eAAT,CAAyB3C,IAAzB,EAA+B;EAC7B,IAAI4C,EAAE,GAAG,2BAAT;EACA,IAAIC,MAAM,GAAG,OAAO7C,IAAP,IAAe,QAAf,GAA0BA,IAAI,CAACF,KAAL,CAAW8C,EAAX,CAA1B,GAA2C5C,IAAI,CAACH,MAAL,CAAYC,KAAZ,CAAkB8C,EAAlB,CAAxD;EACA,OAAOC,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,CAAU1E,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,CAAH,GAAmC,EAAhD;AACD;AAGD;AACA;AACA;;;AACAkB,MAAM,CAACyD,KAAP,GAAe,UAAStD,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAC3C,IAAKJ,IAAI,IAAI,SAAR,IAAqBgD,WAAW,CAAC7C,MAAD,CAAjC,IACCH,IAAI,IAAI,GAAR,IAAe6C,SAAS,CAAC1C,MAAD,CADzB,IAEAH,IAAI,IAAI,OAFZ,EAEqB;IACnB,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;EACD;;EACD,IAAI2C,mBAAmB,CAAC9C,IAAD,EAAOG,MAAP,CAAvB,EAAuC;IACrC,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,eAAhB,CAAlB;EACD;;EACD,IAAI0C,SAAS,CAAC1C,MAAD,CAAT,IAAqBH,IAAI,IAAI,GAAjC,EAAsC;IACpC,IAAI,CAAC,uBAAuBuB,IAAvB,CAA4BpB,MAAM,CAACE,MAAnC,CAAD,IAA+C,CAACiB,SAAS,CAAC6B,eAAe,CAAChD,MAAD,CAAhB,CAA7D,EAAwF;MACtF,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;IACD;EACF;;EACD,IAAIyC,WAAW,CAAC5C,IAAD,EAAOG,MAAP,CAAf,EAA+B;IAC7B,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,GAAR,IAAe6C,SAAS,CAAC1C,MAAD,CAA5B,EAAsC;IACpC,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,eAAZ,EAA6B;IAC3B,IAAIG,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,yBAApB,KAAkDkC,WAAW,CAACW,eAAe,CAAChD,MAAD,CAAhB,CAAjE,EAA4F;MAC1F,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,cAAhB,CAAlB;IACD,CAFD,MAGK;MACH,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,cAAhB,EAAgC,CAAhC,CAAlB;IACD;EACF;;EACD,IAAIH,IAAI,IAAI,GAAZ,EAAiB;IACf,IAAI,CAAC6C,SAAS,CAAC1C,MAAD,CAAV,IAAsB,CAACqC,WAAW,CAACW,eAAe,CAAChD,MAAD,CAAhB,CAAtC,EAAiE;MAC/D,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;IACD;;IACD,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,GAAZ,EAAiB;IACf,IAAI6C,SAAS,CAAC1C,MAAD,CAAT,IAAqBA,MAAM,CAACG,KAAP,CAAa,oBAAb,EAAkC,KAAlC,CAAzB,EAAmE;MACjEL,QAAQ,GAAG,KAAX;MACA,OAAO4B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACD;EACF;;EACD,IAAI4C,YAAY,CAAC/C,IAAD,EAAOG,MAAP,CAAhB,EAAgC;IAC9B,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,QAAhB,CAAlB;EACD;;EACD,IAAI,+CAA+CoB,IAA/C,CAAoDvB,IAApD,CAAJ,EAA+D;IAC7D,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB0C,SAAS,CAAC1C,MAAD,CAAT,GAAoB,OAApB,GAA8B,SAA9C,CAAlB;EACD;;EACD,IAAI,oCAAoCoB,IAApC,CAAyCvB,IAAzC,CAAJ,EAAoD;IAClD,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,WAAhB,CAAlB;EACD;;EACD,IAAI,YAAYoB,IAAZ,CAAiBvB,IAAjB,CAAJ,EAA4B;IAC1B,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,QAAhB,EAA0B,CAA1B,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAIA,IAAI,CAACuD,MAAL,CAAY,CAAZ,KAAkB,GAA9B,EAAmC;IAEjC;IACA,IAAIpD,MAAM,CAACQ,WAAP,KAAuB,CAAvB,IAA4B4B,cAAc,CAACpC,MAAM,CAACgB,OAAP,GAAiBqC,KAAjB,CAAuB,CAAvB,CAAD,CAA9C,EAA2E;MACzEvD,QAAQ,GAAG,UAAX;MACA,OAAO,OAAP;IACD;;IACD,IAAI,8BAA8BsB,IAA9B,CAAmCvB,IAAnC,CAAJ,EAA8C;MAC5C,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;IACD;;IACD,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,WAAR,IAAuB6C,SAAS,CAAC1C,MAAD,CAApC,EAA8C;IAC5C,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,GAAZ,EAAiB;IACf,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,QAAhB,CAAlB;EACD;;EAED,IAAIH,IAAI,IAAI,iBAAZ,EAA+B;IAC7B,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,gBAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,MAAZ,EAAoB;IAClB,IAAIqC,IAAI,GAAGlC,MAAM,CAACgB,OAAP,EAAX;IACAlB,QAAQ,GAAGyC,WAAW,CAACL,IAAD,CAAtB;;IAEA,IAAIpC,QAAQ,IAAI,UAAhB,EAA4B;MAC1B,IAAI+C,WAAW,CAAC7C,MAAD,CAAf,EAAyB;QACvB,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;MACD,CAFD,MAEO;QACLF,QAAQ,GAAG,MAAX;QACA,OAAO,OAAP;MACD;IACF;;IAED,IAAIA,QAAQ,IAAI,KAAhB,EAAuB;MAErB;MACA,IAAI,oCAAoCsB,IAApC,CAAyCc,IAAzC,CAAJ,EAAoD;QAClD,IAAIE,cAAc,CAACY,eAAe,CAAChD,MAAD,CAAhB,CAAlB,EAA6C;UAC3CF,QAAQ,GAAG,MAAX;UACA,OAAO,OAAP;QACD;MACF,CARoB,CAUrB;;;MACA,IAAIE,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,IAAIpC,MAAJ,CAAW,YAAYmE,IAAZ,GAAmB,GAAnB,GAAyBA,IAAzB,GAA+B,SAA1C,CAApB,CAAJ,EAA+E;QAC7EpC,QAAQ,GAAG,MAAX;QACA,OAAO,OAAP;MACD,CAdoB,CAgBrB;;;MACA,IAAIpB,kBAAkB,CAAC0C,IAAnB,CAAwBc,IAAxB,CAAJ,EAAmC;QACjC,IAAKW,WAAW,CAAC7C,MAAD,CAAX,IAAuBA,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,GAApB,CAAxB,IACC,CAAC0C,WAAW,CAAC7C,MAAD,CAAZ,IACA,CAACA,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,0BAApB,CADD,IAEA,CAACgB,SAAS,CAAC6B,eAAe,CAAChD,MAAD,CAAhB,CAHf,EAG2C;UACzCF,QAAQ,GAAG,UAAX;UACA,IAAIuC,WAAW,CAACW,eAAe,CAAChD,MAAD,CAAhB,CAAf,EAA2C,OAAO,OAAP;UAC3C,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;QACD;MACF;;MAED,IAAI0C,SAAS,CAAC1C,MAAD,CAAb,EAAuB,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACxB;;IACD,IAAIF,QAAQ,IAAI,eAAhB,EAAiC;MAC/BA,QAAQ,GAAG,SAAX,CAD+B,CAG/B;;MACA,IAAIE,MAAM,CAACgB,OAAP,CAAe,aAAf,KAAiC,CAAC6B,WAAW,CAAC7C,MAAD,CAAjD,EAA2D;QACzD,OAAO,OAAP;MACD;;MACD,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACD;;IACD,IAAIkC,IAAI,IAAI,QAAZ,EAAsB,OAAOR,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB,CApDJ,CAsDlB;;IACA,IAAIF,QAAQ,IAAI,UAAZ,IAA0BE,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,yBAApB,CAA9B,EAA8E;MAC5E,OAAOuB,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACD;EACF;;EACD,OAAOC,KAAK,CAACG,OAAN,CAAcP,IAArB;AACD,CAtID;AAyIA;AACA;AACA;;;AACAH,MAAM,CAAC4D,MAAP,GAAgB,UAASzD,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAC5C,IAAIJ,IAAI,IAAI,GAAZ,EAAiB,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,QAAhB,CAAlB;;EACjB,IAAIH,IAAI,IAAI,GAAZ,EAAiB;IACf,IAAII,KAAK,CAACG,OAAN,CAAcqB,IAAd,CAAmB5B,IAAnB,IAA2B,QAA/B,EAAyC;MACvC,OAAO+B,UAAU,CAAC3B,KAAD,EAAQD,MAAR,CAAjB;IACD;;IACD,IAAKA,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,iBAApB,KAA0CuC,SAAS,CAAC1C,MAAD,CAApD,IACAqC,WAAW,CAACW,eAAe,CAAChD,MAAD,CAAhB,CADX,IAEA,6BAA6BoB,IAA7B,CAAkC4B,eAAe,CAAChD,MAAD,CAAjD,CAFA,IAGC,CAACA,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,8BAApB,CAAD,IACAgB,SAAS,CAAC6B,eAAe,CAAChD,MAAD,CAAhB,CAJd,EAI0C;MACxC,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACD;;IACD,IAAIA,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,kCAApB,KACAH,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,mBAApB,CADA,IAEAH,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,oBAApB,CAFA,IAGAH,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,kBAApB,CAHJ,EAG6C;MAC3C,OAAOuB,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;IACD;;IACD,IAAI0C,SAAS,CAAC1C,MAAD,CAAb,EAAuB,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB,CAAvB,KACK,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;EACN;;EACD,IAAIH,IAAI,IAAIA,IAAI,CAACuD,MAAL,CAAY,CAAZ,KAAkB,GAA1B,IAAiChB,cAAc,CAACpC,MAAM,CAACgB,OAAP,GAAiBqC,KAAjB,CAAuB,CAAvB,CAAD,CAAnD,EAAgF;IAC9EvD,QAAQ,GAAG,UAAX;EACD;;EACD,IAAID,IAAI,IAAI,MAAZ,EAAoB;IAClB,IAAIqC,IAAI,GAAGlC,MAAM,CAACgB,OAAP,EAAX;IACAlB,QAAQ,GAAGyC,WAAW,CAACL,IAAD,CAAtB;;IACA,IAAIpC,QAAQ,IAAI,KAAZ,IAAqBpB,kBAAkB,CAAC0C,IAAnB,CAAwBc,IAAxB,CAAzB,EAAwD;MACtDpC,QAAQ,GAAG,UAAX;IACD;;IACD,IAAIA,QAAQ,IAAI,UAAZ,IAA0BoC,IAAI,IAAI,IAAtC,EAA4CpC,QAAQ,GAAG,MAAX;EAC7C;;EACD,IAAID,IAAI,IAAI,eAAZ,EAA6B;IAC3B,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,cAAhB,CAAlB;EACD;;EACD,IAAI4C,YAAY,CAAC/C,IAAD,EAAOG,MAAP,CAAhB,EAAgC;IAC9B,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,QAAhB,CAAlB;EACD;;EACD,OAAOC,KAAK,CAACG,OAAN,CAAcP,IAArB;AACD,CAxCD;AA2CA;AACA;AACA;;;AACAH,MAAM,CAAC6D,cAAP,GAAwB,UAAS1D,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EACpD,IAAIJ,IAAI,IAAI,MAAZ,EAAoB;IAClBC,QAAQ,GAAG,UAAX;IACA,OAAO4B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;EACD;;EACD,OAAO4B,UAAU,CAAC3B,KAAD,EAAQD,MAAR,CAAjB;AACD,CAND;AASA;AACA;AACA;;;AACAN,MAAM,CAAC8D,MAAP,GAAgB,UAAS3D,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAC5C,IAAI,CAACmC,cAAc,CAACY,eAAe,CAAChD,MAAM,CAACE,MAAR,CAAhB,CAAnB,EAAqD;IACnDF,MAAM,CAACG,KAAP,CAAa,UAAb;IACAL,QAAQ,GAAG,sBAAX;IACA,IAAI4C,SAAS,CAAC1C,MAAD,CAAb,EAAuB,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACvB,OAAO4B,UAAU,CAAC3B,KAAD,EAAQD,MAAR,CAAjB;EACD;;EACD,OAAOgC,UAAU,CAACnC,IAAD,EAAOG,MAAP,EAAeC,KAAf,CAAjB;AACD,CARD;AAWA;AACA;AACA;;;AACAP,MAAM,CAAC+D,OAAP,GAAiB,UAAS5D,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAC7C,IAAIJ,IAAI,IAAI,GAAZ,EAAiB,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,gBAAhB,CAAlB;;EACjB,IAAIyC,WAAW,CAAC5C,IAAD,EAAOG,MAAP,CAAf,EAA+B;IAC7B,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;EACD;;EACD,IAAI2C,mBAAmB,CAAC9C,IAAD,EAAOG,MAAP,CAAvB,EAAuC;IACrC,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,eAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,MAAZ,EAAoB;IAClB,IAAIqC,IAAI,GAAGlC,MAAM,CAACgB,OAAP,GAAiBmB,WAAjB,EAAX;IACA,IAAI,sBAAsBf,IAAtB,CAA2Bc,IAA3B,CAAJ,EACEpC,QAAQ,GAAG,SAAX,CADF,KAEK,IAAIf,aAAa,CAAC2E,cAAd,CAA6BxB,IAA7B,CAAJ,EACHpC,QAAQ,GAAG,KAAX,CADG,KAEA,IAAIZ,UAAU,CAACwE,cAAX,CAA0BxB,IAA1B,CAAJ,EACHpC,QAAQ,GAAG,WAAX,CADG,KAEA,IAAIb,aAAa,CAACyE,cAAd,CAA6BxB,IAA7B,CAAJ,EACHpC,QAAQ,GAAG,UAAX,CADG,KAEA,IAAIlB,2BAA2B,CAAC8E,cAA5B,CAA2CxB,IAA3C,CAAJ,EACHpC,QAAQ,GAAG,gBAAX,CADG,KAEAA,QAAQ,GAAGyC,WAAW,CAACvC,MAAM,CAACgB,OAAP,EAAD,CAAtB;;IACL,IAAIlB,QAAQ,IAAI,KAAZ,IAAqB4C,SAAS,CAAC1C,MAAD,CAAlC,EAA4C;MAC1C,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACD;EACF;;EACD,IAAIH,IAAI,IAAI,UAAR,IAAsB,iBAAiBuB,IAAjB,CAAsBpB,MAAM,CAACgB,OAAP,EAAtB,CAA1B,EAAmE;IACjElB,QAAQ,GAAG,SAAX;EACD;;EACD,OAAOG,KAAK,CAACG,OAAN,CAAcP,IAArB;AACD,CA7BD;;AA+BAH,MAAM,CAACiE,cAAP,GAAwB,UAAS9D,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EACpD,IAAIJ,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA3B,EAAgC,OAAOI,KAAK,CAACG,OAAN,CAAcP,IAArB;;EAChC,IAAIA,IAAI,IAAI,GAAZ,EAAiB;IACf,IAAI6C,SAAS,CAAC1C,MAAD,CAAb,EAAuB,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB,CAAvB,KACK,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,SAAhB,CAAlB;EACN;;EACD,IAAIH,IAAI,IAAI,MAAZ,EAAoB;IAClB,IAAIqC,IAAI,GAAGlC,MAAM,CAACgB,OAAP,GAAiBmB,WAAjB,EAAX;IACArC,QAAQ,GAAGyC,WAAW,CAACL,IAAD,CAAtB;IACA,IAAI,aAAad,IAAb,CAAkBc,IAAlB,CAAJ,EAA6BpC,QAAQ,GAAG,UAAX;;IAC7B,IAAIA,QAAQ,IAAI,KAAhB,EAAuB;MACrBpB,kBAAkB,CAAC0C,IAAnB,CAAwBc,IAAxB,IAAgCpC,QAAQ,GAAG,UAA3C,GAAwDA,QAAQ,GAAG,MAAnE;IACD;;IACD,OAAOG,KAAK,CAACG,OAAN,CAAcP,IAArB;EACD;;EACD,OAAOH,MAAM,CAAC+D,OAAP,CAAe5D,IAAf,EAAqBG,MAArB,EAA6BC,KAA7B,CAAP;AACD,CAhBD;AAmBA;AACA;AACA;;;AACAP,MAAM,CAACkE,SAAP,GAAmB,UAAS/D,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAC/C,IAAID,MAAM,CAACQ,WAAP,MAAwB,GAAxB,KAAiCX,IAAI,IAAI,GAAR,IAAegD,WAAW,CAAC7C,MAAD,CAA3B,IAAwCH,IAAI,IAAI,GAAhD,IAAuDA,IAAI,IAAI,MAA/D,IACGA,IAAI,IAAI,WADX,IAC0BsB,SAAS,CAACnB,MAAM,CAACgB,OAAP,EAAD,CADnE,CAAJ,EAC4F;IAC1F,OAAOgB,UAAU,CAACnC,IAAD,EAAOG,MAAP,EAAeC,KAAf,CAAjB;EACD;;EACD,IAAIJ,IAAI,IAAI,GAAZ,EAAiB,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,WAAhB,CAAlB;;EACjB,IAAIH,IAAI,IAAI,GAAZ,EAAiB;IACf,IAAIgD,WAAW,CAAC7C,MAAD,CAAf,EAAyB,OAAO4B,UAAU,CAAC3B,KAAD,EAAQD,MAAR,EAAgB,IAAhB,CAAjB,CAAzB,KACK,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,WAAhB,CAAlB;EACN;;EACD,IAAIH,IAAI,IAAI,MAAR,IAAkB,aAAauB,IAAb,CAAkBpB,MAAM,CAACgB,OAAP,EAAlB,CAAtB,EAA2D;IACzD,OAAOU,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,WAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,MAAZ,EAAoB;IAClBC,QAAQ,GAAGyC,WAAW,CAACvC,MAAM,CAACgB,OAAP,EAAD,CAAtB;;IACA,IAAIlB,QAAQ,IAAI,eAAhB,EAAiC;MAC/BA,QAAQ,GAAG,SAAX;MACA,OAAO4B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,WAAhB,CAAlB;IACD;EACF;;EACD,IAAI,+CAA+CoB,IAA/C,CAAoDvB,IAApD,CAAJ,EAA+D;IAC7D,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB0C,SAAS,CAAC1C,MAAD,CAAT,GAAoB,OAApB,GAA8B,SAA9C,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,OAAZ,EAAqB;IACnB,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;EACD;;EACD,OAAOC,KAAK,CAACG,OAAN,CAAcP,IAArB;AACD,CA3BD;AA8BA;AACA;AACA;;;AACAH,MAAM,CAACmE,aAAP,GAAuB,UAAShE,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EACnD,IAAIJ,IAAI,IAAI,GAAZ,EAAiB+B,UAAU,CAAC3B,KAAD,EAAQD,MAAR,CAAV,IAA6B0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAxC;;EACjB,IAAIH,IAAI,IAAI,GAAZ,EAAiB;IACf,IAAIG,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,iCAApB,KACCH,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,YAApB,KAAqCgB,SAAS,CAAC6B,eAAe,CAAChD,MAAD,CAAhB,CADnD,EAC+E;MAC7E,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;IACD;;IACD,IAAI,CAACA,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,aAApB,CAAD,IACAH,MAAM,CAACG,KAAP,CAAa,UAAb,EAAwB,KAAxB,CADJ,EACoC;MAClC,OAAOuB,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,EAAyB,CAAzB,CAAlB;IACD;;IACD,OAAO0B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,OAAhB,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,eAAZ,EAA6B;IAC3B,OAAO6B,WAAW,CAACzB,KAAD,EAAQD,MAAR,EAAgB,cAAhB,EAAgC,CAAhC,CAAlB;EACD;;EACD,IAAIH,IAAI,IAAI,MAAZ,EAAoB;IAClBC,QAAQ,GAAGyC,WAAW,CAACvC,MAAM,CAACgB,OAAP,EAAD,CAAtB;IACA,IAAIlB,QAAQ,IAAI,KAAhB,EAAuBA,QAAQ,GAAG,MAAX;EACxB;;EACD,OAAOG,KAAK,CAACG,OAAN,CAAcP,IAArB;AACD,CArBD;AAwBA;AACA;AACA;;;AACAH,MAAM,CAACoE,MAAP,GAAgB,UAASjE,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAC5C,IAAIJ,IAAI,IAAI,GAAR,IAAeA,IAAI,IAAI,GAA3B,EAAgC,OAAO,QAAP;EAChC,IAAIA,IAAI,IAAI,GAAZ,EAAiB,OAAO+B,UAAU,CAAC3B,KAAD,EAAQD,MAAR,CAAjB;;EACjB,IAAIH,IAAI,IAAI,MAAZ,EAAoB;IAClBC,QAAQ,GAAGyC,WAAW,CAACvC,MAAM,CAACgB,OAAP,EAAD,CAAtB;IACA,OAAO,QAAP;EACD;;EACD,OAAOY,UAAU,CAAC3B,KAAD,EAAQD,MAAR,CAAjB;AACD,CARD;AAWA;AACA;AACA;;;AACAN,MAAM,CAACqE,YAAP,GAAsB,UAASlE,IAAT,EAAeG,MAAf,EAAuBC,KAAvB,EAA8B;EAClD,IAAIJ,IAAI,IAAI,QAAR,IAAoBA,IAAI,IAAI,GAA5B,IAAmCA,IAAI,IAAI,GAA3C,IAAkDG,MAAM,CAACgB,OAAP,GAAiBb,KAAjB,CAAuB,UAAvB,CAAtD,EAA0F;IACxF,IAAIH,MAAM,CAACgB,OAAP,GAAiBb,KAAjB,CAAuB,YAAvB,CAAJ,EAA0CL,QAAQ,GAAG,UAAX;IAC1C,OAAO,cAAP;EACD;;EACD,OAAOkC,UAAU,CAACnC,IAAD,EAAOG,MAAP,EAAeC,KAAf,CAAjB;AACD,CAND;;AAQA,OAAO,MAAM+D,MAAM,GAAG;EACpBC,UAAU,EAAE,YAAW;IACrB,OAAO;MACLtD,QAAQ,EAAE,IADL;MAELV,KAAK,EAAE,OAFF;MAGLG,OAAO,EAAE,IAAIoB,OAAJ,CAAY,OAAZ,EAAqB,CAArB,EAAwB,IAAxB;IAHJ,CAAP;EAKD,CAPmB;EAQpB0C,KAAK,EAAE,UAASlE,MAAT,EAAiBC,KAAjB,EAAwB;IAC7B,IAAI,CAACA,KAAK,CAACU,QAAP,IAAmBX,MAAM,CAACmE,QAAP,EAAvB,EAA0C,OAAO,IAAP;IAC1CvE,KAAK,GAAG,CAACK,KAAK,CAACU,QAAN,IAAkBZ,SAAnB,EAA8BC,MAA9B,EAAsCC,KAAtC,CAAR;;IACA,IAAIL,KAAK,IAAI,OAAOA,KAAP,IAAgB,QAA7B,EAAuC;MACrCC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAZ;MACAA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAb;IACD;;IACDE,QAAQ,GAAGF,KAAX;IACAK,KAAK,CAACA,KAAN,GAAcP,MAAM,CAACO,KAAK,CAACA,KAAP,CAAN,CAAoBJ,IAApB,EAA0BG,MAA1B,EAAkCC,KAAlC,CAAd;IACA,OAAOH,QAAP;EACD,CAlBmB;EAmBpBS,MAAM,EAAE,UAASN,KAAT,EAAgBmE,SAAhB,EAA2BC,GAA3B,EAAgC;IACtC,IAAIC,EAAE,GAAGrE,KAAK,CAACG,OAAf;IAAA,IACIT,EAAE,GAAGyE,SAAS,IAAIA,SAAS,CAAChB,MAAV,CAAiB,CAAjB,CADtB;IAAA,IAEI7C,MAAM,GAAG+D,EAAE,CAAC/D,MAFhB;IAAA,IAGIgE,aAAa,GAAGvB,eAAe,CAACoB,SAAD,CAHnC;IAAA,IAIII,UAAU,GAAGH,GAAG,CAACG,UAAJ,CAAeH,GAAG,CAACI,GAAnB,CAJjB;IAAA,IAKIC,iBAAiB,GAAGzE,KAAK,CAACG,OAAN,CAAcqB,IAAd,GAAqBxB,KAAK,CAACG,OAAN,CAAcqB,IAAd,CAAmBpB,IAAnB,CAAwBC,SAA7C,GAAyD,EALjF;IAAA,IAMIqE,cAAc,GAAG1E,KAAK,CAACG,OAAN,CAAcqB,IAAd,GAAqBxB,KAAK,CAACG,OAAN,CAAcqB,IAAd,CAAmBpB,IAAnB,CAAwBE,MAA7C,GAAsDiE,UAN3E;;IAQA,IAAIF,EAAE,CAAC7C,IAAH,KACC9B,EAAE,IAAI,GAAN,KAAc2E,EAAE,CAACzE,IAAH,IAAW,OAAX,IAAsByE,EAAE,CAACzE,IAAH,IAAW,SAAjC,IAA8CyE,EAAE,CAACzE,IAAH,IAAW,WAAvE,KACAF,EAAE,IAAI,GAAN,KAAc2E,EAAE,CAACzE,IAAH,IAAW,QAAX,IAAuByE,EAAE,CAACzE,IAAH,IAAW,gBAAhD,CADA,IAEAF,EAAE,IAAI,GAAN,IAAc2E,EAAE,CAACzE,IAAH,IAAW,IAH1B,CAAJ,EAGsC;MACpCU,MAAM,GAAG+D,EAAE,CAAC/D,MAAH,GAAY8D,GAAG,CAACO,IAAzB;IACD,CALD,MAKO,IAAI,CAAE,OAAOxD,IAAP,CAAYzB,EAAZ,CAAN,EAAwB;MAC7B,IAAI,UAAUyB,IAAV,CAAezB,EAAf,KACA,MAAMyB,IAAN,CAAWgD,SAAX,CADA,IAEV,gBAAgBhD,IAAhB,CAAqBgD,SAArB,CAFU,IAGA,WAAWhD,IAAX,CAAgBsD,iBAAhB,CAHA,IAIA,sCAAsCtD,IAAtC,CAA2CgD,SAA3C,CAJA,IAKV,yBAAyBhD,IAAzB,CAA8BgD,SAA9B,CALU,IAMV,UAAUhD,IAAV,CAAegD,SAAf,CANU,IAOI/B,WAAW,CAACkC,aAAD,CAPnB,EAOoC;QAC9BhE,MAAM,GAAGiE,UAAT;MACD,CATL,MASW,IAAI,6BAA6BpD,IAA7B,CAAkCzB,EAAlC,KAAyCwB,SAAS,CAACoD,aAAD,CAAtD,EAAuE;QAChF,IAAI,SAASnD,IAAT,CAAcsD,iBAAd,CAAJ,EAAsC;UACpCnE,MAAM,GAAGoE,cAAT;QACD,CAFD,MAEO,IAAI,CAAC1E,KAAK,CAAC6C,GAAN,EAAD,KAAiB,6BAA6B1B,IAA7B,CAAkCsD,iBAAlC,KAAwDvD,SAAS,CAACuD,iBAAD,CAAlF,CAAJ,EAA4G;UACjHnE,MAAM,GAAGiE,UAAU,IAAIG,cAAd,GAA+BA,cAA/B,GAAgDA,cAAc,GAAGN,GAAG,CAACO,IAA9E;QACD,CAFM,MAEA;UACLrE,MAAM,GAAGiE,UAAT;QACD;MACF,CARU,MAQJ,IAAI,CAAC,QAAQpD,IAAR,CAAagD,SAAb,CAAD,KAA6B9B,kBAAkB,CAACiC,aAAD,CAAlB,IAAqCnC,cAAc,CAACmC,aAAD,CAAhF,CAAJ,EAAsG;QAC3G,IAAIlC,WAAW,CAACqC,iBAAD,CAAf,EAAoC;UAClCnE,MAAM,GAAGiE,UAAU,IAAIG,cAAd,GAA+BA,cAA/B,GAAgDA,cAAc,GAAGN,GAAG,CAACO,IAA9E;QACD,CAFD,MAEO,IAAI,MAAMxD,IAAN,CAAWsD,iBAAX,CAAJ,EAAmC;UACxCnE,MAAM,GAAGiE,UAAU,IAAIG,cAAd,GAA+BH,UAA/B,GAA4CG,cAAc,GAAGN,GAAG,CAACO,IAA1E;QACD,CAFM,MAEA,IAAItC,kBAAkB,CAACoC,iBAAD,CAAlB,IAAyCtC,cAAc,CAACsC,iBAAD,CAA3D,EAAgF;UACrFnE,MAAM,GAAGiE,UAAU,IAAIG,cAAd,GAA+BA,cAA/B,GAAgDH,UAAzD;QACD,CAFM,MAEA,IAAI,mCAAmCpD,IAAnC,CAAwCsD,iBAAxC,KACA,QAAQtD,IAAR,CAAasD,iBAAb,CADA,IAEAvD,SAAS,CAACuD,iBAAD,CAFT,IAGA,qBAAqBtD,IAArB,CAA0BsD,iBAA1B,CAHJ,EAGkD;UACvDnE,MAAM,GAAGoE,cAAc,GAAGN,GAAG,CAACO,IAA9B;QACD,CALM,MAKA;UACLrE,MAAM,GAAGiE,UAAT;QACD;MACF;IACF;;IACD,OAAOjE,MAAP;EACD,CArEmB;EAsEpBsE,YAAY,EAAE;IACZC,aAAa,EAAE,SADH;IAEZC,aAAa,EAAE;MAAC1E,IAAI,EAAE,IAAP;MAAa8C,KAAK,EAAE;QAAC6B,IAAI,EAAE,IAAP;QAAaC,KAAK,EAAE;MAApB;IAApB,CAFH;IAGZC,YAAY,EAAE1H;EAHF;AAtEM,CAAf"},"metadata":{},"sourceType":"module"}