{"ast":null,"code":"/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('='); // skip things that don't look like key=value\n\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim();\n    var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values\n\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    } // only assign once\n\n\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}","map":{"version":3,"names":["exports","parse","serialize","decode","decodeURIComponent","encode","encodeURIComponent","pairSplitRegExp","fieldContentRegExp","str","options","TypeError","obj","opt","pairs","split","dec","i","length","pair","eq_idx","indexOf","key","substr","trim","val","slice","undefined","tryDecode","name","enc","test","value","maxAge","isNaN","Error","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","e"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/cookie/index.js"],"sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}