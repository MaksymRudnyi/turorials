{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\nmodule.exports = Duplex;\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) keys.push(key);\n\n  return keys;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\nforEach(objectKeys(Writable.prototype), function (method) {\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  if (options && options.readable === false) this.readable = false;\n  if (options && options.writable === false) this.writable = false;\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n  this.once('end', onend);\n} // the no-half-open enforcer\n\n\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}","map":{"version":3,"names":["module","exports","Duplex","objectKeys","Object","keys","obj","key","push","util","require","inherits","Readable","Writable","forEach","prototype","method","options","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","process","nextTick","end","bind","xs","f","i","l","length"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/readable-stream/lib/_stream_duplex.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA;;AACA,IAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,IAAe,UAAUC,GAAV,EAAe;EAC7C,IAAID,IAAI,GAAG,EAAX;;EACA,KAAK,IAAIE,GAAT,IAAgBD,GAAhB,EAAqBD,IAAI,CAACG,IAAL,CAAUD,GAAV;;EACrB,OAAOF,IAAP;AACD,CAJD;AAKA;;AAGA;;;AACA,IAAII,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AACAD,IAAI,CAACE,QAAL,GAAgBD,OAAO,CAAC,UAAD,CAAvB;AACA;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,oBAAD,CAAtB;;AAEAD,IAAI,CAACE,QAAL,CAAcT,MAAd,EAAsBU,QAAtB;AAEAE,OAAO,CAACX,UAAU,CAACU,QAAQ,CAACE,SAAV,CAAX,EAAiC,UAASC,MAAT,EAAiB;EACvD,IAAI,CAACd,MAAM,CAACa,SAAP,CAAiBC,MAAjB,CAAL,EACEd,MAAM,CAACa,SAAP,CAAiBC,MAAjB,IAA2BH,QAAQ,CAACE,SAAT,CAAmBC,MAAnB,CAA3B;AACH,CAHM,CAAP;;AAKA,SAASd,MAAT,CAAgBe,OAAhB,EAAyB;EACvB,IAAI,EAAE,gBAAgBf,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,CAAWe,OAAX,CAAP;EAEFL,QAAQ,CAACM,IAAT,CAAc,IAAd,EAAoBD,OAApB;EACAJ,QAAQ,CAACK,IAAT,CAAc,IAAd,EAAoBD,OAApB;EAEA,IAAIA,OAAO,IAAIA,OAAO,CAACE,QAAR,KAAqB,KAApC,EACE,KAAKA,QAAL,GAAgB,KAAhB;EAEF,IAAIF,OAAO,IAAIA,OAAO,CAACG,QAAR,KAAqB,KAApC,EACE,KAAKA,QAAL,GAAgB,KAAhB;EAEF,KAAKC,aAAL,GAAqB,IAArB;EACA,IAAIJ,OAAO,IAAIA,OAAO,CAACI,aAAR,KAA0B,KAAzC,EACE,KAAKA,aAAL,GAAqB,KAArB;EAEF,KAAKC,IAAL,CAAU,KAAV,EAAiBC,KAAjB;AACD,C,CAED;;;AACA,SAASA,KAAT,GAAiB;EACf;EACA;EACA,IAAI,KAAKF,aAAL,IAAsB,KAAKG,cAAL,CAAoBC,KAA9C,EACE,OAJa,CAMf;EACA;;EACAC,OAAO,CAACC,QAAR,CAAiB,KAAKC,GAAL,CAASC,IAAT,CAAc,IAAd,CAAjB;AACD;;AAED,SAASf,OAAT,CAAkBgB,EAAlB,EAAsBC,CAAtB,EAAyB;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,EAAE,CAACI,MAAvB,EAA+BF,CAAC,GAAGC,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;IACzCD,CAAC,CAACD,EAAE,CAACE,CAAD,CAAH,EAAQA,CAAR,CAAD;EACD;AACF"},"metadata":{},"sourceType":"script"}