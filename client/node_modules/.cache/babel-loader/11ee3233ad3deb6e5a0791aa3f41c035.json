{"ast":null,"code":"function wordSet(words) {\n  var set = {};\n\n  for (var i = 0; i < words.length; i++) set[words[i]] = true;\n\n  return set;\n}\n\nvar keywords = wordSet([\"_\", \"var\", \"let\", \"actor\", \"class\", \"enum\", \"extension\", \"import\", \"protocol\", \"struct\", \"func\", \"typealias\", \"associatedtype\", \"open\", \"public\", \"internal\", \"fileprivate\", \"private\", \"deinit\", \"init\", \"new\", \"override\", \"self\", \"subscript\", \"super\", \"convenience\", \"dynamic\", \"final\", \"indirect\", \"lazy\", \"required\", \"static\", \"unowned\", \"unowned(safe)\", \"unowned(unsafe)\", \"weak\", \"as\", \"is\", \"break\", \"case\", \"continue\", \"default\", \"else\", \"fallthrough\", \"for\", \"guard\", \"if\", \"in\", \"repeat\", \"switch\", \"where\", \"while\", \"defer\", \"return\", \"inout\", \"mutating\", \"nonmutating\", \"isolated\", \"nonisolated\", \"catch\", \"do\", \"rethrows\", \"throw\", \"throws\", \"async\", \"await\", \"try\", \"didSet\", \"get\", \"set\", \"willSet\", \"assignment\", \"associativity\", \"infix\", \"left\", \"none\", \"operator\", \"postfix\", \"precedence\", \"precedencegroup\", \"prefix\", \"right\", \"Any\", \"AnyObject\", \"Type\", \"dynamicType\", \"Self\", \"Protocol\", \"__COLUMN__\", \"__FILE__\", \"__FUNCTION__\", \"__LINE__\"]);\nvar definingKeywords = wordSet([\"var\", \"let\", \"actor\", \"class\", \"enum\", \"extension\", \"import\", \"protocol\", \"struct\", \"func\", \"typealias\", \"associatedtype\", \"for\"]);\nvar atoms = wordSet([\"true\", \"false\", \"nil\", \"self\", \"super\", \"_\"]);\nvar types = wordSet([\"Array\", \"Bool\", \"Character\", \"Dictionary\", \"Double\", \"Float\", \"Int\", \"Int8\", \"Int16\", \"Int32\", \"Int64\", \"Never\", \"Optional\", \"Set\", \"String\", \"UInt8\", \"UInt16\", \"UInt32\", \"UInt64\", \"Void\"]);\nvar operators = \"+-/*%=|&<>~^?!\";\nvar punc = \":;,.(){}[]\";\nvar binary = /^\\-?0b[01][01_]*/;\nvar octal = /^\\-?0o[0-7][0-7_]*/;\nvar hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/;\nvar decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/;\nvar identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/;\nvar property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/;\nvar instruction = /^\\#[A-Za-z]+/;\nvar attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/; //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\nfunction tokenBase(stream, state, prev) {\n  if (stream.sol()) state.indented = stream.indentation();\n  if (stream.eatSpace()) return null;\n  var ch = stream.peek();\n\n  if (ch == \"/\") {\n    if (stream.match(\"//\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (stream.match(\"/*\")) {\n      state.tokenize.push(tokenComment);\n      return tokenComment(stream, state);\n    }\n  }\n\n  if (stream.match(instruction)) return \"builtin\";\n  if (stream.match(attribute)) return \"attribute\";\n  if (stream.match(binary)) return \"number\";\n  if (stream.match(octal)) return \"number\";\n  if (stream.match(hexadecimal)) return \"number\";\n  if (stream.match(decimal)) return \"number\";\n  if (stream.match(property)) return \"property\";\n\n  if (operators.indexOf(ch) > -1) {\n    stream.next();\n    return \"operator\";\n  }\n\n  if (punc.indexOf(ch) > -1) {\n    stream.next();\n    stream.match(\"..\");\n    return \"punctuation\";\n  }\n\n  var stringMatch;\n\n  if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n    var tokenize = tokenString.bind(null, stringMatch[0]);\n    state.tokenize.push(tokenize);\n    return tokenize(stream, state);\n  }\n\n  if (stream.match(identifier)) {\n    var ident = stream.current();\n    if (types.hasOwnProperty(ident)) return \"type\";\n    if (atoms.hasOwnProperty(ident)) return \"atom\";\n\n    if (keywords.hasOwnProperty(ident)) {\n      if (definingKeywords.hasOwnProperty(ident)) state.prev = \"define\";\n      return \"keyword\";\n    }\n\n    if (prev == \"define\") return \"def\";\n    return \"variable\";\n  }\n\n  stream.next();\n  return null;\n}\n\nfunction tokenUntilClosingParen() {\n  var depth = 0;\n  return function (stream, state, prev) {\n    var inner = tokenBase(stream, state, prev);\n\n    if (inner == \"punctuation\") {\n      if (stream.current() == \"(\") ++depth;else if (stream.current() == \")\") {\n        if (depth == 0) {\n          stream.backUp(1);\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length - 1](stream, state);\n        } else --depth;\n      }\n    }\n\n    return inner;\n  };\n}\n\nfunction tokenString(openQuote, stream, state) {\n  var singleLine = openQuote.length == 1;\n  var ch,\n      escaped = false;\n\n  while (ch = stream.peek()) {\n    if (escaped) {\n      stream.next();\n\n      if (ch == \"(\") {\n        state.tokenize.push(tokenUntilClosingParen());\n        return \"string\";\n      }\n\n      escaped = false;\n    } else if (stream.match(openQuote)) {\n      state.tokenize.pop();\n      return \"string\";\n    } else {\n      stream.next();\n      escaped = ch == \"\\\\\";\n    }\n  }\n\n  if (singleLine) {\n    state.tokenize.pop();\n  }\n\n  return \"string\";\n}\n\nfunction tokenComment(stream, state) {\n  var ch;\n\n  while (true) {\n    stream.match(/^[^/*]+/, true);\n    ch = stream.next();\n    if (!ch) break;\n\n    if (ch === \"/\" && stream.eat(\"*\")) {\n      state.tokenize.push(tokenComment);\n    } else if (ch === \"*\" && stream.eat(\"/\")) {\n      state.tokenize.pop();\n    }\n  }\n\n  return \"comment\";\n}\n\nfunction Context(prev, align, indented) {\n  this.prev = prev;\n  this.align = align;\n  this.indented = indented;\n}\n\nfunction pushContext(state, stream) {\n  var align = stream.match(/^\\s*($|\\/[\\/\\*]|[)}\\]])/, false) ? null : stream.column() + 1;\n  state.context = new Context(state.context, align, state.indented);\n}\n\nfunction popContext(state) {\n  if (state.context) {\n    state.indented = state.context.indented;\n    state.context = state.context.prev;\n  }\n}\n\nexport const swift = {\n  startState: function () {\n    return {\n      prev: null,\n      context: null,\n      indented: 0,\n      tokenize: []\n    };\n  },\n  token: function (stream, state) {\n    var prev = state.prev;\n    state.prev = null;\n    var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase;\n    var style = tokenize(stream, state, prev);\n    if (!style || style == \"comment\") state.prev = prev;else if (!state.prev) state.prev = style;\n\n    if (style == \"punctuation\") {\n      var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current());\n      if (bracket) (bracket[1] ? popContext : pushContext)(state, stream);\n    }\n\n    return style;\n  },\n  indent: function (state, textAfter, iCx) {\n    var cx = state.context;\n    if (!cx) return 0;\n    var closing = /^[\\]\\}\\)]/.test(textAfter);\n    if (cx.align != null) return cx.align - (closing ? 1 : 0);\n    return cx.indented + (closing ? 0 : iCx.unit);\n  },\n  languageData: {\n    indentOnInput: /^\\s*[\\)\\}\\]]$/,\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    },\n    closeBrackets: {\n      brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]\n    }\n  }\n};","map":{"version":3,"names":["wordSet","words","set","i","length","keywords","definingKeywords","atoms","types","operators","punc","binary","octal","hexadecimal","decimal","identifier","property","instruction","attribute","tokenBase","stream","state","prev","sol","indented","indentation","eatSpace","ch","peek","match","skipToEnd","tokenize","push","tokenComment","indexOf","next","stringMatch","tokenString","bind","ident","current","hasOwnProperty","tokenUntilClosingParen","depth","inner","backUp","pop","openQuote","singleLine","escaped","eat","Context","align","pushContext","column","context","popContext","swift","startState","token","style","bracket","exec","indent","textAfter","iCx","cx","closing","test","unit","languageData","indentOnInput","commentTokens","line","block","open","close","closeBrackets","brackets"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/swift.js"],"sourcesContent":["function wordSet(words) {\n  var set = {}\n  for (var i = 0; i < words.length; i++) set[words[i]] = true\n  return set\n}\n\nvar keywords = wordSet([\"_\",\"var\",\"let\",\"actor\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\n                        \"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\n                        \"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\n                        \"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\n                        \"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"isolated\",\"nonisolated\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"async\",\"await\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\n                        \"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\n                        \"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"])\nvar definingKeywords = wordSet([\"var\",\"let\",\"actor\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"])\nvar atoms = wordSet([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"])\nvar types = wordSet([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\n                     \"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"])\nvar operators = \"+-/*%=|&<>~^?!\"\nvar punc = \":;,.(){}[]\"\nvar binary = /^\\-?0b[01][01_]*/\nvar octal = /^\\-?0o[0-7][0-7_]*/\nvar hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/\nvar decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/\nvar identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/\nvar property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\nvar instruction = /^\\#[A-Za-z]+/\nvar attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n//var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\nfunction tokenBase(stream, state, prev) {\n  if (stream.sol()) state.indented = stream.indentation()\n  if (stream.eatSpace()) return null\n\n  var ch = stream.peek()\n  if (ch == \"/\") {\n    if (stream.match(\"//\")) {\n      stream.skipToEnd()\n      return \"comment\"\n    }\n    if (stream.match(\"/*\")) {\n      state.tokenize.push(tokenComment)\n      return tokenComment(stream, state)\n    }\n  }\n  if (stream.match(instruction)) return \"builtin\"\n  if (stream.match(attribute)) return \"attribute\"\n  if (stream.match(binary)) return \"number\"\n  if (stream.match(octal)) return \"number\"\n  if (stream.match(hexadecimal)) return \"number\"\n  if (stream.match(decimal)) return \"number\"\n  if (stream.match(property)) return \"property\"\n  if (operators.indexOf(ch) > -1) {\n    stream.next()\n    return \"operator\"\n  }\n  if (punc.indexOf(ch) > -1) {\n    stream.next()\n    stream.match(\"..\")\n    return \"punctuation\"\n  }\n  var stringMatch\n  if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n    var tokenize = tokenString.bind(null, stringMatch[0])\n    state.tokenize.push(tokenize)\n    return tokenize(stream, state)\n  }\n\n  if (stream.match(identifier)) {\n    var ident = stream.current()\n    if (types.hasOwnProperty(ident)) return \"type\"\n    if (atoms.hasOwnProperty(ident)) return \"atom\"\n    if (keywords.hasOwnProperty(ident)) {\n      if (definingKeywords.hasOwnProperty(ident))\n        state.prev = \"define\"\n      return \"keyword\"\n    }\n    if (prev == \"define\") return \"def\"\n    return \"variable\"\n  }\n\n  stream.next()\n  return null\n}\n\nfunction tokenUntilClosingParen() {\n  var depth = 0\n  return function(stream, state, prev) {\n    var inner = tokenBase(stream, state, prev)\n    if (inner == \"punctuation\") {\n      if (stream.current() == \"(\") ++depth\n      else if (stream.current() == \")\") {\n        if (depth == 0) {\n          stream.backUp(1)\n          state.tokenize.pop()\n          return state.tokenize[state.tokenize.length - 1](stream, state)\n        }\n        else --depth\n      }\n    }\n    return inner\n  }\n}\n\nfunction tokenString(openQuote, stream, state) {\n  var singleLine = openQuote.length == 1\n  var ch, escaped = false\n  while (ch = stream.peek()) {\n    if (escaped) {\n      stream.next()\n      if (ch == \"(\") {\n        state.tokenize.push(tokenUntilClosingParen())\n        return \"string\"\n      }\n      escaped = false\n    } else if (stream.match(openQuote)) {\n      state.tokenize.pop()\n      return \"string\"\n    } else {\n      stream.next()\n      escaped = ch == \"\\\\\"\n    }\n  }\n  if (singleLine) {\n    state.tokenize.pop()\n  }\n  return \"string\"\n}\n\nfunction tokenComment(stream, state) {\n  var ch\n  while (true) {\n    stream.match(/^[^/*]+/, true)\n    ch = stream.next()\n    if (!ch) break\n    if (ch === \"/\" && stream.eat(\"*\")) {\n      state.tokenize.push(tokenComment)\n    } else if (ch === \"*\" && stream.eat(\"/\")) {\n      state.tokenize.pop()\n    }\n  }\n  return \"comment\"\n}\n\nfunction Context(prev, align, indented) {\n  this.prev = prev\n  this.align = align\n  this.indented = indented\n}\n\nfunction pushContext(state, stream) {\n  var align = stream.match(/^\\s*($|\\/[\\/\\*]|[)}\\]])/, false) ? null : stream.column() + 1\n  state.context = new Context(state.context, align, state.indented)\n}\n\nfunction popContext(state) {\n  if (state.context) {\n    state.indented = state.context.indented\n    state.context = state.context.prev\n  }\n}\n\nexport const swift = {\n  startState: function() {\n    return {\n      prev: null,\n      context: null,\n      indented: 0,\n      tokenize: []\n    }\n  },\n\n  token: function(stream, state) {\n    var prev = state.prev\n    state.prev = null\n    var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase\n    var style = tokenize(stream, state, prev)\n    if (!style || style == \"comment\") state.prev = prev\n    else if (!state.prev) state.prev = style\n\n    if (style == \"punctuation\") {\n      var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current())\n      if (bracket) (bracket[1] ? popContext : pushContext)(state, stream)\n    }\n\n    return style\n  },\n\n  indent: function(state, textAfter, iCx) {\n    var cx = state.context\n    if (!cx) return 0\n    var closing = /^[\\]\\}\\)]/.test(textAfter)\n    if (cx.align != null) return cx.align - (closing ? 1 : 0)\n    return cx.indented + (closing ? 0 : iCx.unit)\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[\\)\\}\\]]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]}\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}