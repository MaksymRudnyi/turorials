{"ast":null,"code":"import React, { useEffect, useMemo, useRef } from 'react';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DragBar = props => {\n  var {\n    prefixCls,\n    onChange\n  } = props || {};\n  var dragRef = useRef();\n\n  function handleMouseMove(event) {\n    if (dragRef.current) {\n      var newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n\n  function handleMouseDown(event) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY\n    };\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      if (document) {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var svg = useMemo(() => /*#__PURE__*/_jsx(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n    })\n  }), []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: prefixCls + \"-bar\",\n    onMouseDown: handleMouseDown,\n    children: svg\n  });\n};\n\nexport default DragBar;","map":{"version":3,"sources":["../../../src/components/DragBar/index.tsx"],"names":["DragBar","props","onChange","dragRef","useRef","newHeight","event","height","dragY","clientY","useEffect","document","svg","useMemo","prefixCls"],"mappings":"AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,OAAA,EAAA,MAAA,QAAA,OAAA;AAEA,OAAA,aAAA;;;AASA,IAAMA,OAAgC,GAAIC,KAAD,IAAW;EAClD,IAAM;IAAA,SAAA;IAAaC;EAAb,IAA0BD,KAAK,IAArC,EAAA;EACA,IAAME,OAAO,GAAGC,MAAhB,EAAA;;EACA,SAAA,eAAA,CAAA,KAAA,EAA4C;IAC1C,IAAID,OAAO,CAAX,OAAA,EAAqB;MACnB,IAAME,SAAS,GAAGF,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,GAAyBG,KAAK,CAA9BH,OAAAA,GAAyCA,OAAO,CAAPA,OAAAA,CAA3D,KAAA;;MACA,IAAIE,SAAS,IAAIJ,KAAK,CAAlBI,SAAAA,IAAgCA,SAAS,IAAIJ,KAAK,CAAtD,SAAA,EAAkE;QAChEC,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,IAA0BG,KAAK,CAALA,OAAAA,GAAgBH,OAAO,CAAPA,OAAAA,CAA/DD,KAAqBC,CAAD,CAApBD;MACD;IACF;EACF;;EACD,SAAA,aAAA,GAAyB;IACvBC,OAAO,CAAPA,OAAAA,GAAAA,SAAAA;EACD;;EACD,SAAA,eAAA,CAAA,KAAA,EAA8E;IAC5EA,OAAO,CAAPA,OAAAA,GAAkB;MAChBI,MAAM,EAAEN,KAAK,CADG,MAAA;MAEhBO,KAAK,EAAEF,KAAK,CAACG;IAFG,CAAlBN;EAID;;EAEDO,SAAS,CAAC,MAAM;IACd,IAAA,QAAA,EAAc;MACZC,QAAQ,CAARA,gBAAAA,CAAAA,WAAAA,EAAAA,eAAAA;MACAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;IACD;;IACD,OAAO,MAAM;MACX,IAAA,QAAA,EAAc;QACZA,QAAQ,CAARA,mBAAAA,CAAAA,WAAAA,EAAAA,eAAAA;QACAA,QAAQ,CAARA,mBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;MACD;IATW,CAKd,CALc,CAWd;EAXO,CAAA,EAATD,EAAS,CAATA;EAaA,IAAME,GAAG,GAAGC,OAAO,CACjB,MAAA,aACE,IAAA,CAAA,KAAA,EAAA;IAAK,OAAO,EAAZ,aAAA;IAA2B,MAAM,EAAjC,MAAA;IAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;MACE,IAAI,EADN,cAAA;MAEE,CAAC,EAAC;IAFJ,CAAA;EADF,CAAA,CAFe,EAAnB,EAAmB,CAAnB;EAWA,OAAA,aACE,IAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAKC,SAAL,GAAd,MAAA;IAAoC,WAAW,EAA/C,eAAA;IAAA,QAAA,EACGF;EADH,CAAA,CADF;AA7CF,CAAA;;AAoDA,eAAA,OAAA","sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { IProps } from '../../Editor';\nimport './index.less';\n\nexport interface IDragBarProps extends IProps {\n  height: number;\n  maxHeight: number;\n  minHeight: number;\n  onChange: (value: number) => void;\n}\n\nconst DragBar: React.FC<IDragBarProps> = (props) => {\n  const { prefixCls, onChange } = props || {};\n  const dragRef = useRef<{ height: number; dragY: number }>();\n  function handleMouseMove(event: MouseEvent) {\n    if (dragRef.current) {\n      const newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY,\n    };\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      if (document) {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const svg = useMemo(\n    () => (\n      <svg viewBox=\"0 0 512 512\" height=\"100%\">\n        <path\n          fill=\"currentColor\"\n          d=\"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n        />\n      </svg>\n    ),\n    [],\n  );\n  return (\n    <div className={`${prefixCls}-bar`} onMouseDown={handleMouseDown}>\n      {svg}\n    </div>\n  );\n};\n\nexport default DragBar;\n"]},"metadata":{},"sourceType":"module"}