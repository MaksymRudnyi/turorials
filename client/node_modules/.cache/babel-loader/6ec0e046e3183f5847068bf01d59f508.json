{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nsolidity.displayName = 'solidity';\nsolidity.aliases = ['sol'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function solidity(Prism) {\n  Prism.register(refractorClike);\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern: /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  });\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin: /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  });\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  });\n  Prism.languages.sol = Prism.languages.solidity;\n}","map":{"version":3,"names":["refractorClike","solidity","displayName","aliases","Prism","register","languages","extend","pattern","lookbehind","keyword","operator","insertBefore","builtin","version","alias","sol"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/solidity.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\n\n/** @type {import('../core.js').Syntax} */\nexport default function solidity(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,CAAC,KAAD,CAAnB;AAEA;;AACA,eAAe,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;EACtCA,KAAK,CAACC,QAAN,CAAeL,cAAf;EACAI,KAAK,CAACE,SAAN,CAAgBL,QAAhB,GAA2BG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;IACzD,cAAc;MACZC,OAAO,EACL,yEAFU;MAGZC,UAAU,EAAE;IAHA,CAD2C;IAMzDC,OAAO,EACL,8YAPuD;IAQzDC,QAAQ,EAAE;EAR+C,CAAhC,CAA3B;EAUAP,KAAK,CAACE,SAAN,CAAgBM,YAAhB,CAA6B,UAA7B,EAAyC,SAAzC,EAAoD;IAClDC,OAAO,EACL;EAFgD,CAApD;EAIAT,KAAK,CAACE,SAAN,CAAgBM,YAAhB,CAA6B,UAA7B,EAAyC,QAAzC,EAAmD;IACjDE,OAAO,EAAE;MACPN,OAAO,EAAE,4BADF;MAEPC,UAAU,EAAE,IAFL;MAGPM,KAAK,EAAE;IAHA;EADwC,CAAnD;EAOAX,KAAK,CAACE,SAAN,CAAgBU,GAAhB,GAAsBZ,KAAK,CAACE,SAAN,CAAgBL,QAAtC;AACD"},"metadata":{},"sourceType":"module"}