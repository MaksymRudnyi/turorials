{"ast":null,"code":"/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return '';\n  } // Node.\n\n\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  } // Position.\n\n\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  } // Point.\n\n\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  } // ?\n\n\n  return '';\n}\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\n\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\n\n\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\n\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}","map":{"version":3,"names":["stringifyPosition","value","position","point","index","line","column","pos","start","end"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/unist-util-stringify-position/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;EACvC;EACA,IAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;IACvC,OAAO,EAAP;EACD,CAJsC,CAMvC;;;EACA,IAAI,cAAcA,KAAd,IAAuB,UAAUA,KAArC,EAA4C;IAC1C,OAAOC,QAAQ,CAACD,KAAK,CAACC,QAAP,CAAf;EACD,CATsC,CAWvC;;;EACA,IAAI,WAAWD,KAAX,IAAoB,SAASA,KAAjC,EAAwC;IACtC,OAAOC,QAAQ,CAACD,KAAD,CAAf;EACD,CAdsC,CAgBvC;;;EACA,IAAI,UAAUA,KAAV,IAAmB,YAAYA,KAAnC,EAA0C;IACxC,OAAOE,KAAK,CAACF,KAAD,CAAZ;EACD,CAnBsC,CAqBvC;;;EACA,OAAO,EAAP;AACD;AAED;AACA;AACA;AACA;;AACA,SAASE,KAAT,CAAeA,KAAf,EAAsB;EACpB,OAAOC,KAAK,CAACD,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAL,GAA6B,GAA7B,GAAmCD,KAAK,CAACD,KAAK,IAAIA,KAAK,CAACG,MAAhB,CAA/C;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASJ,QAAT,CAAkBK,GAAlB,EAAuB;EACrB,OAAOJ,KAAK,CAACI,GAAG,IAAIA,GAAG,CAACC,KAAZ,CAAL,GAA0B,GAA1B,GAAgCL,KAAK,CAACI,GAAG,IAAIA,GAAG,CAACE,GAAZ,CAA5C;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASL,KAAT,CAAeH,KAAf,EAAsB;EACpB,OAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GAAqCA,KAArC,GAA6C,CAApD;AACD"},"metadata":{},"sourceType":"module"}