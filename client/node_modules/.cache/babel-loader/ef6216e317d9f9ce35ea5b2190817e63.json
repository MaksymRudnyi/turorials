{"ast":null,"code":"(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // 'A' - 'F'\n\n    if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87; // '0' - '9'\n    } else {\n      return c - 48 & 0xf;\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","window","require","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","toArray","Math","ceil","i","j","w","off","strip","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseLength","parseBase","str","end","mul","len","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","b","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","undefined","_strip","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}