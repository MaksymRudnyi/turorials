{"ast":null,"code":"var words = {};\n\nfunction tokenBase(stream) {\n  if (stream.eatSpace()) return null;\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    if (stream.match('fB') || stream.match('fR') || stream.match('fI') || stream.match('u') || stream.match('d') || stream.match('%') || stream.match('&')) {\n      return 'string';\n    }\n\n    if (stream.match('m[')) {\n      stream.skipTo(']');\n      stream.next();\n      return 'string';\n    }\n\n    if (stream.match('s+') || stream.match('s-')) {\n      stream.eatWhile(/[\\d-]/);\n      return 'string';\n    }\n\n    if (stream.match('\\(') || stream.match('*\\(')) {\n      stream.eatWhile(/[\\w-]/);\n      return 'string';\n    }\n\n    return 'string';\n  }\n\n  if (sol && (ch === '.' || ch === '\\'')) {\n    if (stream.eat('\\\\') && stream.eat('\\\"')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n  }\n\n  if (sol && ch === '.') {\n    if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n      return 'attribute';\n    }\n\n    if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n      stream.skipToEnd();\n      return 'quote';\n    }\n\n    if (stream.match(/[A-Z]/) && stream.match(/[A-Z]/) || stream.match(/[a-z]/) && stream.match(/[a-z]/)) {\n      return 'attribute';\n    }\n  }\n\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase)(stream, state);\n}\n\n;\nexport const troff = {\n  startState: function () {\n    return {\n      tokens: []\n    };\n  },\n  token: function (stream, state) {\n    return tokenize(stream, state);\n  }\n};","map":{"version":3,"names":["words","tokenBase","stream","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","hasOwnProperty","tokenize","state","tokens","troff","startState","token"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/troff.js"],"sourcesContent":["var words = {};\n\nfunction tokenBase(stream) {\n  if (stream.eatSpace()) return null;\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    if (stream.match('fB') || stream.match('fR') || stream.match('fI') ||\n        stream.match('u')  || stream.match('d')  ||\n        stream.match('%')  || stream.match('&')) {\n      return 'string';\n    }\n    if (stream.match('m[')) {\n      stream.skipTo(']');\n      stream.next();\n      return 'string';\n    }\n    if (stream.match('s+') || stream.match('s-')) {\n      stream.eatWhile(/[\\d-]/);\n      return 'string';\n    }\n    if (stream.match('\\(') || stream.match('*\\(')) {\n      stream.eatWhile(/[\\w-]/);\n      return 'string';\n    }\n    return 'string';\n  }\n  if (sol && (ch === '.' || ch === '\\'')) {\n    if (stream.eat('\\\\') && stream.eat('\\\"')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n  }\n  if (sol && ch === '.') {\n    if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n      return 'attribute';\n    }\n    if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n      stream.skipToEnd();\n      return 'quote';\n    }\n    if ((stream.match(/[A-Z]/) && stream.match(/[A-Z]/)) || (stream.match(/[a-z]/) && stream.match(/[a-z]/))) {\n      return 'attribute';\n    }\n  }\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase) (stream, state);\n};\n\nexport const troff = {\n  startState: function() {return {tokens:[]};},\n  token: function(stream, state) {\n    return tokenize(stream, state);\n  }\n};\n"],"mappings":"AAAA,IAAIA,KAAK,GAAG,EAAZ;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;EACzB,IAAIA,MAAM,CAACC,QAAP,EAAJ,EAAuB,OAAO,IAAP;EAEvB,IAAIC,GAAG,GAAGF,MAAM,CAACE,GAAP,EAAV;EACA,IAAIC,EAAE,GAAGH,MAAM,CAACI,IAAP,EAAT;;EAEA,IAAID,EAAE,KAAK,IAAX,EAAiB;IACf,IAAIH,MAAM,CAACK,KAAP,CAAa,IAAb,KAAsBL,MAAM,CAACK,KAAP,CAAa,IAAb,CAAtB,IAA4CL,MAAM,CAACK,KAAP,CAAa,IAAb,CAA5C,IACAL,MAAM,CAACK,KAAP,CAAa,GAAb,CADA,IACsBL,MAAM,CAACK,KAAP,CAAa,GAAb,CADtB,IAEAL,MAAM,CAACK,KAAP,CAAa,GAAb,CAFA,IAEsBL,MAAM,CAACK,KAAP,CAAa,GAAb,CAF1B,EAE6C;MAC3C,OAAO,QAAP;IACD;;IACD,IAAIL,MAAM,CAACK,KAAP,CAAa,IAAb,CAAJ,EAAwB;MACtBL,MAAM,CAACM,MAAP,CAAc,GAAd;MACAN,MAAM,CAACI,IAAP;MACA,OAAO,QAAP;IACD;;IACD,IAAIJ,MAAM,CAACK,KAAP,CAAa,IAAb,KAAsBL,MAAM,CAACK,KAAP,CAAa,IAAb,CAA1B,EAA8C;MAC5CL,MAAM,CAACO,QAAP,CAAgB,OAAhB;MACA,OAAO,QAAP;IACD;;IACD,IAAIP,MAAM,CAACK,KAAP,CAAa,IAAb,KAAsBL,MAAM,CAACK,KAAP,CAAa,KAAb,CAA1B,EAA+C;MAC7CL,MAAM,CAACO,QAAP,CAAgB,OAAhB;MACA,OAAO,QAAP;IACD;;IACD,OAAO,QAAP;EACD;;EACD,IAAIL,GAAG,KAAKC,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,IAA1B,CAAP,EAAwC;IACtC,IAAIH,MAAM,CAACQ,GAAP,CAAW,IAAX,KAAoBR,MAAM,CAACQ,GAAP,CAAW,IAAX,CAAxB,EAA0C;MACxCR,MAAM,CAACS,SAAP;MACA,OAAO,SAAP;IACD;EACF;;EACD,IAAIP,GAAG,IAAIC,EAAE,KAAK,GAAlB,EAAuB;IACrB,IAAIH,MAAM,CAACK,KAAP,CAAa,IAAb,KAAsBL,MAAM,CAACK,KAAP,CAAa,IAAb,CAAtB,IAA4CL,MAAM,CAACK,KAAP,CAAa,IAAb,CAAhD,EAAoE;MAClE,OAAO,WAAP;IACD;;IACD,IAAIL,MAAM,CAACK,KAAP,CAAa,KAAb,KAAuBL,MAAM,CAACK,KAAP,CAAa,KAAb,CAAvB,IAA8CL,MAAM,CAACK,KAAP,CAAa,KAAb,CAA9C,IAAqEL,MAAM,CAACK,KAAP,CAAa,KAAb,CAAzE,EAA8F;MAC5FL,MAAM,CAACS,SAAP;MACA,OAAO,OAAP;IACD;;IACD,IAAKT,MAAM,CAACK,KAAP,CAAa,OAAb,KAAyBL,MAAM,CAACK,KAAP,CAAa,OAAb,CAA1B,IAAqDL,MAAM,CAACK,KAAP,CAAa,OAAb,KAAyBL,MAAM,CAACK,KAAP,CAAa,OAAb,CAAlF,EAA0G;MACxG,OAAO,WAAP;IACD;EACF;;EACDL,MAAM,CAACO,QAAP,CAAgB,OAAhB;EACA,IAAIG,GAAG,GAAGV,MAAM,CAACW,OAAP,EAAV;EACA,OAAOb,KAAK,CAACc,cAAN,CAAqBF,GAArB,IAA4BZ,KAAK,CAACY,GAAD,CAAjC,GAAyC,IAAhD;AACD;;AAED,SAASG,QAAT,CAAkBb,MAAlB,EAA0Bc,KAA1B,EAAiC;EAC/B,OAAO,CAACA,KAAK,CAACC,MAAN,CAAa,CAAb,KAAmBhB,SAApB,EAAgCC,MAAhC,EAAwCc,KAAxC,CAAP;AACD;;AAAA;AAED,OAAO,MAAME,KAAK,GAAG;EACnBC,UAAU,EAAE,YAAW;IAAC,OAAO;MAACF,MAAM,EAAC;IAAR,CAAP;EAAoB,CADzB;EAEnBG,KAAK,EAAE,UAASlB,MAAT,EAAiBc,KAAjB,EAAwB;IAC7B,OAAOD,QAAQ,CAACb,MAAD,EAASc,KAAT,CAAf;EACD;AAJkB,CAAd"},"metadata":{},"sourceType":"module"}