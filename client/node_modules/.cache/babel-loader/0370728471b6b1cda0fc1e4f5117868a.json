{"ast":null,"code":"'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\n\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\n\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n  if (typeof sig !== 'object') sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n  if (sig.S instanceof BN) this._S = sig.S;\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;","map":{"version":3,"names":["BN","require","utils","assert","cachedProperty","parseBytes","Signature","eddsa","sig","Array","isArray","R","slice","encodingLength","S","isPoint","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","decodeInt","decodePoint","encodePoint","encodeInt","prototype","toBytes","concat","toHex","encode","toUpperCase","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/elliptic/lib/elliptic/eddsa/signature.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,OAAD,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIE,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,IAAIC,cAAc,GAAGF,KAAK,CAACE,cAA3B;AACA,IAAIC,UAAU,GAAGH,KAAK,CAACG,UAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+B;EAC7B,KAAKD,KAAL,GAAaA,KAAb;EAEA,IAAI,OAAOC,GAAP,KAAe,QAAnB,EACEA,GAAG,GAAGH,UAAU,CAACG,GAAD,CAAhB;;EAEF,IAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;IACtBA,GAAG,GAAG;MACJG,CAAC,EAAEH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,KAAK,CAACM,cAAnB,CADC;MAEJC,CAAC,EAAEN,GAAG,CAACI,KAAJ,CAAUL,KAAK,CAACM,cAAhB;IAFC,CAAN;EAID;;EAEDV,MAAM,CAACK,GAAG,CAACG,CAAJ,IAASH,GAAG,CAACM,CAAd,EAAiB,0BAAjB,CAAN;EAEA,IAAIP,KAAK,CAACQ,OAAN,CAAcP,GAAG,CAACG,CAAlB,CAAJ,EACE,KAAKK,EAAL,GAAUR,GAAG,CAACG,CAAd;EACF,IAAIH,GAAG,CAACM,CAAJ,YAAiBd,EAArB,EACE,KAAKiB,EAAL,GAAUT,GAAG,CAACM,CAAd;EAEF,KAAKI,SAAL,GAAiBT,KAAK,CAACC,OAAN,CAAcF,GAAG,CAACG,CAAlB,IAAuBH,GAAG,CAACG,CAA3B,GAA+BH,GAAG,CAACW,QAApD;EACA,KAAKC,SAAL,GAAiBX,KAAK,CAACC,OAAN,CAAcF,GAAG,CAACM,CAAlB,IAAuBN,GAAG,CAACM,CAA3B,GAA+BN,GAAG,CAACa,QAApD;AACD;;AAEDjB,cAAc,CAACE,SAAD,EAAY,GAAZ,EAAiB,SAASQ,CAAT,GAAa;EAC1C,OAAO,KAAKP,KAAL,CAAWe,SAAX,CAAqB,KAAKD,QAAL,EAArB,CAAP;AACD,CAFa,CAAd;AAIAjB,cAAc,CAACE,SAAD,EAAY,GAAZ,EAAiB,SAASK,CAAT,GAAa;EAC1C,OAAO,KAAKJ,KAAL,CAAWgB,WAAX,CAAuB,KAAKJ,QAAL,EAAvB,CAAP;AACD,CAFa,CAAd;AAIAf,cAAc,CAACE,SAAD,EAAY,UAAZ,EAAwB,SAASa,QAAT,GAAoB;EACxD,OAAO,KAAKZ,KAAL,CAAWiB,WAAX,CAAuB,KAAKb,CAAL,EAAvB,CAAP;AACD,CAFa,CAAd;AAIAP,cAAc,CAACE,SAAD,EAAY,UAAZ,EAAwB,SAASe,QAAT,GAAoB;EACxD,OAAO,KAAKd,KAAL,CAAWkB,SAAX,CAAqB,KAAKX,CAAL,EAArB,CAAP;AACD,CAFa,CAAd;;AAIAR,SAAS,CAACoB,SAAV,CAAoBC,OAApB,GAA8B,SAASA,OAAT,GAAmB;EAC/C,OAAO,KAAKR,QAAL,GAAgBS,MAAhB,CAAuB,KAAKP,QAAL,EAAvB,CAAP;AACD,CAFD;;AAIAf,SAAS,CAACoB,SAAV,CAAoBG,KAApB,GAA4B,SAASA,KAAT,GAAiB;EAC3C,OAAO3B,KAAK,CAAC4B,MAAN,CAAa,KAAKH,OAAL,EAAb,EAA6B,KAA7B,EAAoCI,WAApC,EAAP;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiB3B,SAAjB"},"metadata":{},"sourceType":"script"}