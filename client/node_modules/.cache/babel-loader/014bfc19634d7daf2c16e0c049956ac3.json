{"ast":null,"code":"// @ts-nocheck\nrobotframework.displayName = 'robotframework';\nrobotframework.aliases = ['robot'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function robotframework(Prism) {\n  ;\n\n  (function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    };\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    };\n\n    function createSection(name, inside) {\n      var extendecInside = {};\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      }; // copy inside tokens\n\n      for (var token in inside) {\n        extendecInside[token] = inside[token];\n      }\n\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      };\n      extendecInside['variable'] = variable;\n      extendecInside['comment'] = comment;\n      return {\n        pattern: RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g, function () {\n          return name;\n        }), 'im'),\n        alias: 'section',\n        inside: extendecInside\n      };\n    }\n\n    var docTag = {\n      pattern: /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    };\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    };\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    };\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern: /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    };\n    Prism.languages.robot = Prism.languages['robotframework'];\n  })(Prism);\n}","map":{"version":3,"names":["robotframework","displayName","aliases","Prism","comment","pattern","lookbehind","greedy","variable","inside","punctuation","createSection","name","extendecInside","alias","token","RegExp","source","replace","docTag","testNameLike","testPropertyLike","languages","settings","documentation","property","variables","keywords","tasks","robot"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/robotframework.js"],"sourcesContent":["// @ts-nocheck\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = ['robot']\n\n/** @type {import('../core.js').Syntax} */\nexport default function robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}