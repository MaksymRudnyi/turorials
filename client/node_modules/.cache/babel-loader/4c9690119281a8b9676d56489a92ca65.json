{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var group = (arr, options) => {\n  var data = _extends({\n    children: arr,\n    icon: /*#__PURE__*/_jsx(\"svg\", {\n      width: \"12\",\n      height: \"12\",\n      viewBox: \"0 0 520 520\",\n      children: /*#__PURE__*/_jsx(\"path\", {\n        fill: \"currentColor\",\n        d: \"M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z\"\n      })\n    }),\n    execute: () => {}\n  }, options, {\n    keyCommand: 'group'\n  });\n\n  if (Array.isArray(data.children)) {\n    data.children = data.children.map(_ref => {\n      var item = _extends({}, _ref);\n\n      item.parent = data;\n      return _extends({}, item);\n    });\n  }\n\n  return data;\n};","map":{"version":3,"sources":["../../src/commands/group.tsx"],"names":["group","data","children","icon","execute","keyCommand","Array","item"],"mappings":";AAAA,OAAA,KAAA,MAAA,OAAA;;AAOA,OAAO,IAAMA,KAAK,GAAG,CAAA,GAAA,EAAA,OAAA,KAAsF;EACzG,IAAIC,IAAI,GAAA,QAAA,CAAA;IACNC,QAAQ,EADF,GAAA;IAENC,IAAI,EAAA,aACF,IAAA,CAAA,KAAA,EAAA;MAAK,KAAK,EAAV,IAAA;MAAgB,MAAM,EAAtB,IAAA;MAA4B,OAAO,EAAnC,aAAA;MAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;QACE,IAAI,EADN,cAAA;QAEE,CAAC,EAAC;MAFJ,CAAA;IADF,CAAA,CAHI;IAUNC,OAAO,EAAE,MAAM,CAAE;EAVX,CAAA,EAAA,OAAA,EAAA;IAYNC,UAAU,EAAE;EAZN,CAAA,CAAR;;EAcA,IAAIC,KAAK,CAALA,OAAAA,CAAcL,IAAI,CAAtB,QAAIK,CAAJ,EAAkC;IAChCL,IAAI,CAAJA,QAAAA,GAAgB,IAAI,CAAJ,QAAA,CAAA,GAAA,CAAkB,IAAA,IAA2B;MAAA,IAArBM,IAAqB,GAAA,QAAA,CAAA,EAAA,EAAA,IAAA,CAAA;;MAC3DA,IAAI,CAAJA,MAAAA,GAAAA,IAAAA;MACA,OAAA,QAAA,CAAA,EAAA,EAAA,IAAA,CAAA;IAFFN,CAAgB,CAAhBA;EAID;;EACD,OAAA,IAAA;AArBK,CAAA","sourcesContent":["import React from 'react';\nimport { ICommand, ICommandChildCommands, ICommandChildHandle } from './';\n\nexport type GroupOptions = Omit<ICommand<string>, 'children'> & {\n  children?: ICommandChildHandle['children'];\n};\n\nexport const group = (arr: ICommandChildCommands['children'], options?: GroupOptions): ICommand<string> => {\n  let data = {\n    children: arr as any,\n    icon: (\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 520 520\">\n        <path\n          fill=\"currentColor\"\n          d=\"M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z\"\n        />\n      </svg>\n    ),\n    execute: () => {},\n    ...options,\n    keyCommand: 'group',\n  };\n  if (Array.isArray(data.children)) {\n    data.children = data.children.map(({ ...item }: ICommand) => {\n      item.parent = data;\n      return { ...item };\n    });\n  }\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}