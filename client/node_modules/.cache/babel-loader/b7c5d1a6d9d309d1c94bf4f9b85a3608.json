{"ast":null,"code":"function errorIfNotEmpty(stream) {\n  var nonWS = stream.match(/^\\s*\\S/);\n  stream.skipToEnd();\n  return nonWS ? \"error\" : null;\n}\n\nexport const asciiArmor = {\n  token: function (stream, state) {\n    var m;\n\n    if (state.state == \"top\") {\n      if (stream.sol() && (m = stream.match(/^-----BEGIN (.*)?-----\\s*$/))) {\n        state.state = \"headers\";\n        state.type = m[1];\n        return \"tag\";\n      }\n\n      return errorIfNotEmpty(stream);\n    } else if (state.state == \"headers\") {\n      if (stream.sol() && stream.match(/^\\w+:/)) {\n        state.state = \"header\";\n        return \"atom\";\n      } else {\n        var result = errorIfNotEmpty(stream);\n        if (result) state.state = \"body\";\n        return result;\n      }\n    } else if (state.state == \"header\") {\n      stream.skipToEnd();\n      state.state = \"headers\";\n      return \"string\";\n    } else if (state.state == \"body\") {\n      if (stream.sol() && (m = stream.match(/^-----END (.*)?-----\\s*$/))) {\n        if (m[1] != state.type) return \"error\";\n        state.state = \"end\";\n        return \"tag\";\n      } else {\n        if (stream.eatWhile(/[A-Za-z0-9+\\/=]/)) {\n          return null;\n        } else {\n          stream.next();\n          return \"error\";\n        }\n      }\n    } else if (state.state == \"end\") {\n      return errorIfNotEmpty(stream);\n    }\n  },\n  blankLine: function (state) {\n    if (state.state == \"headers\") state.state = \"body\";\n  },\n  startState: function () {\n    return {\n      state: \"top\",\n      type: null\n    };\n  }\n};","map":{"version":3,"names":["errorIfNotEmpty","stream","nonWS","match","skipToEnd","asciiArmor","token","state","m","sol","type","result","eatWhile","next","blankLine","startState"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/asciiarmor.js"],"sourcesContent":["function errorIfNotEmpty(stream) {\n  var nonWS = stream.match(/^\\s*\\S/);\n  stream.skipToEnd();\n  return nonWS ? \"error\" : null;\n}\n\nexport const asciiArmor = {\n  token: function(stream, state) {\n    var m;\n    if (state.state == \"top\") {\n      if (stream.sol() && (m = stream.match(/^-----BEGIN (.*)?-----\\s*$/))) {\n        state.state = \"headers\";\n        state.type = m[1];\n        return \"tag\";\n      }\n      return errorIfNotEmpty(stream);\n    } else if (state.state == \"headers\") {\n      if (stream.sol() && stream.match(/^\\w+:/)) {\n        state.state = \"header\";\n        return \"atom\";\n      } else {\n        var result = errorIfNotEmpty(stream);\n        if (result) state.state = \"body\";\n        return result;\n      }\n    } else if (state.state == \"header\") {\n      stream.skipToEnd();\n      state.state = \"headers\";\n      return \"string\";\n    } else if (state.state == \"body\") {\n      if (stream.sol() && (m = stream.match(/^-----END (.*)?-----\\s*$/))) {\n        if (m[1] != state.type) return \"error\";\n        state.state = \"end\";\n        return \"tag\";\n      } else {\n        if (stream.eatWhile(/[A-Za-z0-9+\\/=]/)) {\n          return null;\n        } else {\n          stream.next();\n          return \"error\";\n        }\n      }\n    } else if (state.state == \"end\") {\n      return errorIfNotEmpty(stream);\n    }\n  },\n  blankLine: function(state) {\n    if (state.state == \"headers\") state.state = \"body\";\n  },\n  startState: function() {\n    return {state: \"top\", type: null};\n  }\n};\n"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;EAC/B,IAAIC,KAAK,GAAGD,MAAM,CAACE,KAAP,CAAa,QAAb,CAAZ;EACAF,MAAM,CAACG,SAAP;EACA,OAAOF,KAAK,GAAG,OAAH,GAAa,IAAzB;AACD;;AAED,OAAO,MAAMG,UAAU,GAAG;EACxBC,KAAK,EAAE,UAASL,MAAT,EAAiBM,KAAjB,EAAwB;IAC7B,IAAIC,CAAJ;;IACA,IAAID,KAAK,CAACA,KAAN,IAAe,KAAnB,EAA0B;MACxB,IAAIN,MAAM,CAACQ,GAAP,OAAiBD,CAAC,GAAGP,MAAM,CAACE,KAAP,CAAa,4BAAb,CAArB,CAAJ,EAAsE;QACpEI,KAAK,CAACA,KAAN,GAAc,SAAd;QACAA,KAAK,CAACG,IAAN,GAAaF,CAAC,CAAC,CAAD,CAAd;QACA,OAAO,KAAP;MACD;;MACD,OAAOR,eAAe,CAACC,MAAD,CAAtB;IACD,CAPD,MAOO,IAAIM,KAAK,CAACA,KAAN,IAAe,SAAnB,EAA8B;MACnC,IAAIN,MAAM,CAACQ,GAAP,MAAgBR,MAAM,CAACE,KAAP,CAAa,OAAb,CAApB,EAA2C;QACzCI,KAAK,CAACA,KAAN,GAAc,QAAd;QACA,OAAO,MAAP;MACD,CAHD,MAGO;QACL,IAAII,MAAM,GAAGX,eAAe,CAACC,MAAD,CAA5B;QACA,IAAIU,MAAJ,EAAYJ,KAAK,CAACA,KAAN,GAAc,MAAd;QACZ,OAAOI,MAAP;MACD;IACF,CATM,MASA,IAAIJ,KAAK,CAACA,KAAN,IAAe,QAAnB,EAA6B;MAClCN,MAAM,CAACG,SAAP;MACAG,KAAK,CAACA,KAAN,GAAc,SAAd;MACA,OAAO,QAAP;IACD,CAJM,MAIA,IAAIA,KAAK,CAACA,KAAN,IAAe,MAAnB,EAA2B;MAChC,IAAIN,MAAM,CAACQ,GAAP,OAAiBD,CAAC,GAAGP,MAAM,CAACE,KAAP,CAAa,0BAAb,CAArB,CAAJ,EAAoE;QAClE,IAAIK,CAAC,CAAC,CAAD,CAAD,IAAQD,KAAK,CAACG,IAAlB,EAAwB,OAAO,OAAP;QACxBH,KAAK,CAACA,KAAN,GAAc,KAAd;QACA,OAAO,KAAP;MACD,CAJD,MAIO;QACL,IAAIN,MAAM,CAACW,QAAP,CAAgB,iBAAhB,CAAJ,EAAwC;UACtC,OAAO,IAAP;QACD,CAFD,MAEO;UACLX,MAAM,CAACY,IAAP;UACA,OAAO,OAAP;QACD;MACF;IACF,CAbM,MAaA,IAAIN,KAAK,CAACA,KAAN,IAAe,KAAnB,EAA0B;MAC/B,OAAOP,eAAe,CAACC,MAAD,CAAtB;IACD;EACF,CAvCuB;EAwCxBa,SAAS,EAAE,UAASP,KAAT,EAAgB;IACzB,IAAIA,KAAK,CAACA,KAAN,IAAe,SAAnB,EAA8BA,KAAK,CAACA,KAAN,GAAc,MAAd;EAC/B,CA1CuB;EA2CxBQ,UAAU,EAAE,YAAW;IACrB,OAAO;MAACR,KAAK,EAAE,KAAR;MAAeG,IAAI,EAAE;IAArB,CAAP;EACD;AA7CuB,CAAnB"},"metadata":{},"sourceType":"module"}