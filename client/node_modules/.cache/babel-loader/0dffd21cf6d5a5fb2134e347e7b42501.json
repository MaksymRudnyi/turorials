{"ast":null,"code":"// @ts-nocheck\nimport refractorJava from './java.js';\nimport refractorMata from './mata.js';\nimport refractorPython from './python.js';\nstata.displayName = 'stata';\nstata.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function stata(Prism) {\n  Prism.register(refractorJava);\n  Prism.register(refractorMata);\n  Prism.register(refractorPython); // https://www.stata.com/manuals/u.pdf\n  // https://www.stata.com/manuals/p.pdf\n\n  Prism.languages.stata = {\n    comment: [{\n      pattern: /(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      greedy: true\n    }],\n    'string-literal': {\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n          inside: {\n            punctuation: /^\\$\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    mata: {\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-mata',\n      inside: Prism.languages.mata\n    },\n    java: {\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-java',\n      inside: Prism.languages.java\n    },\n    python: {\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-python',\n      inside: Prism.languages.python\n    },\n    command: {\n      pattern: /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n    keyword: /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n    boolean: /\\b(?:off|on)\\b/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n    punctuation: /[(){}[\\],:]/\n  };\n  Prism.languages.stata['string-literal'].inside.interpolation.inside.expression.inside = Prism.languages.stata;\n}","map":{"version":3,"names":["refractorJava","refractorMata","refractorPython","stata","displayName","aliases","Prism","register","languages","comment","pattern","lookbehind","greedy","inside","interpolation","punctuation","expression","string","mata","alias","java","python","command","variable","keyword","boolean","number","function","operator"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/stata.js"],"sourcesContent":["// @ts-nocheck\nimport refractorJava from './java.js'\nimport refractorMata from './mata.js'\nimport refractorPython from './python.js'\nstata.displayName = 'stata'\nstata.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function stata(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorMata)\n  Prism.register(refractorPython)\n  // https://www.stata.com/manuals/u.pdf\n  // https://www.stata.com/manuals/p.pdf\n  Prism.languages.stata = {\n    comment: [\n      {\n        pattern: /(^[ \\t]*)\\*.*/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'string-literal': {\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n          inside: {\n            punctuation: /^\\$\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    mata: {\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-mata',\n      inside: Prism.languages.mata\n    },\n    java: {\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-java',\n      inside: Prism.languages.java\n    },\n    python: {\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-python',\n      inside: Prism.languages.python\n    },\n    command: {\n      pattern:\n        /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n    keyword:\n      /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n    boolean: /\\b(?:off|on)\\b/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n    punctuation: /[(){}[\\],:]/\n  }\n  Prism.languages.stata[\n    'string-literal'\n  ].inside.interpolation.inside.expression.inside = Prism.languages.stata\n}\n"],"mappings":"AAAA;AACA,OAAOA,aAAP,MAA0B,WAA1B;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACAC,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;AAEA;;AACA,eAAe,SAASF,KAAT,CAAeG,KAAf,EAAsB;EACnCA,KAAK,CAACC,QAAN,CAAeP,aAAf;EACAM,KAAK,CAACC,QAAN,CAAeN,aAAf;EACAK,KAAK,CAACC,QAAN,CAAeL,eAAf,EAHmC,CAInC;EACA;;EACAI,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwB;IACtBM,OAAO,EAAE,CACP;MACEC,OAAO,EAAE,gBADX;MAEEC,UAAU,EAAE,IAFd;MAGEC,MAAM,EAAE;IAHV,CADO,EAMP;MACEF,OAAO,EAAE,+BADX;MAEEC,UAAU,EAAE,IAFd;MAGEC,MAAM,EAAE;IAHV,CANO,CADa;IAatB,kBAAkB;MAChBF,OAAO,EAAE,6BADO;MAEhBE,MAAM,EAAE,IAFQ;MAGhBC,MAAM,EAAE;QACNC,aAAa,EAAE;UACbJ,OAAO,EAAE,sCADI;UAEbG,MAAM,EAAE;YACNE,WAAW,EAAE,WADP;YAENC,UAAU,EAAE;cACVN,OAAO,EAAE,SADC;cAEVG,MAAM,EAAE,IAFE,CAEG;;YAFH;UAFN;QAFK,CADT;QAWNI,MAAM,EAAE;MAXF;IAHQ,CAbI;IA8BtBC,IAAI,EAAE;MACJR,OAAO,EAAE,yCADL;MAEJC,UAAU,EAAE,IAFR;MAGJC,MAAM,EAAE,IAHJ;MAIJO,KAAK,EAAE,eAJH;MAKJN,MAAM,EAAEP,KAAK,CAACE,SAAN,CAAgBU;IALpB,CA9BgB;IAqCtBE,IAAI,EAAE;MACJV,OAAO,EAAE,yCADL;MAEJC,UAAU,EAAE,IAFR;MAGJC,MAAM,EAAE,IAHJ;MAIJO,KAAK,EAAE,eAJH;MAKJN,MAAM,EAAEP,KAAK,CAACE,SAAN,CAAgBY;IALpB,CArCgB;IA4CtBC,MAAM,EAAE;MACNX,OAAO,EAAE,2CADH;MAENC,UAAU,EAAE,IAFN;MAGNC,MAAM,EAAE,IAHF;MAINO,KAAK,EAAE,iBAJD;MAKNN,MAAM,EAAEP,KAAK,CAACE,SAAN,CAAgBa;IALlB,CA5Cc;IAmDtBC,OAAO,EAAE;MACPZ,OAAO,EACL,iQAFK;MAGPC,UAAU,EAAE,IAHL;MAIPC,MAAM,EAAE,IAJD;MAKPO,KAAK,EAAE;IALA,CAnDa;IA0DtBI,QAAQ,EAAE,+BA1DY;IA2DtBC,OAAO,EACL,4MA5DoB;IA6DtBC,OAAO,EAAE,gBA7Da;IA8DtBC,MAAM,EAAE,2BA9Dc;IA+DtBC,QAAQ,EAAE,oBA/DY;IAgEtBC,QAAQ,EAAE,kCAhEY;IAiEtBb,WAAW,EAAE;EAjES,CAAxB;EAmEAT,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CACE,gBADF,EAEEU,MAFF,CAESC,aAFT,CAEuBD,MAFvB,CAE8BG,UAF9B,CAEyCH,MAFzC,GAEkDP,KAAK,CAACE,SAAN,CAAgBL,KAFlE;AAGD"},"metadata":{},"sourceType":"module"}