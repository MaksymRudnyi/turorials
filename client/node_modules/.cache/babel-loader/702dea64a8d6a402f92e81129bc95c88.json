{"ast":null,"code":"var commentType = {\n  slash: 0,\n  parenthesis: 1\n};\nvar stateType = {\n  comment: 0,\n  _string: 1,\n  characterClass: 2\n};\nexport const ebnf = {\n  startState: function () {\n    return {\n      stringType: null,\n      commentType: null,\n      braced: 0,\n      lhs: true,\n      localState: null,\n      stack: [],\n      inDefinition: false\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return; //check for state changes\n\n    if (state.stack.length === 0) {\n      //strings\n      if (stream.peek() == '\"' || stream.peek() == \"'\") {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n\n        state.stack.unshift(stateType._string);\n      } else if (stream.match('/*')) {\n        //comments starting with /*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.slash;\n      } else if (stream.match('(*')) {\n        //comments starting with (*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.parenthesis;\n      }\n    } //return state\n    //stack has\n\n\n    switch (state.stack[0]) {\n      case stateType._string:\n        while (state.stack[0] === stateType._string && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n\n            state.stack.shift(); // Clear flag\n          } else if (stream.peek() === \"\\\\\") {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n\n        return state.lhs ? \"property\" : \"string\";\n      // Token style\n\n      case stateType.comment:\n        while (state.stack[0] === stateType.comment && !stream.eol()) {\n          if (state.commentType === commentType.slash && stream.match('*/')) {\n            state.stack.shift(); // Clear flag\n\n            state.commentType = null;\n          } else if (state.commentType === commentType.parenthesis && stream.match('*)')) {\n            state.stack.shift(); // Clear flag\n\n            state.commentType = null;\n          } else {\n            stream.match(/^.[^\\*]*/);\n          }\n        }\n\n        return \"comment\";\n\n      case stateType.characterClass:\n        while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n          if (!(stream.match(/^[^\\]\\\\]+/) || stream.match('.'))) {\n            state.stack.shift();\n          }\n        }\n\n        return \"operator\";\n    }\n\n    var peek = stream.peek(); //no stack\n\n    switch (peek) {\n      case \"[\":\n        stream.next();\n        state.stack.unshift(stateType.characterClass);\n        return \"bracket\";\n\n      case \":\":\n      case \"|\":\n      case \";\":\n        stream.next();\n        return \"operator\";\n\n      case \"%\":\n        if (stream.match(\"%%\")) {\n          return \"header\";\n        } else if (stream.match(/[%][A-Za-z]+/)) {\n          return \"keyword\";\n        } else if (stream.match(/[%][}]/)) {\n          return \"bracket\";\n        }\n\n        break;\n\n      case \"/\":\n        if (stream.match(/[\\/][A-Za-z]+/)) {\n          return \"keyword\";\n        }\n\n      case \"\\\\\":\n        if (stream.match(/[\\][a-z]+/)) {\n          return \"string.special\";\n        }\n\n      case \".\":\n        if (stream.match(\".\")) {\n          return \"atom\";\n        }\n\n      case \"*\":\n      case \"-\":\n      case \"+\":\n      case \"^\":\n        if (stream.match(peek)) {\n          return \"atom\";\n        }\n\n      case \"$\":\n        if (stream.match(\"$$\")) {\n          return \"builtin\";\n        } else if (stream.match(/[$][0-9]+/)) {\n          return \"variableName.special\";\n        }\n\n      case \"<\":\n        if (stream.match(/<<[a-zA-Z_]+>>/)) {\n          return \"builtin\";\n        }\n\n    }\n\n    if (stream.match('//')) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.match('return')) {\n      return \"operator\";\n    } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      if (stream.match(/(?=[\\(.])/)) {\n        return \"variable\";\n      } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n        return \"def\";\n      }\n\n      return \"variableName.special\";\n    } else if ([\"[\", \"]\", \"(\", \")\"].indexOf(stream.peek()) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n\n    return null;\n  }\n};","map":{"version":3,"names":["commentType","slash","parenthesis","stateType","comment","_string","characterClass","ebnf","startState","stringType","braced","lhs","localState","stack","inDefinition","token","stream","state","length","peek","next","unshift","match","eol","shift","skipToEnd","indexOf","eatSpace"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/ebnf.js"],"sourcesContent":["var commentType = {slash: 0, parenthesis: 1};\nvar stateType = {comment: 0, _string: 1, characterClass: 2};\n\nexport const ebnf = {\n  startState: function () {\n    return {\n      stringType: null,\n      commentType: null,\n      braced: 0,\n      lhs: true,\n      localState: null,\n      stack: [],\n      inDefinition: false\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(stateType._string);\n      } else if (stream.match('/*')) { //comments starting with /*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.slash;\n      } else if (stream.match('(*')) { //comments starting with (*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.parenthesis;\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case stateType._string:\n      while (state.stack[0] === stateType._string && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === \"\\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n\n    case stateType.comment:\n      while (state.stack[0] === stateType.comment && !stream.eol()) {\n        if (state.commentType === commentType.slash && stream.match('*/')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else if (state.commentType === commentType.parenthesis && stream.match('*)')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else {\n          stream.match(/^.[^\\*]*/);\n        }\n      }\n      return \"comment\";\n\n    case stateType.characterClass:\n      while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match('.'))) {\n          state.stack.shift();\n        }\n      }\n      return \"operator\";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case \"[\":\n      stream.next();\n      state.stack.unshift(stateType.characterClass);\n      return \"bracket\";\n    case \":\":\n    case \"|\":\n    case \";\":\n      stream.next();\n      return \"operator\";\n    case \"%\":\n      if (stream.match(\"%%\")) {\n        return \"header\";\n      } else if (stream.match(/[%][A-Za-z]+/)) {\n        return \"keyword\";\n      } else if (stream.match(/[%][}]/)) {\n        return \"bracket\";\n      }\n      break;\n    case \"/\":\n      if (stream.match(/[\\/][A-Za-z]+/)) {\n        return \"keyword\";\n      }\n    case \"\\\\\":\n      if (stream.match(/[\\][a-z]+/)) {\n        return \"string.special\";\n      }\n    case \".\":\n      if (stream.match(\".\")) {\n        return \"atom\";\n      }\n    case \"*\":\n    case \"-\":\n    case \"+\":\n    case \"^\":\n      if (stream.match(peek)) {\n        return \"atom\";\n      }\n    case \"$\":\n      if (stream.match(\"$$\")) {\n        return \"builtin\";\n      } else if (stream.match(/[$][0-9]+/)) {\n        return \"variableName.special\";\n      }\n    case \"<\":\n      if (stream.match(/<<[a-zA-Z_]+>>/)) {\n        return \"builtin\";\n      }\n    }\n\n    if (stream.match('//')) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.match('return')) {\n      return \"operator\";\n    } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      if (stream.match(/(?=[\\(.])/)) {\n        return \"variable\";\n      } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n        return \"def\";\n      }\n      return \"variableName.special\";\n    } else if ([\"[\", \"]\", \"(\", \")\"].indexOf(stream.peek()) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}