{"ast":null,"code":"var type;\n\nfunction ret(style, tp) {\n  type = tp;\n  return style;\n}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == \"<\" && stream.eat(\"!\")) {\n    if (stream.eatWhile(/[\\-]/)) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n  } else if (ch == \"<\" && stream.eat(\"?\")) {\n    //xml declaration\n    state.tokenize = inBlock(\"meta\", \"?>\");\n    return ret(\"meta\", ch);\n  } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");else if (ch == \"|\") return ret(\"keyword\", \"separator\");else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch); //if(ch === \">\") return ret(null, \"endtag\"); else\n  else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n    var sc = stream.current();\n    if (sc.substr(sc.length - 1, sc.length).match(/\\?|\\+/) !== null) stream.backUp(1);\n    return ret(\"tag\", \"tag\");\n  } else if (ch == \"%\" || ch == \"*\") return ret(\"number\", \"number\");else {\n    stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n    return ret(null, null);\n  }\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0,\n      ch;\n\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    dashes = ch == \"-\" ? dashes + 1 : 0;\n  }\n\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false,\n        ch;\n\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n\n      escaped = !escaped && ch == \"\\\\\";\n    }\n\n    return ret(\"string\", \"tag\");\n  };\n}\n\nfunction inBlock(style, terminator) {\n  return function (stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = tokenBase;\n        break;\n      }\n\n      stream.next();\n    }\n\n    return style;\n  };\n}\n\nexport const dtd = {\n  startState: function () {\n    return {\n      tokenize: tokenBase,\n      baseIndent: 0,\n      stack: []\n    };\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    var context = state.stack[state.stack.length - 1];\n    if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");else if (type === \"endtag\") state.stack[state.stack.length - 1] = \"endtag\";else if (stream.current() == \"]\" || type == \"]\" || type == \">\" && context == \"rule\") state.stack.pop();else if (type == \"[\") state.stack.push(\"[\");\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    var n = state.stack.length;\n    if (textAfter.charAt(0) === ']') n--;else if (textAfter.substr(textAfter.length - 1, textAfter.length) === \">\") {\n      if (textAfter.substr(0, 1) === \"<\") {} else if (type == \"doindent\" && textAfter.length > 1) {} else if (type == \"doindent\") n--;else if (type == \">\" && textAfter.length > 1) {} else if (type == \"tag\" && textAfter !== \">\") {} else if (type == \"tag\" && state.stack[state.stack.length - 1] == \"rule\") n--;else if (type == \"tag\") n++;else if (textAfter === \">\" && state.stack[state.stack.length - 1] == \"rule\" && type === \">\") n--;else if (textAfter === \">\" && state.stack[state.stack.length - 1] == \"rule\") {} else if (textAfter.substr(0, 1) !== \"<\" && textAfter.substr(0, 1) === \">\") n = n - 1;else if (textAfter === \">\") {} else n = n - 1; //over rule them all\n\n\n      if (type == null || type == \"]\") n--;\n    }\n    return state.baseIndent + n * cx.unit;\n  },\n  languageData: {\n    indentOnInput: /^\\s*[\\]>]$/\n  }\n};","map":{"version":3,"names":["type","ret","style","tp","tokenBase","stream","state","ch","next","eat","eatWhile","tokenize","tokenSGMLComment","inBlock","match","tokenString","sc","current","substr","length","backUp","dashes","quote","escaped","terminator","eol","dtd","startState","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","cx","n","charAt","unit","languageData","indentOnInput"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/dtd.js"],"sourcesContent":["var type;\nfunction ret(style, tp) {type = tp; return style;}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == \"<\" && stream.eat(\"!\") ) {\n    if (stream.eatWhile(/[\\-]/)) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n  } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n    state.tokenize = inBlock(\"meta\", \"?>\");\n    return ret(\"meta\", ch);\n  } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n  else if (ch == \"|\") return ret(\"keyword\", \"separator\");\n  else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n  else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n    var sc = stream.current();\n    if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n    return ret(\"tag\", \"tag\");\n  } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n  else {\n    stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n    return ret(null, null);\n  }\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0, ch;\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return ret(\"string\", \"tag\");\n  };\n}\n\nfunction inBlock(style, terminator) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.next();\n    }\n    return style;\n  };\n}\n\nexport const dtd = {\n  startState: function() {\n    return {tokenize: tokenBase,\n            baseIndent: 0,\n            stack: []};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n\n    var context = state.stack[state.stack.length-1];\n    if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n    else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n    else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n    else if (type == \"[\") state.stack.push(\"[\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var n = state.stack.length;\n\n    if( textAfter.charAt(0) === ']' )n--;\n    else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n      if(textAfter.substr(0,1) === \"<\") {}\n      else if( type == \"doindent\" && textAfter.length > 1 ) {}\n      else if( type == \"doindent\")n--;\n      else if( type == \">\" && textAfter.length > 1) {}\n      else if( type == \"tag\" && textAfter !== \">\") {}\n      else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n      else if( type == \"tag\")n++;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n      else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n      else if( textAfter === \">\") {}\n      else n=n-1;\n      //over rule them all\n      if(type == null || type == \"]\")n--;\n    }\n\n    return state.baseIndent + n * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[\\]>]$/\n  }\n};\n\n"],"mappings":"AAAA,IAAIA,IAAJ;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoBC,EAApB,EAAwB;EAACH,IAAI,GAAGG,EAAP;EAAW,OAAOD,KAAP;AAAc;;AAElD,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;EAChC,IAAIC,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAT;;EAEA,IAAID,EAAE,IAAI,GAAN,IAAaF,MAAM,CAACI,GAAP,CAAW,GAAX,CAAjB,EAAmC;IACjC,IAAIJ,MAAM,CAACK,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;MAC3BJ,KAAK,CAACK,QAAN,GAAiBC,gBAAjB;MACA,OAAOA,gBAAgB,CAACP,MAAD,EAASC,KAAT,CAAvB;IACD,CAHD,MAGO,IAAID,MAAM,CAACK,QAAP,CAAgB,MAAhB,CAAJ,EAA6B,OAAOT,GAAG,CAAC,SAAD,EAAY,UAAZ,CAAV;EACrC,CALD,MAKO,IAAIM,EAAE,IAAI,GAAN,IAAaF,MAAM,CAACI,GAAP,CAAW,GAAX,CAAjB,EAAkC;IAAE;IACzCH,KAAK,CAACK,QAAN,GAAiBE,OAAO,CAAC,MAAD,EAAS,IAAT,CAAxB;IACA,OAAOZ,GAAG,CAAC,MAAD,EAASM,EAAT,CAAV;EACD,CAHM,MAGA,IAAIA,EAAE,IAAI,GAAN,IAAaF,MAAM,CAACK,QAAP,CAAgB,MAAhB,CAAjB,EAA0C,OAAOT,GAAG,CAAC,MAAD,EAAS,KAAT,CAAV,CAA1C,KACF,IAAIM,EAAE,IAAI,GAAV,EAAe,OAAON,GAAG,CAAC,SAAD,EAAY,WAAZ,CAAV,CAAf,KACA,IAAIM,EAAE,CAACO,KAAH,CAAS,sBAAT,CAAJ,EAAsC,OAAOb,GAAG,CAAC,IAAD,EAAOM,EAAP,CAAV,CAAtC,CAA2D;EAA3D,KACA,IAAIA,EAAE,CAACO,KAAH,CAAS,QAAT,CAAJ,EAAwB,OAAOb,GAAG,CAAC,MAAD,EAASM,EAAT,CAAV,CAAxB,KACA,IAAIA,EAAE,IAAI,IAAN,IAAcA,EAAE,IAAI,GAAxB,EAA6B;IAChCD,KAAK,CAACK,QAAN,GAAiBI,WAAW,CAACR,EAAD,CAA5B;IACA,OAAOD,KAAK,CAACK,QAAN,CAAeN,MAAf,EAAuBC,KAAvB,CAAP;EACD,CAHI,MAGE,IAAID,MAAM,CAACK,QAAP,CAAgB,gBAAhB,CAAJ,EAAuC;IAC5C,IAAIM,EAAE,GAAGX,MAAM,CAACY,OAAP,EAAT;IACA,IAAID,EAAE,CAACE,MAAH,CAAUF,EAAE,CAACG,MAAH,GAAU,CAApB,EAAsBH,EAAE,CAACG,MAAzB,EAAiCL,KAAjC,CAAuC,OAAvC,MAAoD,IAAxD,EAA8DT,MAAM,CAACe,MAAP,CAAc,CAAd;IAC9D,OAAOnB,GAAG,CAAC,KAAD,EAAQ,KAAR,CAAV;EACD,CAJM,MAIA,IAAIM,EAAE,IAAI,GAAN,IAAaA,EAAE,IAAI,GAAvB,EAA6B,OAAON,GAAG,CAAC,QAAD,EAAW,QAAX,CAAV,CAA7B,KACF;IACHI,MAAM,CAACK,QAAP,CAAgB,eAAhB;IACA,OAAOT,GAAG,CAAC,IAAD,EAAO,IAAP,CAAV;EACD;AACF;;AAED,SAASW,gBAAT,CAA0BP,MAA1B,EAAkCC,KAAlC,EAAyC;EACvC,IAAIe,MAAM,GAAG,CAAb;EAAA,IAAgBd,EAAhB;;EACA,OAAO,CAACA,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAN,KAAwB,IAA/B,EAAqC;IACnC,IAAIa,MAAM,IAAI,CAAV,IAAed,EAAE,IAAI,GAAzB,EAA8B;MAC5BD,KAAK,CAACK,QAAN,GAAiBP,SAAjB;MACA;IACD;;IACDiB,MAAM,GAAId,EAAE,IAAI,GAAP,GAAcc,MAAM,GAAG,CAAvB,GAA2B,CAApC;EACD;;EACD,OAAOpB,GAAG,CAAC,SAAD,EAAY,SAAZ,CAAV;AACD;;AAED,SAASc,WAAT,CAAqBO,KAArB,EAA4B;EAC1B,OAAO,UAASjB,MAAT,EAAiBC,KAAjB,EAAwB;IAC7B,IAAIiB,OAAO,GAAG,KAAd;IAAA,IAAqBhB,EAArB;;IACA,OAAO,CAACA,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAN,KAAwB,IAA/B,EAAqC;MACnC,IAAID,EAAE,IAAIe,KAAN,IAAe,CAACC,OAApB,EAA6B;QAC3BjB,KAAK,CAACK,QAAN,GAAiBP,SAAjB;QACA;MACD;;MACDmB,OAAO,GAAG,CAACA,OAAD,IAAYhB,EAAE,IAAI,IAA5B;IACD;;IACD,OAAON,GAAG,CAAC,QAAD,EAAW,KAAX,CAAV;EACD,CAVD;AAWD;;AAED,SAASY,OAAT,CAAiBX,KAAjB,EAAwBsB,UAAxB,EAAoC;EAClC,OAAO,UAASnB,MAAT,EAAiBC,KAAjB,EAAwB;IAC7B,OAAO,CAACD,MAAM,CAACoB,GAAP,EAAR,EAAsB;MACpB,IAAIpB,MAAM,CAACS,KAAP,CAAaU,UAAb,CAAJ,EAA8B;QAC5BlB,KAAK,CAACK,QAAN,GAAiBP,SAAjB;QACA;MACD;;MACDC,MAAM,CAACG,IAAP;IACD;;IACD,OAAON,KAAP;EACD,CATD;AAUD;;AAED,OAAO,MAAMwB,GAAG,GAAG;EACjBC,UAAU,EAAE,YAAW;IACrB,OAAO;MAAChB,QAAQ,EAAEP,SAAX;MACCwB,UAAU,EAAE,CADb;MAECC,KAAK,EAAE;IAFR,CAAP;EAGD,CALgB;EAOjBC,KAAK,EAAE,UAASzB,MAAT,EAAiBC,KAAjB,EAAwB;IAC7B,IAAID,MAAM,CAAC0B,QAAP,EAAJ,EAAuB,OAAO,IAAP;IACvB,IAAI7B,KAAK,GAAGI,KAAK,CAACK,QAAN,CAAeN,MAAf,EAAuBC,KAAvB,CAAZ;IAEA,IAAI0B,OAAO,GAAG1B,KAAK,CAACuB,KAAN,CAAYvB,KAAK,CAACuB,KAAN,CAAYV,MAAZ,GAAmB,CAA/B,CAAd;IACA,IAAId,MAAM,CAACY,OAAP,MAAoB,GAApB,IAA2BjB,IAAI,KAAK,UAApC,IAAkDA,IAAI,IAAI,GAA9D,EAAmEM,KAAK,CAACuB,KAAN,CAAYI,IAAZ,CAAiB,MAAjB,EAAnE,KACK,IAAIjC,IAAI,KAAK,QAAb,EAAuBM,KAAK,CAACuB,KAAN,CAAYvB,KAAK,CAACuB,KAAN,CAAYV,MAAZ,GAAmB,CAA/B,IAAoC,QAApC,CAAvB,KACA,IAAId,MAAM,CAACY,OAAP,MAAoB,GAApB,IAA2BjB,IAAI,IAAI,GAAnC,IAA2CA,IAAI,IAAI,GAAR,IAAegC,OAAO,IAAI,MAAzE,EAAkF1B,KAAK,CAACuB,KAAN,CAAYK,GAAZ,GAAlF,KACA,IAAIlC,IAAI,IAAI,GAAZ,EAAiBM,KAAK,CAACuB,KAAN,CAAYI,IAAZ,CAAiB,GAAjB;IACtB,OAAO/B,KAAP;EACD,CAjBgB;EAmBjBiC,MAAM,EAAE,UAAS7B,KAAT,EAAgB8B,SAAhB,EAA2BC,EAA3B,EAA+B;IACrC,IAAIC,CAAC,GAAGhC,KAAK,CAACuB,KAAN,CAAYV,MAApB;IAEA,IAAIiB,SAAS,CAACG,MAAV,CAAiB,CAAjB,MAAwB,GAA5B,EAAiCD,CAAC,GAAlC,KACK,IAAGF,SAAS,CAAClB,MAAV,CAAiBkB,SAAS,CAACjB,MAAV,GAAiB,CAAlC,EAAqCiB,SAAS,CAACjB,MAA/C,MAA2D,GAA9D,EAAkE;MACrE,IAAGiB,SAAS,CAAClB,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,MAA0B,GAA7B,EAAkC,CAAE,CAApC,MACK,IAAIlB,IAAI,IAAI,UAAR,IAAsBoC,SAAS,CAACjB,MAAV,GAAmB,CAA7C,EAAiD,CAAE,CAAnD,MACA,IAAInB,IAAI,IAAI,UAAZ,EAAuBsC,CAAC,GAAxB,KACA,IAAItC,IAAI,IAAI,GAAR,IAAeoC,SAAS,CAACjB,MAAV,GAAmB,CAAtC,EAAyC,CAAE,CAA3C,MACA,IAAInB,IAAI,IAAI,KAAR,IAAiBoC,SAAS,KAAK,GAAnC,EAAwC,CAAE,CAA1C,MACA,IAAIpC,IAAI,IAAI,KAAR,IAAiBM,KAAK,CAACuB,KAAN,CAAYvB,KAAK,CAACuB,KAAN,CAAYV,MAAZ,GAAmB,CAA/B,KAAqC,MAA1D,EAAiEmB,CAAC,GAAlE,KACA,IAAItC,IAAI,IAAI,KAAZ,EAAkBsC,CAAC,GAAnB,KACA,IAAIF,SAAS,KAAK,GAAd,IAAqB9B,KAAK,CAACuB,KAAN,CAAYvB,KAAK,CAACuB,KAAN,CAAYV,MAAZ,GAAmB,CAA/B,KAAqC,MAA1D,IAAoEnB,IAAI,KAAK,GAAjF,EAAqFsC,CAAC,GAAtF,KACA,IAAIF,SAAS,KAAK,GAAd,IAAqB9B,KAAK,CAACuB,KAAN,CAAYvB,KAAK,CAACuB,KAAN,CAAYV,MAAZ,GAAmB,CAA/B,KAAqC,MAA9D,EAAsE,CAAE,CAAxE,MACA,IAAIiB,SAAS,CAAClB,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,MAA0B,GAA1B,IAAiCkB,SAAS,CAAClB,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,MAA0B,GAA/D,EAAoEoB,CAAC,GAACA,CAAC,GAAC,CAAJ,CAApE,KACA,IAAIF,SAAS,KAAK,GAAlB,EAAuB,CAAE,CAAzB,MACAE,CAAC,GAACA,CAAC,GAAC,CAAJ,CAZgE,CAarE;;;MACA,IAAGtC,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,GAA3B,EAA+BsC,CAAC;IACjC;IAED,OAAOhC,KAAK,CAACsB,UAAN,GAAmBU,CAAC,GAAGD,EAAE,CAACG,IAAjC;EACD,CAzCgB;EA2CjBC,YAAY,EAAE;IACZC,aAAa,EAAE;EADH;AA3CG,CAAZ"},"metadata":{},"sourceType":"module"}