{"ast":null,"code":"import * as React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var italic = {\n  name: 'italic',\n  keyCommand: 'italic',\n  shortcuts: 'ctrlcmd+i',\n  buttonProps: {\n    'aria-label': 'Add italic text',\n    title: 'Add italic text'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 320 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n    })\n  }),\n  execute: (state, api) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange); // Replaces the current selection with the italic mark up\n\n    var state2 = api.replaceSelection(\"*\" + state1.selectedText + \"*\"); // Adjust the selection to not contain the *\n\n    api.setSelectionRange({\n      start: state2.selection.end - 1 - state1.selectedText.length,\n      end: state2.selection.end - 1\n    });\n  }\n};","map":{"version":3,"sources":["../../src/commands/italic.tsx"],"names":["italic","name","keyCommand","shortcuts","buttonProps","title","icon","execute","newSelectionRange","selectWord","text","state","selection","state1","api","state2","start","end"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,SAAA,UAAA,QAAA,wBAAA;;AAEA,OAAO,IAAMA,MAAgB,GAAG;EAC9BC,IAAI,EAD0B,QAAA;EAE9BC,UAAU,EAFoB,QAAA;EAG9BC,SAAS,EAHqB,WAAA;EAI9BC,WAAW,EAAE;IAAE,cAAF,iBAAA;IAAmCC,KAAK,EAAE;EAA1C,CAJiB;EAK9BC,IAAI,EAAA,aACF,IAAA,CAAA,KAAA,EAAA;IAAK,aAAL,QAAA;IAAwB,KAAK,EAA7B,IAAA;IAAmC,MAAM,EAAzC,IAAA;IAA+C,IAAI,EAAnD,KAAA;IAA0D,OAAO,EAAjE,aAAA;IAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;MACE,IAAI,EADN,cAAA;MAEE,CAAC,EAAC;IAFJ,CAAA;EADF,CAAA,CAN4B;EAa9BC,OAAO,EAAE,CAAA,KAAA,EAAA,GAAA,KAA4C;IACnD;IACA,IAAMC,iBAAiB,GAAGC,UAAU,CAAC;MAAEC,IAAI,EAAEC,KAAK,CAAb,IAAA;MAAoBC,SAAS,EAAED,KAAK,CAACC;IAArC,CAAD,CAApC;IACA,IAAMC,MAAM,GAAGC,GAAG,CAAHA,iBAAAA,CAHoC,iBAGpCA,CAAf,CAHmD,CAInD;;IACA,IAAMC,MAAM,GAAGD,GAAG,CAAHA,gBAAAA,CAAAA,MAAyBD,MAAM,CAA/BC,YAAAA,GALoC,GAKpCA,CAAf,CALmD,CAMnD;;IACAA,GAAG,CAAHA,iBAAAA,CAAsB;MACpBE,KAAK,EAAED,MAAM,CAANA,SAAAA,CAAAA,GAAAA,GAAAA,CAAAA,GAA2BF,MAAM,CAANA,YAAAA,CADd,MAAA;MAEpBI,GAAG,EAAEF,MAAM,CAANA,SAAAA,CAAAA,GAAAA,GAAuB;IAFR,CAAtBD;EAID;AAxB6B,CAAzB","sourcesContent":["import * as React from 'react';\nimport { ICommand, TextState, TextAreaTextApi } from './';\nimport { selectWord } from '../utils/markdownUtils';\n\nexport const italic: ICommand = {\n  name: 'italic',\n  keyCommand: 'italic',\n  shortcuts: 'ctrlcmd+i',\n  buttonProps: { 'aria-label': 'Add italic text', title: 'Add italic text' },\n  icon: (\n    <svg data-name=\"italic\" width=\"12\" height=\"12\" role=\"img\" viewBox=\"0 0 320 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n      />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n    const state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the italic mark up\n    const state2 = api.replaceSelection(`*${state1.selectedText}*`);\n    // Adjust the selection to not contain the *\n    api.setSelectionRange({\n      start: state2.selection.end - 1 - state1.selectedText.length,\n      end: state2.selection.end - 1,\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}