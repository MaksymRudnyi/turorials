{"ast":null,"code":"function wordObj(words) {\n  var o = {};\n\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n\n  return o;\n}\n\nvar keywordList = [\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"],\n    keywords = wordObj(keywordList);\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"(\": \")\"\n};\nvar closing = {\n  \"]\": \"[\",\n  \"}\": \"{\",\n  \")\": \"(\"\n};\nvar curPunc;\n\nfunction chain(newtok, stream, state) {\n  state.tokenize.push(newtok);\n  return newtok(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n    state.tokenize.push(readBlockComment);\n    return \"comment\";\n  }\n\n  if (stream.eatSpace()) return null;\n  var ch = stream.next(),\n      m;\n\n  if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n    return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n  } else if (ch == \"/\") {\n    if (regexpAhead(stream)) return chain(readQuoted(ch, \"string.special\", true), stream, state);else return \"operator\";\n  } else if (ch == \"%\") {\n    var style = \"string\",\n        embed = true;\n    if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string.special\";else if (stream.eat(/[wxq]/)) {\n      style = \"string\";\n      embed = false;\n    }\n    var delim = stream.eat(/[^\\w\\s=]/);\n    if (!delim) return \"operator\";\n    if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n    return chain(readQuoted(delim, style, embed, true), stream, state);\n  } else if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n    return chain(readHereDoc(m[2], m[1]), stream, state);\n  } else if (ch == \"0\") {\n    if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n    return \"number\";\n  } else if (/\\d/.test(ch)) {\n    stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n    return \"number\";\n  } else if (ch == \"?\") {\n    while (stream.match(/^\\\\[CM]-/)) {}\n\n    if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n    return \"string\";\n  } else if (ch == \":\") {\n    if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n    if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n    if (stream.eat(/[\\<\\>]/)) {\n      stream.eat(/[\\<\\>]/);\n      return \"atom\";\n    } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n    if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n      return \"atom\";\n    } // Symbols can't start by a digit\n\n\n    if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n      stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n      stream.eat(/[\\?\\!\\=]/);\n      return \"atom\";\n    }\n\n    return \"operator\";\n  } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n    stream.eat(\"@\");\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n    return \"propertyName\";\n  } else if (ch == \"$\") {\n    if (stream.eat(/[a-zA-Z_]/)) {\n      stream.eatWhile(/[\\w]/);\n    } else if (stream.eat(/\\d/)) {\n      stream.eat(/\\d/);\n    } else {\n      stream.next(); // Must be a special global like $: or $!\n    }\n\n    return \"variableName.special\";\n  } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n    stream.eat(/[\\?\\!]/);\n    if (stream.eat(\":\")) return \"atom\";\n    return \"variable\";\n  } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n    curPunc = \"|\";\n    return null;\n  } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  } else if (ch == \"-\" && stream.eat(\">\")) {\n    return \"operator\";\n  } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n    var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n    if (ch == \".\" && !more) curPunc = \".\";\n    return \"operator\";\n  } else {\n    return null;\n  }\n}\n\nfunction regexpAhead(stream) {\n  var start = stream.pos,\n      depth = 0,\n      next,\n      found = false,\n      escaped = false;\n\n  while ((next = stream.next()) != null) {\n    if (!escaped) {\n      if (\"[{(\".indexOf(next) > -1) {\n        depth++;\n      } else if (\"]})\".indexOf(next) > -1) {\n        depth--;\n        if (depth < 0) break;\n      } else if (next == \"/\" && depth == 0) {\n        found = true;\n        break;\n      }\n\n      escaped = next == \"\\\\\";\n    } else {\n      escaped = false;\n    }\n  }\n\n  stream.backUp(stream.pos - start);\n  return found;\n}\n\nfunction tokenBaseUntilBrace(depth) {\n  if (!depth) depth = 1;\n  return function (stream, state) {\n    if (stream.peek() == \"}\") {\n      if (depth == 1) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length - 1](stream, state);\n      } else {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n      }\n    } else if (stream.peek() == \"{\") {\n      state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n    }\n\n    return tokenBase(stream, state);\n  };\n}\n\nfunction tokenBaseOnce() {\n  var alreadyCalled = false;\n  return function (stream, state) {\n    if (alreadyCalled) {\n      state.tokenize.pop();\n      return state.tokenize[state.tokenize.length - 1](stream, state);\n    }\n\n    alreadyCalled = true;\n    return tokenBase(stream, state);\n  };\n}\n\nfunction readQuoted(quote, style, embed, unescaped) {\n  return function (stream, state) {\n    var escaped = false,\n        ch;\n\n    if (state.context.type === 'read-quoted-paused') {\n      state.context = state.context.prev;\n      stream.eat(\"}\");\n    }\n\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && (unescaped || !escaped)) {\n        state.tokenize.pop();\n        break;\n      }\n\n      if (embed && ch == \"#\" && !escaped) {\n        if (stream.eat(\"{\")) {\n          if (quote == \"}\") {\n            state.context = {\n              prev: state.context,\n              type: 'read-quoted-paused'\n            };\n          }\n\n          state.tokenize.push(tokenBaseUntilBrace());\n          break;\n        } else if (/[@\\$]/.test(stream.peek())) {\n          state.tokenize.push(tokenBaseOnce());\n          break;\n        }\n      }\n\n      escaped = !escaped && ch == \"\\\\\";\n    }\n\n    return style;\n  };\n}\n\nfunction readHereDoc(phrase, mayIndent) {\n  return function (stream, state) {\n    if (mayIndent) stream.eatSpace();\n    if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n    return \"string\";\n  };\n}\n\nfunction readBlockComment(stream, state) {\n  if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n  stream.skipToEnd();\n  return \"comment\";\n}\n\nexport const ruby = {\n  startState: function (indentUnit) {\n    return {\n      tokenize: [tokenBase],\n      indented: 0,\n      context: {\n        type: \"top\",\n        indented: -indentUnit\n      },\n      continuedLine: false,\n      lastTok: null,\n      varList: false\n    };\n  },\n  token: function (stream, state) {\n    curPunc = null;\n    if (stream.sol()) state.indented = stream.indentation();\n    var style = state.tokenize[state.tokenize.length - 1](stream, state),\n        kwtype;\n    var thisTok = curPunc;\n\n    if (style == \"variable\") {\n      var word = stream.current();\n      style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n      if (style == \"keyword\") {\n        thisTok = word;\n        if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n      }\n    }\n\n    if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n    if (curPunc == \"|\") state.varList = !state.varList;\n    if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n      prev: state.context,\n      type: curPunc || style,\n      indented: state.indented\n    };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n    if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    if (state.tokenize[state.tokenize.length - 1] != tokenBase) return null;\n    var firstChar = textAfter && textAfter.charAt(0);\n    var ct = state.context;\n    var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n    return ct.indented + (closed ? 0 : cx.unit) + (state.continuedLine ? cx.unit : 0);\n  },\n  languageData: {\n    indentOnInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    commentTokens: {\n      line: \"#\"\n    },\n    autocomplete: keywordList\n  }\n};","map":{"version":3,"names":["wordObj","words","o","i","e","length","keywordList","keywords","indentWords","dedentWords","opening","closing","curPunc","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","ch","next","m","readQuoted","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","backUp","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","ruby","startState","indentUnit","indented","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","cx","firstChar","charAt","ct","closed","unit","languageData","indentOnInput","commentTokens","line","autocomplete"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/ruby.js"],"sourcesContent":["function wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nvar curPunc;\n\nfunction chain(newtok, stream, state) {\n  state.tokenize.push(newtok);\n  return newtok(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n    state.tokenize.push(readBlockComment);\n    return \"comment\";\n  }\n  if (stream.eatSpace()) return null;\n  var ch = stream.next(), m;\n  if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n    return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n  } else if (ch == \"/\") {\n    if (regexpAhead(stream))\n      return chain(readQuoted(ch, \"string.special\", true), stream, state);\n    else\n      return \"operator\";\n  } else if (ch == \"%\") {\n    var style = \"string\", embed = true;\n    if (stream.eat(\"s\")) style = \"atom\";\n    else if (stream.eat(/[WQ]/)) style = \"string\";\n    else if (stream.eat(/[r]/)) style = \"string.special\";\n    else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n    var delim = stream.eat(/[^\\w\\s=]/);\n    if (!delim) return \"operator\";\n    if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n    return chain(readQuoted(delim, style, embed, true), stream, state);\n  } else if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n    return chain(readHereDoc(m[2], m[1]), stream, state);\n  } else if (ch == \"0\") {\n    if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n    else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n    else stream.eatWhile(/[0-7]/);\n    return \"number\";\n  } else if (/\\d/.test(ch)) {\n    stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n    return \"number\";\n  } else if (ch == \"?\") {\n    while (stream.match(/^\\\\[CM]-/)) {}\n    if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n    else stream.next();\n    return \"string\";\n  } else if (ch == \":\") {\n    if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n    if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n    // :> :>> :< :<< are valid symbols\n    if (stream.eat(/[\\<\\>]/)) {\n      stream.eat(/[\\<\\>]/);\n      return \"atom\";\n    }\n\n    // :+ :- :/ :* :| :& :! are valid symbols\n    if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n      return \"atom\";\n    }\n\n    // Symbols can't start by a digit\n    if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n      stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n      // Only one ? ! = is allowed and only as the last character\n      stream.eat(/[\\?\\!\\=]/);\n      return \"atom\";\n    }\n    return \"operator\";\n  } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n    stream.eat(\"@\");\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n    return \"propertyName\";\n  } else if (ch == \"$\") {\n    if (stream.eat(/[a-zA-Z_]/)) {\n      stream.eatWhile(/[\\w]/);\n    } else if (stream.eat(/\\d/)) {\n      stream.eat(/\\d/);\n    } else {\n      stream.next(); // Must be a special global like $: or $!\n    }\n    return \"variableName.special\";\n  } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n    stream.eat(/[\\?\\!]/);\n    if (stream.eat(\":\")) return \"atom\";\n    return \"variable\";\n  } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n    curPunc = \"|\";\n    return null;\n  } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  } else if (ch == \"-\" && stream.eat(\">\")) {\n    return \"operator\";\n  } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n    var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n    if (ch == \".\" && !more) curPunc = \".\";\n    return \"operator\";\n  } else {\n    return null;\n  }\n}\n\nfunction regexpAhead(stream) {\n  var start = stream.pos, depth = 0, next, found = false, escaped = false\n  while ((next = stream.next()) != null) {\n    if (!escaped) {\n      if (\"[{(\".indexOf(next) > -1) {\n        depth++\n      } else if (\"]})\".indexOf(next) > -1) {\n        depth--\n        if (depth < 0) break\n      } else if (next == \"/\" && depth == 0) {\n        found = true\n        break\n      }\n      escaped = next == \"\\\\\"\n    } else {\n      escaped = false\n    }\n  }\n  stream.backUp(stream.pos - start)\n  return found\n}\n\nfunction tokenBaseUntilBrace(depth) {\n  if (!depth) depth = 1;\n  return function(stream, state) {\n    if (stream.peek() == \"}\") {\n      if (depth == 1) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      } else {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n      }\n    } else if (stream.peek() == \"{\") {\n      state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n    }\n    return tokenBase(stream, state);\n  };\n}\nfunction tokenBaseOnce() {\n  var alreadyCalled = false;\n  return function(stream, state) {\n    if (alreadyCalled) {\n      state.tokenize.pop();\n      return state.tokenize[state.tokenize.length-1](stream, state);\n    }\n    alreadyCalled = true;\n    return tokenBase(stream, state);\n  };\n}\nfunction readQuoted(quote, style, embed, unescaped) {\n  return function(stream, state) {\n    var escaped = false, ch;\n\n    if (state.context.type === 'read-quoted-paused') {\n      state.context = state.context.prev;\n      stream.eat(\"}\");\n    }\n\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && (unescaped || !escaped)) {\n        state.tokenize.pop();\n        break;\n      }\n      if (embed && ch == \"#\" && !escaped) {\n        if (stream.eat(\"{\")) {\n          if (quote == \"}\") {\n            state.context = {prev: state.context, type: 'read-quoted-paused'};\n          }\n          state.tokenize.push(tokenBaseUntilBrace());\n          break;\n        } else if (/[@\\$]/.test(stream.peek())) {\n          state.tokenize.push(tokenBaseOnce());\n          break;\n        }\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    return style;\n  };\n}\nfunction readHereDoc(phrase, mayIndent) {\n  return function(stream, state) {\n    if (mayIndent) stream.eatSpace()\n    if (stream.match(phrase)) state.tokenize.pop();\n    else stream.skipToEnd();\n    return \"string\";\n  };\n}\nfunction readBlockComment(stream, state) {\n  if (stream.sol() && stream.match(\"=end\") && stream.eol())\n    state.tokenize.pop();\n  stream.skipToEnd();\n  return \"comment\";\n}\n\nexport const ruby = {\n  startState: function(indentUnit) {\n    return {tokenize: [tokenBase],\n            indented: 0,\n            context: {type: \"top\", indented: -indentUnit},\n            continuedLine: false,\n            lastTok: null,\n            varList: false};\n  },\n\n  token: function(stream, state) {\n    curPunc = null;\n    if (stream.sol()) state.indented = stream.indentation();\n    var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n    var thisTok = curPunc;\n    if (style == \"variable\") {\n      var word = stream.current();\n      style = state.lastTok == \".\" ? \"property\"\n        : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n        : /^[A-Z]/.test(word) ? \"tag\"\n        : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n        : \"variable\";\n      if (style == \"keyword\") {\n        thisTok = word;\n        if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n        else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n        else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n          kwtype = \"indent\";\n        else if (word == \"do\" && state.context.indented < state.indented)\n          kwtype = \"indent\";\n      }\n    }\n    if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n    if (curPunc == \"|\") state.varList = !state.varList;\n\n    if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n      state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n    else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n      state.context = state.context.prev;\n\n    if (stream.eol())\n      state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize[state.tokenize.length-1] != tokenBase) return null;\n    var firstChar = textAfter && textAfter.charAt(0);\n    var ct = state.context;\n    var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n    return ct.indented + (closed ? 0 : cx.unit) +\n      (state.continuedLine ? cx.unit : 0);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    commentTokens: {line: \"#\"},\n    autocomplete: keywordList\n  }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}