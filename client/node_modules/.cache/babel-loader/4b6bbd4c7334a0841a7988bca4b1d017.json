{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\ngroovy.displayName = 'groovy';\ngroovy.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function groovy(Prism) {\n  Prism.register(refractorClike);\n\n  (function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n\n        }\n      }\n    };\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    });\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    });\n    interpolation.inside.expression.inside = Prism.languages.groovy;\n  })(Prism);\n}","map":{"version":3,"names":["refractorClike","groovy","displayName","aliases","Prism","register","interpolation","pattern","lookbehind","inside","alias","expression","languages","extend","string","greedy","keyword","number","operator","punctuation","insertBefore","shebang","annotation"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/groovy.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    }\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.groovy\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACpCA,KAAK,CAACC,QAAN,CAAeL,cAAf;;EACC,CAAC,UAAUI,KAAV,EAAiB;IACjB,IAAIE,aAAa,GAAG;MAClBC,OAAO,EAAE,8CADS;MAElBC,UAAU,EAAE,IAFM;MAGlBC,MAAM,EAAE;QACN,6BAA6B;UAC3BF,OAAO,EAAE,YADkB;UAE3BG,KAAK,EAAE;QAFoB,CADvB;QAKNC,UAAU,EAAE;UACVJ,OAAO,EAAE,SADC;UAEVE,MAAM,EAAE,IAFE,CAEG;;QAFH;MALN;IAHU,CAApB;IAcAL,KAAK,CAACQ,SAAN,CAAgBX,MAAhB,GAAyBG,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;MACvDC,MAAM,EAAE;QACN;QACAP,OAAO,EAAE,kDAFH;QAGNQ,MAAM,EAAE;MAHF,CAD+C;MAMvDC,OAAO,EACL,4WAPqD;MAQvDC,MAAM,EACJ,4FATqD;MAUvDC,QAAQ,EAAE;QACRX,OAAO,EACL,mJAFM;QAGRC,UAAU,EAAE;MAHJ,CAV6C;MAevDW,WAAW,EAAE;IAf0C,CAAhC,CAAzB;IAiBAf,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;MAC/CC,OAAO,EAAE;QACPd,OAAO,EAAE,MADF;QAEPG,KAAK,EAAE,SAFA;QAGPK,MAAM,EAAE;MAHD,CADsC;MAM/C,wBAAwB;QACtB;QACA;QACAR,OAAO,EACL,6GAJoB;QAKtBQ,MAAM,EAAE,IALc;QAMtBN,MAAM,EAAE;UACNH,aAAa,EAAEA,aADT;UAENQ,MAAM,EAAE;QAFF;MANc;IANuB,CAAjD;IAkBAV,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD;MACpD,eAAe;IADqC,CAAtD;IAGAhB,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,UAAvC,EAAmD;MACjDE,UAAU,EAAE;QACVf,OAAO,EAAE,cADC;QAEVC,UAAU,EAAE,IAFF;QAGVE,KAAK,EAAE;MAHG;IADqC,CAAnD;IAOAJ,aAAa,CAACG,MAAd,CAAqBE,UAArB,CAAgCF,MAAhC,GAAyCL,KAAK,CAACQ,SAAN,CAAgBX,MAAzD;EACD,CA7DA,EA6DEG,KA7DF;AA8DF"},"metadata":{},"sourceType":"module"}