{"ast":null,"code":"function mlLike(parserConfig) {\n  var words = {\n    'as': 'keyword',\n    'do': 'keyword',\n    'else': 'keyword',\n    'end': 'keyword',\n    'exception': 'keyword',\n    'fun': 'keyword',\n    'functor': 'keyword',\n    'if': 'keyword',\n    'in': 'keyword',\n    'include': 'keyword',\n    'let': 'keyword',\n    'of': 'keyword',\n    'open': 'keyword',\n    'rec': 'keyword',\n    'struct': 'keyword',\n    'then': 'keyword',\n    'type': 'keyword',\n    'val': 'keyword',\n    'while': 'keyword',\n    'with': 'keyword'\n  };\n  var extraWords = parserConfig.extraWords || {};\n\n  for (var prop in extraWords) {\n    if (extraWords.hasOwnProperty(prop)) {\n      words[prop] = parserConfig.extraWords[prop];\n    }\n  }\n\n  var hintWords = [];\n\n  for (var k in words) {\n    hintWords.push(k);\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n\n    if (ch === '{') {\n      if (stream.eat('|')) {\n        state.longString = true;\n        state.tokenize = tokenLongString;\n        return state.tokenize(stream, state);\n      }\n    }\n\n    if (ch === '(') {\n      if (stream.match(/^\\*(?!\\))/)) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n\n    if (ch === '~' || ch === '?') {\n      stream.eatWhile(/\\w/);\n      return 'variableName.special';\n    }\n\n    if (ch === '`') {\n      stream.eatWhile(/\\w/);\n      return 'quote';\n    }\n\n    if (ch === '/' && parserConfig.slashComments && stream.eat('/')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    if (/\\d/.test(ch)) {\n      if (ch === '0' && stream.eat(/[bB]/)) {\n        stream.eatWhile(/[01]/);\n      }\n\n      if (ch === '0' && stream.eat(/[xX]/)) {\n        stream.eatWhile(/[0-9a-fA-F]/);\n      }\n\n      if (ch === '0' && stream.eat(/[oO]/)) {\n        stream.eatWhile(/[0-7]/);\n      } else {\n        stream.eatWhile(/[\\d_]/);\n\n        if (stream.eat('.')) {\n          stream.eatWhile(/[\\d]/);\n        }\n\n        if (stream.eat(/[eE]/)) {\n          stream.eatWhile(/[\\d\\-+]/);\n        }\n      }\n\n      return 'number';\n    }\n\n    if (/[+\\-*&%=<>!?|@\\.~:]/.test(ch)) {\n      return 'operator';\n    }\n\n    if (/[\\w\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      var cur = stream.current();\n      return words.hasOwnProperty(cur) ? words[cur] : 'variable';\n    }\n\n    return null;\n  }\n\n  function tokenString(stream, state) {\n    var next,\n        end = false,\n        escaped = false;\n\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n\n      escaped = !escaped && next === '\\\\';\n    }\n\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n\n    return 'string';\n  }\n\n  ;\n\n  function tokenComment(stream, state) {\n    var prev, next;\n\n    while (state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n\n    return 'comment';\n  }\n\n  function tokenLongString(stream, state) {\n    var prev, next;\n\n    while (state.longString && (next = stream.next()) != null) {\n      if (prev === '|' && next === '}') state.longString = false;\n      prev = next;\n    }\n\n    if (!state.longString) {\n      state.tokenize = tokenBase;\n    }\n\n    return 'string';\n  }\n\n  return {\n    startState: function () {\n      return {\n        tokenize: tokenBase,\n        commentLevel: 0,\n        longString: false\n      };\n    },\n    token: function (stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n    languageData: {\n      autocomplete: hintWords,\n      commentTokens: {\n        line: parserConfig.slashComments ? \"//\" : undefined,\n        block: {\n          open: \"(*\",\n          close: \"*)\"\n        }\n      }\n    }\n  };\n}\n\n;\nexport const oCaml = mlLike({\n  extraWords: {\n    'and': 'keyword',\n    'assert': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'constraint': 'keyword',\n    'done': 'keyword',\n    'downto': 'keyword',\n    'external': 'keyword',\n    'function': 'keyword',\n    'initializer': 'keyword',\n    'lazy': 'keyword',\n    'match': 'keyword',\n    'method': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'new': 'keyword',\n    'nonrec': 'keyword',\n    'object': 'keyword',\n    'private': 'keyword',\n    'sig': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'value': 'keyword',\n    'virtual': 'keyword',\n    'when': 'keyword',\n    // builtins\n    'raise': 'builtin',\n    'failwith': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n    // Pervasives builtins\n    'asr': 'builtin',\n    'land': 'builtin',\n    'lor': 'builtin',\n    'lsl': 'builtin',\n    'lsr': 'builtin',\n    'lxor': 'builtin',\n    'mod': 'builtin',\n    'or': 'builtin',\n    // More Pervasives\n    'raise_notrace': 'builtin',\n    'trace': 'builtin',\n    'exit': 'builtin',\n    'print_string': 'builtin',\n    'print_endline': 'builtin',\n    'int': 'type',\n    'float': 'type',\n    'bool': 'type',\n    'char': 'type',\n    'string': 'type',\n    'unit': 'type',\n    // Modules\n    'List': 'builtin'\n  }\n});\nexport const fSharp = mlLike({\n  extraWords: {\n    'abstract': 'keyword',\n    'assert': 'keyword',\n    'base': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'default': 'keyword',\n    'delegate': 'keyword',\n    'do!': 'keyword',\n    'done': 'keyword',\n    'downcast': 'keyword',\n    'downto': 'keyword',\n    'elif': 'keyword',\n    'extern': 'keyword',\n    'finally': 'keyword',\n    'for': 'keyword',\n    'function': 'keyword',\n    'global': 'keyword',\n    'inherit': 'keyword',\n    'inline': 'keyword',\n    'interface': 'keyword',\n    'internal': 'keyword',\n    'lazy': 'keyword',\n    'let!': 'keyword',\n    'match': 'keyword',\n    'member': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'namespace': 'keyword',\n    'new': 'keyword',\n    'null': 'keyword',\n    'override': 'keyword',\n    'private': 'keyword',\n    'public': 'keyword',\n    'return!': 'keyword',\n    'return': 'keyword',\n    'select': 'keyword',\n    'static': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'upcast': 'keyword',\n    'use!': 'keyword',\n    'use': 'keyword',\n    'void': 'keyword',\n    'when': 'keyword',\n    'yield!': 'keyword',\n    'yield': 'keyword',\n    // Reserved words\n    'atomic': 'keyword',\n    'break': 'keyword',\n    'checked': 'keyword',\n    'component': 'keyword',\n    'const': 'keyword',\n    'constraint': 'keyword',\n    'constructor': 'keyword',\n    'continue': 'keyword',\n    'eager': 'keyword',\n    'event': 'keyword',\n    'external': 'keyword',\n    'fixed': 'keyword',\n    'method': 'keyword',\n    'mixin': 'keyword',\n    'object': 'keyword',\n    'parallel': 'keyword',\n    'process': 'keyword',\n    'protected': 'keyword',\n    'pure': 'keyword',\n    'sealed': 'keyword',\n    'tailcall': 'keyword',\n    'trait': 'keyword',\n    'virtual': 'keyword',\n    'volatile': 'keyword',\n    // builtins\n    'List': 'builtin',\n    'Seq': 'builtin',\n    'Map': 'builtin',\n    'Set': 'builtin',\n    'Option': 'builtin',\n    'int': 'builtin',\n    'string': 'builtin',\n    'not': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n    'raise': 'builtin',\n    'failwith': 'builtin'\n  },\n  slashComments: true\n});\nexport const sml = mlLike({\n  extraWords: {\n    'abstype': 'keyword',\n    'and': 'keyword',\n    'andalso': 'keyword',\n    'case': 'keyword',\n    'datatype': 'keyword',\n    'fn': 'keyword',\n    'handle': 'keyword',\n    'infix': 'keyword',\n    'infixr': 'keyword',\n    'local': 'keyword',\n    'nonfix': 'keyword',\n    'op': 'keyword',\n    'orelse': 'keyword',\n    'raise': 'keyword',\n    'withtype': 'keyword',\n    'eqtype': 'keyword',\n    'sharing': 'keyword',\n    'sig': 'keyword',\n    'signature': 'keyword',\n    'structure': 'keyword',\n    'where': 'keyword',\n    'true': 'keyword',\n    'false': 'keyword',\n    // types\n    'int': 'builtin',\n    'real': 'builtin',\n    'string': 'builtin',\n    'char': 'builtin',\n    'bool': 'builtin'\n  },\n  slashComments: true\n});","map":{"version":3,"names":["mlLike","parserConfig","words","extraWords","prop","hasOwnProperty","hintWords","k","push","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","longString","tokenLongString","match","commentLevel","tokenComment","eatWhile","slashComments","skipToEnd","test","cur","current","end","escaped","prev","startState","token","eatSpace","languageData","autocomplete","commentTokens","line","undefined","block","open","close","oCaml","fSharp","sml"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/mllike.js"],"sourcesContent":["function mlLike(parserConfig) {\n  var words = {\n    'as': 'keyword',\n    'do': 'keyword',\n    'else': 'keyword',\n    'end': 'keyword',\n    'exception': 'keyword',\n    'fun': 'keyword',\n    'functor': 'keyword',\n    'if': 'keyword',\n    'in': 'keyword',\n    'include': 'keyword',\n    'let': 'keyword',\n    'of': 'keyword',\n    'open': 'keyword',\n    'rec': 'keyword',\n    'struct': 'keyword',\n    'then': 'keyword',\n    'type': 'keyword',\n    'val': 'keyword',\n    'while': 'keyword',\n    'with': 'keyword'\n  };\n\n  var extraWords = parserConfig.extraWords || {};\n  for (var prop in extraWords) {\n    if (extraWords.hasOwnProperty(prop)) {\n      words[prop] = parserConfig.extraWords[prop];\n    }\n  }\n  var hintWords = [];\n  for (var k in words) { hintWords.push(k); }\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n    if (ch === '{') {\n      if (stream.eat('|')) {\n        state.longString = true;\n        state.tokenize = tokenLongString;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '(') {\n      if (stream.match(/^\\*(?!\\))/)) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '~' || ch === '?') {\n      stream.eatWhile(/\\w/);\n      return 'variableName.special';\n    }\n    if (ch === '`') {\n      stream.eatWhile(/\\w/);\n      return 'quote';\n    }\n    if (ch === '/' && parserConfig.slashComments && stream.eat('/')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n    if (/\\d/.test(ch)) {\n      if (ch === '0' && stream.eat(/[bB]/)) {\n        stream.eatWhile(/[01]/);\n      } if (ch === '0' && stream.eat(/[xX]/)) {\n        stream.eatWhile(/[0-9a-fA-F]/)\n      } if (ch === '0' && stream.eat(/[oO]/)) {\n        stream.eatWhile(/[0-7]/);\n      } else {\n        stream.eatWhile(/[\\d_]/);\n        if (stream.eat('.')) {\n          stream.eatWhile(/[\\d]/);\n        }\n        if (stream.eat(/[eE]/)) {\n          stream.eatWhile(/[\\d\\-+]/);\n        }\n      }\n      return 'number';\n    }\n    if ( /[+\\-*&%=<>!?|@\\.~:]/.test(ch)) {\n      return 'operator';\n    }\n    if (/[\\w\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      var cur = stream.current();\n      return words.hasOwnProperty(cur) ? words[cur] : 'variable';\n    }\n    return null\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while(state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n    return 'comment';\n  }\n\n  function tokenLongString(stream, state) {\n    var prev, next;\n    while (state.longString && (next = stream.next()) != null) {\n      if (prev === '|' && next === '}') state.longString = false;\n      prev = next;\n    }\n    if (!state.longString) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  }\n\n  return {\n    startState: function() {return {tokenize: tokenBase, commentLevel: 0, longString: false};},\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n\n    languageData: {\n      autocomplete: hintWords,\n      commentTokens: {\n        line: parserConfig.slashComments ? \"//\" : undefined,\n        block: {open: \"(*\", close: \"*)\"}\n      }\n    }\n  };\n};\n\nexport const oCaml = mlLike({\n  extraWords: {\n    'and': 'keyword',\n    'assert': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'constraint': 'keyword',\n    'done': 'keyword',\n    'downto': 'keyword',\n    'external': 'keyword',\n    'function': 'keyword',\n    'initializer': 'keyword',\n    'lazy': 'keyword',\n    'match': 'keyword',\n    'method': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'new': 'keyword',\n    'nonrec': 'keyword',\n    'object': 'keyword',\n    'private': 'keyword',\n    'sig': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'value': 'keyword',\n    'virtual': 'keyword',\n    'when': 'keyword',\n\n    // builtins\n    'raise': 'builtin',\n    'failwith': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n\n    // Pervasives builtins\n    'asr': 'builtin',\n    'land': 'builtin',\n    'lor': 'builtin',\n    'lsl': 'builtin',\n    'lsr': 'builtin',\n    'lxor': 'builtin',\n    'mod': 'builtin',\n    'or': 'builtin',\n\n    // More Pervasives\n    'raise_notrace': 'builtin',\n    'trace': 'builtin',\n    'exit': 'builtin',\n    'print_string': 'builtin',\n    'print_endline': 'builtin',\n\n     'int': 'type',\n     'float': 'type',\n     'bool': 'type',\n     'char': 'type',\n     'string': 'type',\n     'unit': 'type',\n\n     // Modules\n     'List': 'builtin'\n  }\n});\n\nexport const fSharp = mlLike({\n  extraWords: {\n    'abstract': 'keyword',\n    'assert': 'keyword',\n    'base': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'default': 'keyword',\n    'delegate': 'keyword',\n    'do!': 'keyword',\n    'done': 'keyword',\n    'downcast': 'keyword',\n    'downto': 'keyword',\n    'elif': 'keyword',\n    'extern': 'keyword',\n    'finally': 'keyword',\n    'for': 'keyword',\n    'function': 'keyword',\n    'global': 'keyword',\n    'inherit': 'keyword',\n    'inline': 'keyword',\n    'interface': 'keyword',\n    'internal': 'keyword',\n    'lazy': 'keyword',\n    'let!': 'keyword',\n    'match': 'keyword',\n    'member': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'namespace': 'keyword',\n    'new': 'keyword',\n    'null': 'keyword',\n    'override': 'keyword',\n    'private': 'keyword',\n    'public': 'keyword',\n    'return!': 'keyword',\n    'return': 'keyword',\n    'select': 'keyword',\n    'static': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'upcast': 'keyword',\n    'use!': 'keyword',\n    'use': 'keyword',\n    'void': 'keyword',\n    'when': 'keyword',\n    'yield!': 'keyword',\n    'yield': 'keyword',\n\n    // Reserved words\n    'atomic': 'keyword',\n    'break': 'keyword',\n    'checked': 'keyword',\n    'component': 'keyword',\n    'const': 'keyword',\n    'constraint': 'keyword',\n    'constructor': 'keyword',\n    'continue': 'keyword',\n    'eager': 'keyword',\n    'event': 'keyword',\n    'external': 'keyword',\n    'fixed': 'keyword',\n    'method': 'keyword',\n    'mixin': 'keyword',\n    'object': 'keyword',\n    'parallel': 'keyword',\n    'process': 'keyword',\n    'protected': 'keyword',\n    'pure': 'keyword',\n    'sealed': 'keyword',\n    'tailcall': 'keyword',\n    'trait': 'keyword',\n    'virtual': 'keyword',\n    'volatile': 'keyword',\n\n    // builtins\n    'List': 'builtin',\n    'Seq': 'builtin',\n    'Map': 'builtin',\n    'Set': 'builtin',\n    'Option': 'builtin',\n    'int': 'builtin',\n    'string': 'builtin',\n    'not': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n\n    'raise': 'builtin',\n    'failwith': 'builtin'\n  },\n  slashComments: true\n});\n\nexport const sml = mlLike({\n  extraWords: {\n    'abstype': 'keyword',\n    'and': 'keyword',\n    'andalso': 'keyword',\n    'case': 'keyword',\n    'datatype': 'keyword',\n    'fn': 'keyword',\n    'handle': 'keyword',\n    'infix': 'keyword',\n    'infixr': 'keyword',\n    'local': 'keyword',\n    'nonfix': 'keyword',\n    'op': 'keyword',\n    'orelse': 'keyword',\n    'raise': 'keyword',\n    'withtype': 'keyword',\n    'eqtype': 'keyword',\n    'sharing': 'keyword',\n    'sig': 'keyword',\n    'signature': 'keyword',\n    'structure': 'keyword',\n    'where': 'keyword',\n    'true': 'keyword',\n    'false': 'keyword',\n\n    // types\n    'int': 'builtin',\n    'real': 'builtin',\n    'string': 'builtin',\n    'char': 'builtin',\n    'bool': 'builtin'\n  },\n  slashComments: true\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}