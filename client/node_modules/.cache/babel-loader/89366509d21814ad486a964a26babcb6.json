{"ast":null,"code":"var builtInFuncs = {\n  \"+\": [\"conjugate\", \"add\"],\n  \"−\": [\"negate\", \"subtract\"],\n  \"×\": [\"signOf\", \"multiply\"],\n  \"÷\": [\"reciprocal\", \"divide\"],\n  \"⌈\": [\"ceiling\", \"greaterOf\"],\n  \"⌊\": [\"floor\", \"lesserOf\"],\n  \"∣\": [\"absolute\", \"residue\"],\n  \"⍳\": [\"indexGenerate\", \"indexOf\"],\n  \"?\": [\"roll\", \"deal\"],\n  \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n  \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n  \"○\": [\"piTimes\", \"circularFuncs\"],\n  \"!\": [\"factorial\", \"binomial\"],\n  \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n  \"<\": [null, \"lessThan\"],\n  \"≤\": [null, \"lessThanOrEqual\"],\n  \"=\": [null, \"equals\"],\n  \">\": [null, \"greaterThan\"],\n  \"≥\": [null, \"greaterThanOrEqual\"],\n  \"≠\": [null, \"notEqual\"],\n  \"≡\": [\"depth\", \"match\"],\n  \"≢\": [null, \"notMatch\"],\n  \"∈\": [\"enlist\", \"membership\"],\n  \"⍷\": [null, \"find\"],\n  \"∪\": [\"unique\", \"union\"],\n  \"∩\": [null, \"intersection\"],\n  \"∼\": [\"not\", \"without\"],\n  \"∨\": [null, \"or\"],\n  \"∧\": [null, \"and\"],\n  \"⍱\": [null, \"nor\"],\n  \"⍲\": [null, \"nand\"],\n  \"⍴\": [\"shapeOf\", \"reshape\"],\n  \",\": [\"ravel\", \"catenate\"],\n  \"⍪\": [null, \"firstAxisCatenate\"],\n  \"⌽\": [\"reverse\", \"rotate\"],\n  \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n  \"⍉\": [\"transpose\", null],\n  \"↑\": [\"first\", \"take\"],\n  \"↓\": [null, \"drop\"],\n  \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n  \"⊃\": [\"diclose\", \"pick\"],\n  \"⌷\": [null, \"index\"],\n  \"⍋\": [\"gradeUp\", null],\n  \"⍒\": [\"gradeDown\", null],\n  \"⊤\": [\"encode\", null],\n  \"⊥\": [\"decode\", null],\n  \"⍕\": [\"format\", \"formatByExample\"],\n  \"⍎\": [\"execute\", null],\n  \"⊣\": [\"stop\", \"left\"],\n  \"⊢\": [\"pass\", \"right\"]\n};\nvar isOperator = /[\\.\\/⌿⍀¨⍣]/;\nvar isNiladic = /⍬/;\nvar isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\nvar isArrow = /←/;\nvar isComment = /[⍝#].*$/;\n\nvar stringEater = function (type) {\n  var prev;\n  prev = false;\n  return function (c) {\n    prev = c;\n\n    if (c === type) {\n      return prev === \"\\\\\";\n    }\n\n    return true;\n  };\n};\n\nexport const apl = {\n  startState: function () {\n    return {\n      prev: false,\n      func: false,\n      op: false,\n      string: false,\n      escape: false\n    };\n  },\n  token: function (stream, state) {\n    var ch;\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    ch = stream.next();\n\n    if (ch === '\"' || ch === \"'\") {\n      stream.eatWhile(stringEater(ch));\n      stream.next();\n      state.prev = true;\n      return \"string\";\n    }\n\n    if (/[\\[{\\(]/.test(ch)) {\n      state.prev = false;\n      return null;\n    }\n\n    if (/[\\]}\\)]/.test(ch)) {\n      state.prev = true;\n      return null;\n    }\n\n    if (isNiladic.test(ch)) {\n      state.prev = false;\n      return \"atom\";\n    }\n\n    if (/[¯\\d]/.test(ch)) {\n      if (state.func) {\n        state.func = false;\n        state.prev = false;\n      } else {\n        state.prev = true;\n      }\n\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n\n    if (isOperator.test(ch)) {\n      return \"operator\";\n    }\n\n    if (isArrow.test(ch)) {\n      return \"operator\";\n    }\n\n    if (isFunction.test(ch)) {\n      state.func = true;\n      state.prev = false;\n      return builtInFuncs[ch] ? \"variableName.function.standard\" : \"variableName.function\";\n    }\n\n    if (isComment.test(ch)) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch === \"∘\" && stream.peek() === \".\") {\n      stream.next();\n      return \"variableName.function\";\n    }\n\n    stream.eatWhile(/[\\w\\$_]/);\n    state.prev = true;\n    return \"keyword\";\n  }\n};","map":{"version":3,"names":["builtInFuncs","isOperator","isNiladic","isFunction","isArrow","isComment","stringEater","type","prev","c","apl","startState","func","op","string","escape","token","stream","state","ch","eatSpace","next","eatWhile","test","skipToEnd","peek"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/apl.js"],"sourcesContent":["var builtInFuncs = {\n  \"+\": [\"conjugate\", \"add\"],\n  \"−\": [\"negate\", \"subtract\"],\n  \"×\": [\"signOf\", \"multiply\"],\n  \"÷\": [\"reciprocal\", \"divide\"],\n  \"⌈\": [\"ceiling\", \"greaterOf\"],\n  \"⌊\": [\"floor\", \"lesserOf\"],\n  \"∣\": [\"absolute\", \"residue\"],\n  \"⍳\": [\"indexGenerate\", \"indexOf\"],\n  \"?\": [\"roll\", \"deal\"],\n  \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n  \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n  \"○\": [\"piTimes\", \"circularFuncs\"],\n  \"!\": [\"factorial\", \"binomial\"],\n  \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n  \"<\": [null, \"lessThan\"],\n  \"≤\": [null, \"lessThanOrEqual\"],\n  \"=\": [null, \"equals\"],\n  \">\": [null, \"greaterThan\"],\n  \"≥\": [null, \"greaterThanOrEqual\"],\n  \"≠\": [null, \"notEqual\"],\n  \"≡\": [\"depth\", \"match\"],\n  \"≢\": [null, \"notMatch\"],\n  \"∈\": [\"enlist\", \"membership\"],\n  \"⍷\": [null, \"find\"],\n  \"∪\": [\"unique\", \"union\"],\n  \"∩\": [null, \"intersection\"],\n  \"∼\": [\"not\", \"without\"],\n  \"∨\": [null, \"or\"],\n  \"∧\": [null, \"and\"],\n  \"⍱\": [null, \"nor\"],\n  \"⍲\": [null, \"nand\"],\n  \"⍴\": [\"shapeOf\", \"reshape\"],\n  \",\": [\"ravel\", \"catenate\"],\n  \"⍪\": [null, \"firstAxisCatenate\"],\n  \"⌽\": [\"reverse\", \"rotate\"],\n  \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n  \"⍉\": [\"transpose\", null],\n  \"↑\": [\"first\", \"take\"],\n  \"↓\": [null, \"drop\"],\n  \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n  \"⊃\": [\"diclose\", \"pick\"],\n  \"⌷\": [null, \"index\"],\n  \"⍋\": [\"gradeUp\", null],\n  \"⍒\": [\"gradeDown\", null],\n  \"⊤\": [\"encode\", null],\n  \"⊥\": [\"decode\", null],\n  \"⍕\": [\"format\", \"formatByExample\"],\n  \"⍎\": [\"execute\", null],\n  \"⊣\": [\"stop\", \"left\"],\n  \"⊢\": [\"pass\", \"right\"]\n};\n\nvar isOperator = /[\\.\\/⌿⍀¨⍣]/;\nvar isNiladic = /⍬/;\nvar isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\nvar isArrow = /←/;\nvar isComment = /[⍝#].*$/;\n\nvar stringEater = function(type) {\n  var prev;\n  prev = false;\n  return function(c) {\n    prev = c;\n    if (c === type) {\n      return prev === \"\\\\\";\n    }\n    return true;\n  };\n};\n\nexport const apl = {\n  startState: function() {\n    return {\n      prev: false,\n      func: false,\n      op: false,\n      string: false,\n      escape: false\n    };\n  },\n  token: function(stream, state) {\n    var ch;\n    if (stream.eatSpace()) {\n      return null;\n    }\n    ch = stream.next();\n    if (ch === '\"' || ch === \"'\") {\n      stream.eatWhile(stringEater(ch));\n      stream.next();\n      state.prev = true;\n      return \"string\";\n    }\n    if (/[\\[{\\(]/.test(ch)) {\n      state.prev = false;\n      return null;\n    }\n    if (/[\\]}\\)]/.test(ch)) {\n      state.prev = true;\n      return null;\n    }\n    if (isNiladic.test(ch)) {\n      state.prev = false;\n      return \"atom\";\n    }\n    if (/[¯\\d]/.test(ch)) {\n      if (state.func) {\n        state.func = false;\n        state.prev = false;\n      } else {\n        state.prev = true;\n      }\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (isOperator.test(ch)) {\n      return \"operator\"\n    }\n    if (isArrow.test(ch)) {\n      return \"operator\";\n    }\n    if (isFunction.test(ch)) {\n      state.func = true;\n      state.prev = false;\n      return builtInFuncs[ch] ? \"variableName.function.standard\" : \"variableName.function\"\n    }\n    if (isComment.test(ch)) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch === \"∘\" && stream.peek() === \".\") {\n      stream.next();\n      return \"variableName.function\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    state.prev = true;\n    return \"keyword\";\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}