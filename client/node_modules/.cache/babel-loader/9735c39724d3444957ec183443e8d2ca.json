{"ast":null,"code":"'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","map":{"version":3,"names":["destroy","err","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","process","nextTick","emitErrorNT","errorEmitted","_destroy","emitErrorAndCloseNT","emitCloseNT","self","emitClose","emit","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/readable-stream/lib/internal/streams/destroy.js"],"sourcesContent":["'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}