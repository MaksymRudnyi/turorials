{"ast":null,"code":"// Tokenizer\nvar textwords = {};\nvar keywords = {\n  \"allTags\": true,\n  \"closeAll\": true,\n  \"list\": true,\n  \"newJournal\": true,\n  \"newTiddler\": true,\n  \"permaview\": true,\n  \"saveChanges\": true,\n  \"search\": true,\n  \"slider\": true,\n  \"tabs\": true,\n  \"tag\": true,\n  \"tagging\": true,\n  \"tags\": true,\n  \"tiddler\": true,\n  \"timeline\": true,\n  \"today\": true,\n  \"version\": true,\n  \"option\": true,\n  \"with\": true,\n  \"filter\": true\n};\nvar isSpaceName = /[\\w_\\-]/i,\n    reHR = /^\\-\\-\\-\\-+$/,\n    // <hr>\nreWikiCommentStart = /^\\/\\*\\*\\*$/,\n    // /***\nreWikiCommentStop = /^\\*\\*\\*\\/$/,\n    // ***/\nreBlockQuote = /^<<<$/,\n    reJsCodeStart = /^\\/\\/\\{\\{\\{$/,\n    // //{{{ js block start\nreJsCodeStop = /^\\/\\/\\}\\}\\}$/,\n    // //}}} js stop\nreXmlCodeStart = /^<!--\\{\\{\\{-->$/,\n    // xml block start\nreXmlCodeStop = /^<!--\\}\\}\\}-->$/,\n    // xml stop\nreCodeBlockStart = /^\\{\\{\\{$/,\n    // {{{ TW text div block start\nreCodeBlockStop = /^\\}\\}\\}$/,\n    // }}} TW text stop\nreUntilCodeStop = /.*?\\}\\}\\}/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  var sol = stream.sol(),\n      ch = stream.peek();\n  state.block = false; // indicates the start of a code block.\n  // check start of  blocks\n\n  if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n    if (stream.match(reCodeBlockStart)) {\n      state.block = true;\n      return chain(stream, state, twTokenCode);\n    }\n\n    if (stream.match(reBlockQuote)) return 'quote';\n    if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop)) return 'comment';\n    if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop)) return 'comment';\n    if (stream.match(reHR)) return 'contentSeparator';\n  }\n\n  stream.next();\n\n  if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n    if (ch == \"!\") {\n      // tw header\n      stream.skipToEnd();\n      return \"header\";\n    }\n\n    if (ch == \"*\") {\n      // tw list\n      stream.eatWhile('*');\n      return \"comment\";\n    }\n\n    if (ch == \"#\") {\n      // tw numbered list\n      stream.eatWhile('#');\n      return \"comment\";\n    }\n\n    if (ch == \";\") {\n      // definition list, term\n      stream.eatWhile(';');\n      return \"comment\";\n    }\n\n    if (ch == \":\") {\n      // definition list, description\n      stream.eatWhile(':');\n      return \"comment\";\n    }\n\n    if (ch == \">\") {\n      // single line quote\n      stream.eatWhile(\">\");\n      return \"quote\";\n    }\n\n    if (ch == '|') return 'header';\n  }\n\n  if (ch == '{' && stream.match('{{')) return chain(stream, state, twTokenCode); // rudimentary html:// file:// link matching. TW knows much more ...\n\n  if (/[hf]/i.test(ch) && /[ti]/i.test(stream.peek()) && stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i)) return \"link\"; // just a little string indicator, don't want to have the whole string covered\n\n  if (ch == '\"') return 'string';\n  if (ch == '~') // _no_ CamelCase indicator should be bold\n    return 'brace';\n  if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n    return 'brace';\n\n  if (ch == \"@\") {\n    // check for space link. TODO fix @@...@@ highlighting\n    stream.eatWhile(isSpaceName);\n    return \"link\";\n  }\n\n  if (/\\d/.test(ch)) {\n    // numbers\n    stream.eatWhile(/\\d/);\n    return \"number\";\n  }\n\n  if (ch == \"/\") {\n    // tw invisible comment\n    if (stream.eat(\"%\")) {\n      return chain(stream, state, twTokenComment);\n    } else if (stream.eat(\"/\")) {\n      //\n      return chain(stream, state, twTokenEm);\n    }\n  }\n\n  if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n    return chain(stream, state, twTokenUnderline); // strikethrough and mdash handling\n\n  if (ch == \"-\" && stream.eat(\"-\")) {\n    // if strikethrough looks ugly, change CSS.\n    if (stream.peek() != ' ') return chain(stream, state, twTokenStrike); // mdash\n\n    if (stream.peek() == ' ') return 'brace';\n  }\n\n  if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n    return chain(stream, state, twTokenStrong);\n  if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n    return chain(stream, state, twTokenMacro); // core macro handling\n\n  stream.eatWhile(/[\\w\\$_]/);\n  return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null;\n} // tw invisible comment\n\n\nfunction twTokenComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"%\";\n  }\n\n  return \"comment\";\n} // tw strong / bold\n\n\nfunction twTokenStrong(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"'\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"'\";\n  }\n\n  return \"strong\";\n} // tw code\n\n\nfunction twTokenCode(stream, state) {\n  var sb = state.block;\n\n  if (sb && stream.current()) {\n    return \"comment\";\n  }\n\n  if (!sb && stream.match(reUntilCodeStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  stream.next();\n  return \"comment\";\n} // tw em / italic\n\n\nfunction twTokenEm(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"/\";\n  }\n\n  return \"emphasis\";\n} // tw underlined text\n\n\nfunction twTokenUnderline(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"_\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"_\";\n  }\n\n  return \"link\";\n} // tw strike through text looks ugly\n// change CSS if needed\n\n\nfunction twTokenStrike(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"-\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"-\";\n  }\n\n  return \"deleted\";\n} // macro\n\n\nfunction twTokenMacro(stream, state) {\n  if (stream.current() == '<<') {\n    return 'meta';\n  }\n\n  var ch = stream.next();\n\n  if (!ch) {\n    state.tokenize = tokenBase;\n    return null;\n  }\n\n  if (ch == \">\") {\n    if (stream.peek() == '>') {\n      stream.next();\n      state.tokenize = tokenBase;\n      return \"meta\";\n    }\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null;\n} // Interface\n\n\nexport const tiddlyWiki = {\n  startState: function () {\n    return {\n      tokenize: tokenBase\n    };\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  }\n};","map":{"version":3,"names":["textwords","keywords","isSpaceName","reHR","reWikiCommentStart","reWikiCommentStop","reBlockQuote","reJsCodeStart","reJsCodeStop","reXmlCodeStart","reXmlCodeStop","reCodeBlockStart","reCodeBlockStop","reUntilCodeStop","chain","stream","state","f","tokenize","tokenBase","sol","ch","peek","block","test","match","twTokenCode","next","skipToEnd","eatWhile","eat","twTokenComment","twTokenEm","twTokenUnderline","twTokenStrike","twTokenStrong","twTokenMacro","propertyIsEnumerable","current","maybeEnd","sb","tiddlyWiki","startState","token","eatSpace","style"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/tiddlywiki.js"],"sourcesContent":["// Tokenizer\nvar textwords = {};\n\nvar keywords = {\n  \"allTags\": true, \"closeAll\": true, \"list\": true,\n  \"newJournal\": true, \"newTiddler\": true,\n  \"permaview\": true, \"saveChanges\": true,\n  \"search\": true, \"slider\": true, \"tabs\": true,\n  \"tag\": true, \"tagging\": true, \"tags\": true,\n  \"tiddler\": true, \"timeline\": true,\n  \"today\": true, \"version\": true, \"option\": true,\n  \"with\": true, \"filter\": true\n};\n\nvar isSpaceName = /[\\w_\\-]/i,\n    reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n    reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n    reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n    reBlockQuote = /^<<<$/,\n\n    reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n    reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n    reXmlCodeStart = /^<!--\\{\\{\\{-->$/,           // xml block start\n    reXmlCodeStop = /^<!--\\}\\}\\}-->$/,            // xml stop\n\n    reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n    reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n    reUntilCodeStop = /.*?\\}\\}\\}/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  var sol = stream.sol(), ch = stream.peek();\n\n  state.block = false;        // indicates the start of a code block.\n\n  // check start of  blocks\n  if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n    if (stream.match(reCodeBlockStart)) {\n      state.block = true;\n      return chain(stream, state, twTokenCode);\n    }\n    if (stream.match(reBlockQuote))\n      return 'quote';\n    if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop))\n      return 'comment';\n    if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop))\n      return 'comment';\n    if (stream.match(reHR))\n      return 'contentSeparator';\n  }\n\n  stream.next();\n  if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n    if (ch == \"!\") { // tw header\n      stream.skipToEnd();\n      return \"header\";\n    }\n    if (ch == \"*\") { // tw list\n      stream.eatWhile('*');\n      return \"comment\";\n    }\n    if (ch == \"#\") { // tw numbered list\n      stream.eatWhile('#');\n      return \"comment\";\n    }\n    if (ch == \";\") { // definition list, term\n      stream.eatWhile(';');\n      return \"comment\";\n    }\n    if (ch == \":\") { // definition list, description\n      stream.eatWhile(':');\n      return \"comment\";\n    }\n    if (ch == \">\") { // single line quote\n      stream.eatWhile(\">\");\n      return \"quote\";\n    }\n    if (ch == '|')\n      return 'header';\n  }\n\n  if (ch == '{' && stream.match('{{'))\n    return chain(stream, state, twTokenCode);\n\n  // rudimentary html:// file:// link matching. TW knows much more ...\n  if (/[hf]/i.test(ch) &&\n      /[ti]/i.test(stream.peek()) &&\n      stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i))\n    return \"link\";\n\n  // just a little string indicator, don't want to have the whole string covered\n  if (ch == '\"')\n    return 'string';\n\n  if (ch == '~')    // _no_ CamelCase indicator should be bold\n    return 'brace';\n\n  if (/[\\[\\]]/.test(ch) && stream.match(ch)) // check for [[..]]\n    return 'brace';\n\n  if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n    stream.eatWhile(isSpaceName);\n    return \"link\";\n  }\n\n  if (/\\d/.test(ch)) {        // numbers\n    stream.eatWhile(/\\d/);\n    return \"number\";\n  }\n\n  if (ch == \"/\") { // tw invisible comment\n    if (stream.eat(\"%\")) {\n      return chain(stream, state, twTokenComment);\n    } else if (stream.eat(\"/\")) { //\n      return chain(stream, state, twTokenEm);\n    }\n  }\n\n  if (ch == \"_\" && stream.eat(\"_\")) // tw underline\n    return chain(stream, state, twTokenUnderline);\n\n  // strikethrough and mdash handling\n  if (ch == \"-\" && stream.eat(\"-\")) {\n    // if strikethrough looks ugly, change CSS.\n    if (stream.peek() != ' ')\n      return chain(stream, state, twTokenStrike);\n    // mdash\n    if (stream.peek() == ' ')\n      return 'brace';\n  }\n\n  if (ch == \"'\" && stream.eat(\"'\")) // tw bold\n    return chain(stream, state, twTokenStrong);\n\n  if (ch == \"<\" && stream.eat(\"<\")) // tw macro\n    return chain(stream, state, twTokenMacro);\n\n  // core macro handling\n  stream.eatWhile(/[\\w\\$_]/);\n  return textwords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// tw invisible comment\nfunction twTokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"%\");\n  }\n  return \"comment\";\n}\n\n// tw strong / bold\nfunction twTokenStrong(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"'\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"'\");\n  }\n  return \"strong\";\n}\n\n// tw code\nfunction twTokenCode(stream, state) {\n  var sb = state.block;\n\n  if (sb && stream.current()) {\n    return \"comment\";\n  }\n\n  if (!sb && stream.match(reUntilCodeStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n    state.tokenize = tokenBase;\n    return \"comment\";\n  }\n\n  stream.next();\n  return \"comment\";\n}\n\n// tw em / italic\nfunction twTokenEm(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"/\");\n  }\n  return \"emphasis\";\n}\n\n// tw underlined text\nfunction twTokenUnderline(stream, state) {\n  var maybeEnd = false,\n      ch;\n  while (ch = stream.next()) {\n    if (ch == \"_\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"_\");\n  }\n  return \"link\";\n}\n\n// tw strike through text looks ugly\n// change CSS if needed\nfunction twTokenStrike(stream, state) {\n  var maybeEnd = false, ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"-\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"-\");\n  }\n  return \"deleted\";\n}\n\n// macro\nfunction twTokenMacro(stream, state) {\n  if (stream.current() == '<<') {\n    return 'meta';\n  }\n\n  var ch = stream.next();\n  if (!ch) {\n    state.tokenize = tokenBase;\n    return null;\n  }\n  if (ch == \">\") {\n    if (stream.peek() == '>') {\n      stream.next();\n      state.tokenize = tokenBase;\n      return \"meta\";\n    }\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  return keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : null\n}\n\n// Interface\nexport const tiddlyWiki = {\n  startState: function () {\n    return {tokenize: tokenBase};\n  },\n\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  }\n};\n\n"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAG,EAAhB;AAEA,IAAIC,QAAQ,GAAG;EACb,WAAW,IADE;EACI,YAAY,IADhB;EACsB,QAAQ,IAD9B;EAEb,cAAc,IAFD;EAEO,cAAc,IAFrB;EAGb,aAAa,IAHA;EAGM,eAAe,IAHrB;EAIb,UAAU,IAJG;EAIG,UAAU,IAJb;EAImB,QAAQ,IAJ3B;EAKb,OAAO,IALM;EAKA,WAAW,IALX;EAKiB,QAAQ,IALzB;EAMb,WAAW,IANE;EAMI,YAAY,IANhB;EAOb,SAAS,IAPI;EAOE,WAAW,IAPb;EAOmB,UAAU,IAP7B;EAQb,QAAQ,IARK;EAQC,UAAU;AARX,CAAf;AAWA,IAAIC,WAAW,GAAG,UAAlB;AAAA,IACIC,IAAI,GAAG,aADX;AAAA,IAC0D;AACtDC,kBAAkB,GAAG,YAFzB;AAAA,IAEkD;AAC9CC,iBAAiB,GAAG,YAHxB;AAAA,IAGkD;AAC9CC,YAAY,GAAG,OAJnB;AAAA,IAMIC,aAAa,GAAG,cANpB;AAAA,IAM0D;AACtDC,YAAY,GAAG,cAPnB;AAAA,IAO0D;AACtDC,cAAc,GAAG,iBARrB;AAAA,IAQkD;AAC9CC,aAAa,GAAG,iBATpB;AAAA,IASkD;AAE9CC,gBAAgB,GAAG,UAXvB;AAAA,IAW0D;AACtDC,eAAe,GAAG,UAZtB;AAAA,IAYkD;AAE9CC,eAAe,GAAG,WAdtB;;AAgBA,SAASC,KAAT,CAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,CAA9B,EAAiC;EAC/BD,KAAK,CAACE,QAAN,GAAiBD,CAAjB;EACA,OAAOA,CAAC,CAACF,MAAD,EAASC,KAAT,CAAR;AACD;;AAED,SAASG,SAAT,CAAmBJ,MAAnB,EAA2BC,KAA3B,EAAkC;EAChC,IAAII,GAAG,GAAGL,MAAM,CAACK,GAAP,EAAV;EAAA,IAAwBC,EAAE,GAAGN,MAAM,CAACO,IAAP,EAA7B;EAEAN,KAAK,CAACO,KAAN,GAAc,KAAd,CAHgC,CAGJ;EAE5B;;EACA,IAAIH,GAAG,IAAI,cAAcI,IAAd,CAAmBH,EAAnB,CAAX,EAAmC;IACjC,IAAIN,MAAM,CAACU,KAAP,CAAad,gBAAb,CAAJ,EAAoC;MAClCK,KAAK,CAACO,KAAN,GAAc,IAAd;MACA,OAAOT,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBU,WAAhB,CAAZ;IACD;;IACD,IAAIX,MAAM,CAACU,KAAP,CAAanB,YAAb,CAAJ,EACE,OAAO,OAAP;IACF,IAAIS,MAAM,CAACU,KAAP,CAAarB,kBAAb,KAAoCW,MAAM,CAACU,KAAP,CAAapB,iBAAb,CAAxC,EACE,OAAO,SAAP;IACF,IAAIU,MAAM,CAACU,KAAP,CAAalB,aAAb,KAA+BQ,MAAM,CAACU,KAAP,CAAajB,YAAb,CAA/B,IAA6DO,MAAM,CAACU,KAAP,CAAahB,cAAb,CAA7D,IAA6FM,MAAM,CAACU,KAAP,CAAaf,aAAb,CAAjG,EACE,OAAO,SAAP;IACF,IAAIK,MAAM,CAACU,KAAP,CAAatB,IAAb,CAAJ,EACE,OAAO,kBAAP;EACH;;EAEDY,MAAM,CAACY,IAAP;;EACA,IAAIP,GAAG,IAAI,eAAeI,IAAf,CAAoBH,EAApB,CAAX,EAAoC;IAClC,IAAIA,EAAE,IAAI,GAAV,EAAe;MAAE;MACfN,MAAM,CAACa,SAAP;MACA,OAAO,QAAP;IACD;;IACD,IAAIP,EAAE,IAAI,GAAV,EAAe;MAAE;MACfN,MAAM,CAACc,QAAP,CAAgB,GAAhB;MACA,OAAO,SAAP;IACD;;IACD,IAAIR,EAAE,IAAI,GAAV,EAAe;MAAE;MACfN,MAAM,CAACc,QAAP,CAAgB,GAAhB;MACA,OAAO,SAAP;IACD;;IACD,IAAIR,EAAE,IAAI,GAAV,EAAe;MAAE;MACfN,MAAM,CAACc,QAAP,CAAgB,GAAhB;MACA,OAAO,SAAP;IACD;;IACD,IAAIR,EAAE,IAAI,GAAV,EAAe;MAAE;MACfN,MAAM,CAACc,QAAP,CAAgB,GAAhB;MACA,OAAO,SAAP;IACD;;IACD,IAAIR,EAAE,IAAI,GAAV,EAAe;MAAE;MACfN,MAAM,CAACc,QAAP,CAAgB,GAAhB;MACA,OAAO,OAAP;IACD;;IACD,IAAIR,EAAE,IAAI,GAAV,EACE,OAAO,QAAP;EACH;;EAED,IAAIA,EAAE,IAAI,GAAN,IAAaN,MAAM,CAACU,KAAP,CAAa,IAAb,CAAjB,EACE,OAAOX,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBU,WAAhB,CAAZ,CApD8B,CAsDhC;;EACA,IAAI,QAAQF,IAAR,CAAaH,EAAb,KACA,QAAQG,IAAR,CAAaT,MAAM,CAACO,IAAP,EAAb,CADA,IAEAP,MAAM,CAACU,KAAP,CAAa,yEAAb,CAFJ,EAGE,OAAO,MAAP,CA1D8B,CA4DhC;;EACA,IAAIJ,EAAE,IAAI,GAAV,EACE,OAAO,QAAP;EAEF,IAAIA,EAAE,IAAI,GAAV,EAAkB;IAChB,OAAO,OAAP;EAEF,IAAI,SAASG,IAAT,CAAcH,EAAd,KAAqBN,MAAM,CAACU,KAAP,CAAaJ,EAAb,CAAzB,EAA2C;IACzC,OAAO,OAAP;;EAEF,IAAIA,EAAE,IAAI,GAAV,EAAe;IAAK;IAClBN,MAAM,CAACc,QAAP,CAAgB3B,WAAhB;IACA,OAAO,MAAP;EACD;;EAED,IAAI,KAAKsB,IAAL,CAAUH,EAAV,CAAJ,EAAmB;IAAS;IAC1BN,MAAM,CAACc,QAAP,CAAgB,IAAhB;IACA,OAAO,QAAP;EACD;;EAED,IAAIR,EAAE,IAAI,GAAV,EAAe;IAAE;IACf,IAAIN,MAAM,CAACe,GAAP,CAAW,GAAX,CAAJ,EAAqB;MACnB,OAAOhB,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBe,cAAhB,CAAZ;IACD,CAFD,MAEO,IAAIhB,MAAM,CAACe,GAAP,CAAW,GAAX,CAAJ,EAAqB;MAAE;MAC5B,OAAOhB,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBgB,SAAhB,CAAZ;IACD;EACF;;EAED,IAAIX,EAAE,IAAI,GAAN,IAAaN,MAAM,CAACe,GAAP,CAAW,GAAX,CAAjB,EAAkC;IAChC,OAAOhB,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBiB,gBAAhB,CAAZ,CAzF8B,CA2FhC;;EACA,IAAIZ,EAAE,IAAI,GAAN,IAAaN,MAAM,CAACe,GAAP,CAAW,GAAX,CAAjB,EAAkC;IAChC;IACA,IAAIf,MAAM,CAACO,IAAP,MAAiB,GAArB,EACE,OAAOR,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBkB,aAAhB,CAAZ,CAH8B,CAIhC;;IACA,IAAInB,MAAM,CAACO,IAAP,MAAiB,GAArB,EACE,OAAO,OAAP;EACH;;EAED,IAAID,EAAE,IAAI,GAAN,IAAaN,MAAM,CAACe,GAAP,CAAW,GAAX,CAAjB,EAAkC;IAChC,OAAOhB,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBmB,aAAhB,CAAZ;EAEF,IAAId,EAAE,IAAI,GAAN,IAAaN,MAAM,CAACe,GAAP,CAAW,GAAX,CAAjB,EAAkC;IAChC,OAAOhB,KAAK,CAACC,MAAD,EAASC,KAAT,EAAgBoB,YAAhB,CAAZ,CAzG8B,CA2GhC;;EACArB,MAAM,CAACc,QAAP,CAAgB,SAAhB;EACA,OAAO7B,SAAS,CAACqC,oBAAV,CAA+BtB,MAAM,CAACuB,OAAP,EAA/B,IAAmD,SAAnD,GAA+D,IAAtE;AACD,C,CAED;;;AACA,SAASP,cAAT,CAAwBhB,MAAxB,EAAgCC,KAAhC,EAAuC;EACrC,IAAIuB,QAAQ,GAAG,KAAf;EAAA,IAAsBlB,EAAtB;;EACA,OAAOA,EAAE,GAAGN,MAAM,CAACY,IAAP,EAAZ,EAA2B;IACzB,IAAIN,EAAE,IAAI,GAAN,IAAakB,QAAjB,EAA2B;MACzBvB,KAAK,CAACE,QAAN,GAAiBC,SAAjB;MACA;IACD;;IACDoB,QAAQ,GAAIlB,EAAE,IAAI,GAAlB;EACD;;EACD,OAAO,SAAP;AACD,C,CAED;;;AACA,SAASc,aAAT,CAAuBpB,MAAvB,EAA+BC,KAA/B,EAAsC;EACpC,IAAIuB,QAAQ,GAAG,KAAf;EAAA,IACIlB,EADJ;;EAEA,OAAOA,EAAE,GAAGN,MAAM,CAACY,IAAP,EAAZ,EAA2B;IACzB,IAAIN,EAAE,IAAI,GAAN,IAAakB,QAAjB,EAA2B;MACzBvB,KAAK,CAACE,QAAN,GAAiBC,SAAjB;MACA;IACD;;IACDoB,QAAQ,GAAIlB,EAAE,IAAI,GAAlB;EACD;;EACD,OAAO,QAAP;AACD,C,CAED;;;AACA,SAASK,WAAT,CAAqBX,MAArB,EAA6BC,KAA7B,EAAoC;EAClC,IAAIwB,EAAE,GAAGxB,KAAK,CAACO,KAAf;;EAEA,IAAIiB,EAAE,IAAIzB,MAAM,CAACuB,OAAP,EAAV,EAA4B;IAC1B,OAAO,SAAP;EACD;;EAED,IAAI,CAACE,EAAD,IAAOzB,MAAM,CAACU,KAAP,CAAaZ,eAAb,CAAX,EAA0C;IACxCG,KAAK,CAACE,QAAN,GAAiBC,SAAjB;IACA,OAAO,SAAP;EACD;;EAED,IAAIqB,EAAE,IAAIzB,MAAM,CAACK,GAAP,EAAN,IAAsBL,MAAM,CAACU,KAAP,CAAab,eAAb,CAA1B,EAAyD;IACvDI,KAAK,CAACE,QAAN,GAAiBC,SAAjB;IACA,OAAO,SAAP;EACD;;EAEDJ,MAAM,CAACY,IAAP;EACA,OAAO,SAAP;AACD,C,CAED;;;AACA,SAASK,SAAT,CAAmBjB,MAAnB,EAA2BC,KAA3B,EAAkC;EAChC,IAAIuB,QAAQ,GAAG,KAAf;EAAA,IACIlB,EADJ;;EAEA,OAAOA,EAAE,GAAGN,MAAM,CAACY,IAAP,EAAZ,EAA2B;IACzB,IAAIN,EAAE,IAAI,GAAN,IAAakB,QAAjB,EAA2B;MACzBvB,KAAK,CAACE,QAAN,GAAiBC,SAAjB;MACA;IACD;;IACDoB,QAAQ,GAAIlB,EAAE,IAAI,GAAlB;EACD;;EACD,OAAO,UAAP;AACD,C,CAED;;;AACA,SAASY,gBAAT,CAA0BlB,MAA1B,EAAkCC,KAAlC,EAAyC;EACvC,IAAIuB,QAAQ,GAAG,KAAf;EAAA,IACIlB,EADJ;;EAEA,OAAOA,EAAE,GAAGN,MAAM,CAACY,IAAP,EAAZ,EAA2B;IACzB,IAAIN,EAAE,IAAI,GAAN,IAAakB,QAAjB,EAA2B;MACzBvB,KAAK,CAACE,QAAN,GAAiBC,SAAjB;MACA;IACD;;IACDoB,QAAQ,GAAIlB,EAAE,IAAI,GAAlB;EACD;;EACD,OAAO,MAAP;AACD,C,CAED;AACA;;;AACA,SAASa,aAAT,CAAuBnB,MAAvB,EAA+BC,KAA/B,EAAsC;EACpC,IAAIuB,QAAQ,GAAG,KAAf;EAAA,IAAsBlB,EAAtB;;EAEA,OAAOA,EAAE,GAAGN,MAAM,CAACY,IAAP,EAAZ,EAA2B;IACzB,IAAIN,EAAE,IAAI,GAAN,IAAakB,QAAjB,EAA2B;MACzBvB,KAAK,CAACE,QAAN,GAAiBC,SAAjB;MACA;IACD;;IACDoB,QAAQ,GAAIlB,EAAE,IAAI,GAAlB;EACD;;EACD,OAAO,SAAP;AACD,C,CAED;;;AACA,SAASe,YAAT,CAAsBrB,MAAtB,EAA8BC,KAA9B,EAAqC;EACnC,IAAID,MAAM,CAACuB,OAAP,MAAoB,IAAxB,EAA8B;IAC5B,OAAO,MAAP;EACD;;EAED,IAAIjB,EAAE,GAAGN,MAAM,CAACY,IAAP,EAAT;;EACA,IAAI,CAACN,EAAL,EAAS;IACPL,KAAK,CAACE,QAAN,GAAiBC,SAAjB;IACA,OAAO,IAAP;EACD;;EACD,IAAIE,EAAE,IAAI,GAAV,EAAe;IACb,IAAIN,MAAM,CAACO,IAAP,MAAiB,GAArB,EAA0B;MACxBP,MAAM,CAACY,IAAP;MACAX,KAAK,CAACE,QAAN,GAAiBC,SAAjB;MACA,OAAO,MAAP;IACD;EACF;;EAEDJ,MAAM,CAACc,QAAP,CAAgB,SAAhB;EACA,OAAO5B,QAAQ,CAACoC,oBAAT,CAA8BtB,MAAM,CAACuB,OAAP,EAA9B,IAAkD,SAAlD,GAA8D,IAArE;AACD,C,CAED;;;AACA,OAAO,MAAMG,UAAU,GAAG;EACxBC,UAAU,EAAE,YAAY;IACtB,OAAO;MAACxB,QAAQ,EAAEC;IAAX,CAAP;EACD,CAHuB;EAKxBwB,KAAK,EAAE,UAAU5B,MAAV,EAAkBC,KAAlB,EAAyB;IAC9B,IAAID,MAAM,CAAC6B,QAAP,EAAJ,EAAuB,OAAO,IAAP;IACvB,IAAIC,KAAK,GAAG7B,KAAK,CAACE,QAAN,CAAeH,MAAf,EAAuBC,KAAvB,CAAZ;IACA,OAAO6B,KAAP;EACD;AATuB,CAAnB"},"metadata":{},"sourceType":"module"}