{"ast":null,"code":"var elliptic = require('elliptic');\n\nvar BN = require('bn.js');\n\nmodule.exports = function createECDH(curve) {\n  return new ECDH(curve);\n};\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n};\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\n\nfunction ECDH(curve) {\n  this.curveType = aliases[curve];\n\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    };\n  }\n\n  this.curve = new elliptic.ec(this.curveType.name); // eslint-disable-line new-cap\n\n  this.keys = void 0;\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair();\n  return this.getPublicKey(enc, format);\n};\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8';\n\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc);\n  }\n\n  var otherPub = this.curve.keyFromPublic(other).getPublic();\n  var out = otherPub.mul(this.keys.getPrivate()).getX();\n  return formatReturnValue(out, enc, this.curveType.byteLength);\n};\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true);\n\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7;\n    } else {\n      key[0] = 6;\n    }\n  }\n\n  return formatReturnValue(key, enc);\n};\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc);\n};\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n\n  this.keys._importPublic(pub);\n\n  return this;\n};\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n\n  var _priv = new BN(priv);\n\n  _priv = _priv.toString(16);\n  this.keys = this.curve.genKeyPair();\n\n  this.keys._importPrivate(_priv);\n\n  return this;\n};\n\nfunction formatReturnValue(bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray();\n  }\n\n  var buf = new Buffer(bn);\n\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length);\n    zeros.fill(0);\n    buf = Buffer.concat([zeros, buf]);\n  }\n\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}","map":{"version":3,"names":["elliptic","require","BN","module","exports","createECDH","curve","ECDH","aliases","secp256k1","name","byteLength","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","p224","p256","secp256r1","p192","secp192r1","p384","p521","curveType","ec","keys","prototype","generateKeys","enc","format","genKeyPair","getPublicKey","computeSecret","other","inenc","Buffer","isBuffer","otherPub","keyFromPublic","getPublic","out","mul","getPrivate","getX","formatReturnValue","key","length","getPrivateKey","setPublicKey","pub","_importPublic","setPrivateKey","priv","_priv","toString","_importPrivate","bn","len","Array","isArray","toArray","buf","zeros","fill","concat"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/create-ecdh/browser.js"],"sourcesContent":["var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,OAAD,CAAhB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAqBC,KAArB,EAA4B;EAC3C,OAAO,IAAIC,IAAJ,CAASD,KAAT,CAAP;AACD,CAFD;;AAIA,IAAIE,OAAO,GAAG;EACZC,SAAS,EAAE;IACTC,IAAI,EAAE,WADG;IAETC,UAAU,EAAE;EAFH,CADC;EAKZC,SAAS,EAAE;IACTF,IAAI,EAAE,MADG;IAETC,UAAU,EAAE;EAFH,CALC;EASZE,UAAU,EAAE;IACVH,IAAI,EAAE,MADI;IAEVC,UAAU,EAAE;EAFF,CATA;EAaZG,UAAU,EAAE;IACVJ,IAAI,EAAE,MADI;IAEVC,UAAU,EAAE;EAFF,CAbA;EAiBZI,OAAO,EAAE;IACPL,IAAI,EAAE,SADC;IAEPC,UAAU,EAAE;EAFL,CAjBG;EAqBZK,SAAS,EAAE;IACTN,IAAI,EAAE,MADG;IAETC,UAAU,EAAE;EAFH,CArBC;EAyBZM,SAAS,EAAE;IACTP,IAAI,EAAE,MADG;IAETC,UAAU,EAAE;EAFH;AAzBC,CAAd;AA+BAH,OAAO,CAACU,IAAR,GAAeV,OAAO,CAACI,SAAvB;AACAJ,OAAO,CAACW,IAAR,GAAeX,OAAO,CAACY,SAAR,GAAoBZ,OAAO,CAACK,UAA3C;AACAL,OAAO,CAACa,IAAR,GAAeb,OAAO,CAACc,SAAR,GAAoBd,OAAO,CAACM,UAA3C;AACAN,OAAO,CAACe,IAAR,GAAef,OAAO,CAACQ,SAAvB;AACAR,OAAO,CAACgB,IAAR,GAAehB,OAAO,CAACS,SAAvB;;AAEA,SAASV,IAAT,CAAeD,KAAf,EAAsB;EACpB,KAAKmB,SAAL,GAAiBjB,OAAO,CAACF,KAAD,CAAxB;;EACA,IAAI,CAAC,KAAKmB,SAAV,EAAqB;IACnB,KAAKA,SAAL,GAAiB;MACff,IAAI,EAAEJ;IADS,CAAjB;EAGD;;EACD,KAAKA,KAAL,GAAa,IAAIN,QAAQ,CAAC0B,EAAb,CAAgB,KAAKD,SAAL,CAAef,IAA/B,CAAb,CAPoB,CAO8B;;EAClD,KAAKiB,IAAL,GAAY,KAAK,CAAjB;AACD;;AAEDpB,IAAI,CAACqB,SAAL,CAAeC,YAAf,GAA8B,UAAUC,GAAV,EAAeC,MAAf,EAAuB;EACnD,KAAKJ,IAAL,GAAY,KAAKrB,KAAL,CAAW0B,UAAX,EAAZ;EACA,OAAO,KAAKC,YAAL,CAAkBH,GAAlB,EAAuBC,MAAvB,CAAP;AACD,CAHD;;AAKAxB,IAAI,CAACqB,SAAL,CAAeM,aAAf,GAA+B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBN,GAAxB,EAA6B;EAC1DM,KAAK,GAAGA,KAAK,IAAI,MAAjB;;EACA,IAAI,CAACC,MAAM,CAACC,QAAP,CAAgBH,KAAhB,CAAL,EAA6B;IAC3BA,KAAK,GAAG,IAAIE,MAAJ,CAAWF,KAAX,EAAkBC,KAAlB,CAAR;EACD;;EACD,IAAIG,QAAQ,GAAG,KAAKjC,KAAL,CAAWkC,aAAX,CAAyBL,KAAzB,EAAgCM,SAAhC,EAAf;EACA,IAAIC,GAAG,GAAGH,QAAQ,CAACI,GAAT,CAAa,KAAKhB,IAAL,CAAUiB,UAAV,EAAb,EAAqCC,IAArC,EAAV;EACA,OAAOC,iBAAiB,CAACJ,GAAD,EAAMZ,GAAN,EAAW,KAAKL,SAAL,CAAed,UAA1B,CAAxB;AACD,CARD;;AAUAJ,IAAI,CAACqB,SAAL,CAAeK,YAAf,GAA8B,UAAUH,GAAV,EAAeC,MAAf,EAAuB;EACnD,IAAIgB,GAAG,GAAG,KAAKpB,IAAL,CAAUc,SAAV,CAAoBV,MAAM,KAAK,YAA/B,EAA6C,IAA7C,CAAV;;EACA,IAAIA,MAAM,KAAK,QAAf,EAAyB;IACvB,IAAIgB,GAAG,CAACA,GAAG,CAACC,MAAJ,GAAa,CAAd,CAAH,GAAsB,CAA1B,EAA6B;MAC3BD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;IACD,CAFD,MAEO;MACLA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;IACD;EACF;;EACD,OAAOD,iBAAiB,CAACC,GAAD,EAAMjB,GAAN,CAAxB;AACD,CAVD;;AAYAvB,IAAI,CAACqB,SAAL,CAAeqB,aAAf,GAA+B,UAAUnB,GAAV,EAAe;EAC5C,OAAOgB,iBAAiB,CAAC,KAAKnB,IAAL,CAAUiB,UAAV,EAAD,EAAyBd,GAAzB,CAAxB;AACD,CAFD;;AAIAvB,IAAI,CAACqB,SAAL,CAAesB,YAAf,GAA8B,UAAUC,GAAV,EAAerB,GAAf,EAAoB;EAChDA,GAAG,GAAGA,GAAG,IAAI,MAAb;;EACA,IAAI,CAACO,MAAM,CAACC,QAAP,CAAgBa,GAAhB,CAAL,EAA2B;IACzBA,GAAG,GAAG,IAAId,MAAJ,CAAWc,GAAX,EAAgBrB,GAAhB,CAAN;EACD;;EACD,KAAKH,IAAL,CAAUyB,aAAV,CAAwBD,GAAxB;;EACA,OAAO,IAAP;AACD,CAPD;;AASA5C,IAAI,CAACqB,SAAL,CAAeyB,aAAf,GAA+B,UAAUC,IAAV,EAAgBxB,GAAhB,EAAqB;EAClDA,GAAG,GAAGA,GAAG,IAAI,MAAb;;EACA,IAAI,CAACO,MAAM,CAACC,QAAP,CAAgBgB,IAAhB,CAAL,EAA4B;IAC1BA,IAAI,GAAG,IAAIjB,MAAJ,CAAWiB,IAAX,EAAiBxB,GAAjB,CAAP;EACD;;EAED,IAAIyB,KAAK,GAAG,IAAIrD,EAAJ,CAAOoD,IAAP,CAAZ;;EACAC,KAAK,GAAGA,KAAK,CAACC,QAAN,CAAe,EAAf,CAAR;EACA,KAAK7B,IAAL,GAAY,KAAKrB,KAAL,CAAW0B,UAAX,EAAZ;;EACA,KAAKL,IAAL,CAAU8B,cAAV,CAAyBF,KAAzB;;EACA,OAAO,IAAP;AACD,CAXD;;AAaA,SAAST,iBAAT,CAA4BY,EAA5B,EAAgC5B,GAAhC,EAAqC6B,GAArC,EAA0C;EACxC,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,EAAd,CAAL,EAAwB;IACtBA,EAAE,GAAGA,EAAE,CAACI,OAAH,EAAL;EACD;;EACD,IAAIC,GAAG,GAAG,IAAI1B,MAAJ,CAAWqB,EAAX,CAAV;;EACA,IAAIC,GAAG,IAAII,GAAG,CAACf,MAAJ,GAAaW,GAAxB,EAA6B;IAC3B,IAAIK,KAAK,GAAG,IAAI3B,MAAJ,CAAWsB,GAAG,GAAGI,GAAG,CAACf,MAArB,CAAZ;IACAgB,KAAK,CAACC,IAAN,CAAW,CAAX;IACAF,GAAG,GAAG1B,MAAM,CAAC6B,MAAP,CAAc,CAACF,KAAD,EAAQD,GAAR,CAAd,CAAN;EACD;;EACD,IAAI,CAACjC,GAAL,EAAU;IACR,OAAOiC,GAAP;EACD,CAFD,MAEO;IACL,OAAOA,GAAG,CAACP,QAAJ,CAAa1B,GAAb,CAAP;EACD;AACF"},"metadata":{},"sourceType":"script"}