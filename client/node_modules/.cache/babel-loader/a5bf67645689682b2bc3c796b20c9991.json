{"ast":null,"code":"/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\nimport { gfm } from 'micromark-extension-gfm';\nimport { gfmFromMarkdown, gfmToMarkdown } from 'mdast-util-gfm';\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\n\nexport default function remarkGfm() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const data = this.data();\n  add('micromarkExtensions', gfm(options));\n  add('fromMarkdownExtensions', gfmFromMarkdown());\n  add('toMarkdownExtensions', gfmToMarkdown(options));\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n\n  function add(field, value) {\n    const list =\n    /** @type {unknown[]} */\n    // Other extensions\n\n    /* c8 ignore next 2 */\n    data[field] ? data[field] : data[field] = [];\n    list.push(value);\n  }\n}","map":{"version":3,"names":["gfm","gfmFromMarkdown","gfmToMarkdown","remarkGfm","options","data","add","field","value","list","push"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/remark-gfm/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAQA,GAAR,QAAkB,yBAAlB;AACA,SAAQC,eAAR,EAAyBC,aAAzB,QAA6C,gBAA7C;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,GAAiC;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EAC9C,MAAMC,IAAI,GAAG,KAAKA,IAAL,EAAb;EAEAC,GAAG,CAAC,qBAAD,EAAwBN,GAAG,CAACI,OAAD,CAA3B,CAAH;EACAE,GAAG,CAAC,wBAAD,EAA2BL,eAAe,EAA1C,CAAH;EACAK,GAAG,CAAC,sBAAD,EAAyBJ,aAAa,CAACE,OAAD,CAAtC,CAAH;EAEA;AACF;AACA;AACA;;EACE,SAASE,GAAT,CAAaC,KAAb,EAAoBC,KAApB,EAA2B;IACzB,MAAMC,IAAI;IAAG;IACX;;IACA;IACAJ,IAAI,CAACE,KAAD,CAAJ,GAAcF,IAAI,CAACE,KAAD,CAAlB,GAA6BF,IAAI,CAACE,KAAD,CAAJ,GAAc,EAH7C;IAMAE,IAAI,CAACC,IAAL,CAAUF,KAAV;EACD;AACF"},"metadata":{},"sourceType":"module"}