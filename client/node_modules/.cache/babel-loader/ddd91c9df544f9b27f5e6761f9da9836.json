{"ast":null,"code":"// @ts-nocheck\nimport refractorJava from './java.js';\nimport refractorJavadoclike from './javadoclike.js';\nimport refractorMarkup from './markup.js';\njavadoc.displayName = 'javadoc';\njavadoc.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function javadoc(Prism) {\n  Prism.register(refractorJava);\n  Prism.register(refractorJavadoclike);\n  Prism.register(refractorMarkup);\n\n  (function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m;\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source;\n    var reference = /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function () {\n      return memberReference;\n    });\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {});\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/.source + '(?:' + reference + ')'),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [{\n        pattern: /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n        lookbehind: true,\n        inside: {\n          code: {\n            // there can't be any HTML inside of {@code} tags\n            pattern: codeLinePattern,\n            lookbehind: true,\n            inside: Prism.languages.java,\n            alias: 'language-java'\n          }\n        }\n      }, {\n        pattern: /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n        lookbehind: true,\n        inside: {\n          line: {\n            pattern: codeLinePattern,\n            lookbehind: true,\n            inside: {\n              // highlight HTML tags and entities\n              tag: Prism.languages.markup.tag,\n              entity: Prism.languages.markup.entity,\n              code: {\n                // everything else is Java code\n                pattern: /.+/,\n                inside: Prism.languages.java,\n                alias: 'language-java'\n              }\n            }\n          }\n        }\n      }],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    });\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\n  })(Prism);\n}","map":{"version":3,"names":["refractorJava","refractorJavadoclike","refractorMarkup","javadoc","displayName","aliases","Prism","register","codeLinePattern","memberReference","source","reference","replace","languages","extend","insertBefore","pattern","RegExp","lookbehind","inside","function","field","namespace","punctuation","keyword","java","code","alias","line","tag","markup","entity","javadoclike","addSupport"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/javadoc.js"],"sourcesContent":["// @ts-nocheck\nimport refractorJava from './java.js'\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorMarkup from './markup.js'\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}