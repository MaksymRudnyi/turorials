{"ast":null,"code":"function words(str) {\n  var obj = {},\n      words = str.split(\" \");\n\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n  return obj;\n}\n\nvar bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" + \"FromString Function Integrate InverseTaylor Limit \" + \"LocalSymbols Macro MacroRule MacroRulePattern \" + \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" + \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" + \"ToStdout ToString TraceRule Until While\"); // patterns\n\nvar pFloatForm = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\nvar pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\"; // regular expressions\n\nvar reFloatForm = new RegExp(pFloatForm);\nvar reIdentifier = new RegExp(pIdentifier);\nvar rePattern = new RegExp(pIdentifier + \"?_\" + pIdentifier);\nvar reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\nfunction tokenBase(stream, state) {\n  var ch; // get next character\n\n  ch = stream.next(); // string\n\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  } // comment\n\n\n  if (ch === '/') {\n    if (stream.eat('*')) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  } // go back one character\n\n\n  stream.backUp(1); // update scope info\n\n  var m = stream.match(/^(\\w+)\\s*\\(/, false);\n  if (m !== null && bodiedOps.hasOwnProperty(m[1])) state.scopes.push('bodied');\n  var scope = currentScope(state);\n  if (scope === 'bodied' && ch === '[') state.scopes.pop();\n  if (ch === '[' || ch === '{' || ch === '(') state.scopes.push(ch);\n  scope = currentScope(state);\n  if (scope === '[' && ch === ']' || scope === '{' && ch === '}' || scope === '(' && ch === ')') state.scopes.pop();\n\n  if (ch === ';') {\n    while (scope === 'bodied') {\n      state.scopes.pop();\n      scope = currentScope(state);\n    }\n  } // look for ordered rules\n\n\n  if (stream.match(/\\d+ *#/, true, false)) {\n    return 'qualifier';\n  } // look for numbers\n\n\n  if (stream.match(reFloatForm, true, false)) {\n    return 'number';\n  } // look for placeholders\n\n\n  if (stream.match(rePattern, true, false)) {\n    return 'variableName.special';\n  } // match all braces separately\n\n\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return 'bracket';\n  } // literals looking like function calls\n\n\n  if (stream.match(reFunctionLike, true, false)) {\n    stream.backUp(1);\n    return 'variableName.function';\n  } // all other identifiers\n\n\n  if (stream.match(reIdentifier, true, false)) {\n    return 'variable';\n  } // operators; note that operators like @@ or /; are matched separately for each symbol.\n\n\n  if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%|#)/, true, false)) {\n    return 'operator';\n  } // everything else is an error\n\n\n  return 'error';\n}\n\nfunction tokenString(stream, state) {\n  var next,\n      end = false,\n      escaped = false;\n\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n\n    escaped = !escaped && next === '\\\\';\n  }\n\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n\n  return 'string';\n}\n\n;\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n\n  while ((next = stream.next()) != null) {\n    if (prev === '*' && next === '/') {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    prev = next;\n  }\n\n  return 'comment';\n}\n\nfunction currentScope(state) {\n  var scope = null;\n  if (state.scopes.length > 0) scope = state.scopes[state.scopes.length - 1];\n  return scope;\n}\n\nexport const yacas = {\n  startState: function () {\n    return {\n      tokenize: tokenBase,\n      scopes: []\n    };\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  indent: function (state, textAfter, cx) {\n    if (state.tokenize !== tokenBase && state.tokenize !== null) return null;\n    var delta = 0;\n    if (textAfter === ']' || textAfter === '];' || textAfter === '}' || textAfter === '};' || textAfter === ');') delta = -1;\n    return (state.scopes.length + delta) * cx.unit;\n  },\n  languageData: {\n    electricInput: /[{}\\[\\]()\\;]/,\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    }\n  }\n};","map":{"version":3,"names":["words","str","obj","split","i","length","bodiedOps","pFloatForm","pIdentifier","reFloatForm","RegExp","reIdentifier","rePattern","reFunctionLike","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","tokenComment","skipToEnd","backUp","m","match","hasOwnProperty","scopes","push","scope","currentScope","pop","end","escaped","prev","yacas","startState","token","eatSpace","indent","textAfter","cx","delta","unit","languageData","electricInput","commentTokens","line","block","open","close"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/yacas.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar bodiedOps = words(\"Assert BackQuote D Defun Deriv For ForEach FromFile \" +\n                      \"FromString Function Integrate InverseTaylor Limit \" +\n                      \"LocalSymbols Macro MacroRule MacroRulePattern \" +\n                      \"NIntegrate Rule RulePattern Subst TD TExplicitSum \" +\n                      \"TSum Taylor Taylor1 Taylor2 Taylor3 ToFile \" +\n                      \"ToStdout ToString TraceRule Until While\");\n\n// patterns\nvar pFloatForm  = \"(?:(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)(?:[eE][+-]?\\\\d+)?)\";\nvar pIdentifier = \"(?:[a-zA-Z\\\\$'][a-zA-Z0-9\\\\$']*)\";\n\n// regular expressions\nvar reFloatForm    = new RegExp(pFloatForm);\nvar reIdentifier   = new RegExp(pIdentifier);\nvar rePattern      = new RegExp(pIdentifier + \"?_\" + pIdentifier);\nvar reFunctionLike = new RegExp(pIdentifier + \"\\\\s*\\\\(\");\n\nfunction tokenBase(stream, state) {\n  var ch;\n\n  // get next character\n  ch = stream.next();\n\n  // string\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  }\n\n  // comment\n  if (ch === '/') {\n    if (stream.eat('*')) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n\n  // go back one character\n  stream.backUp(1);\n\n  // update scope info\n  var m = stream.match(/^(\\w+)\\s*\\(/, false);\n  if (m !== null && bodiedOps.hasOwnProperty(m[1]))\n    state.scopes.push('bodied');\n\n  var scope = currentScope(state);\n\n  if (scope === 'bodied' && ch === '[')\n    state.scopes.pop();\n\n  if (ch === '[' || ch === '{' || ch === '(')\n    state.scopes.push(ch);\n\n  scope = currentScope(state);\n\n  if (scope === '[' && ch === ']' ||\n      scope === '{' && ch === '}' ||\n      scope === '(' && ch === ')')\n    state.scopes.pop();\n\n  if (ch === ';') {\n    while (scope === 'bodied') {\n      state.scopes.pop();\n      scope = currentScope(state);\n    }\n  }\n\n  // look for ordered rules\n  if (stream.match(/\\d+ *#/, true, false)) {\n    return 'qualifier';\n  }\n\n  // look for numbers\n  if (stream.match(reFloatForm, true, false)) {\n    return 'number';\n  }\n\n  // look for placeholders\n  if (stream.match(rePattern, true, false)) {\n    return 'variableName.special';\n  }\n\n  // match all braces separately\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return 'bracket';\n  }\n\n  // literals looking like function calls\n  if (stream.match(reFunctionLike, true, false)) {\n    stream.backUp(1);\n    return 'variableName.function';\n  }\n\n  // all other identifiers\n  if (stream.match(reIdentifier, true, false)) {\n    return 'variable';\n  }\n\n  // operators; note that operators like @@ or /; are matched separately for each symbol.\n  if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%|#)/, true, false)) {\n    return 'operator';\n  }\n\n  // everything else is an error\n  return 'error';\n}\n\nfunction tokenString(stream, state) {\n  var next, end = false, escaped = false;\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n    escaped = !escaped && next === '\\\\';\n  }\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n  return 'string';\n};\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n  while((next = stream.next()) != null) {\n    if (prev === '*' && next === '/') {\n      state.tokenize = tokenBase;\n      break;\n    }\n    prev = next;\n  }\n  return 'comment';\n}\n\nfunction currentScope(state) {\n  var scope = null;\n  if (state.scopes.length > 0)\n    scope = state.scopes[state.scopes.length - 1];\n  return scope;\n}\n\nexport const yacas = {\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      scopes: []\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize !== tokenBase && state.tokenize !== null)\n      return null;\n\n    var delta = 0;\n    if (textAfter === ']' || textAfter === '];' ||\n        textAfter === '}' || textAfter === '};' ||\n        textAfter === ');')\n      delta = -1;\n\n    return (state.scopes.length + delta) * cx.unit;\n  },\n\n  languageData: {\n    electricInput: /[{}\\[\\]()\\;]/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAT,CAAeC,GAAf,EAAoB;EAClB,IAAIC,GAAG,GAAG,EAAV;EAAA,IAAcF,KAAK,GAAGC,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAtB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkC,EAAED,CAApC,EAAuCF,GAAG,CAACF,KAAK,CAACI,CAAD,CAAN,CAAH,GAAgB,IAAhB;;EACvC,OAAOF,GAAP;AACD;;AAED,IAAII,SAAS,GAAGN,KAAK,CAAC,yDACA,oDADA,GAEA,gDAFA,GAGA,oDAHA,GAIA,6CAJA,GAKA,yCALD,CAArB,C,CAOA;;AACA,IAAIO,UAAU,GAAI,oDAAlB;AACA,IAAIC,WAAW,GAAG,kCAAlB,C,CAEA;;AACA,IAAIC,WAAW,GAAM,IAAIC,MAAJ,CAAWH,UAAX,CAArB;AACA,IAAII,YAAY,GAAK,IAAID,MAAJ,CAAWF,WAAX,CAArB;AACA,IAAII,SAAS,GAAQ,IAAIF,MAAJ,CAAWF,WAAW,GAAG,IAAd,GAAqBA,WAAhC,CAArB;AACA,IAAIK,cAAc,GAAG,IAAIH,MAAJ,CAAWF,WAAW,GAAG,SAAzB,CAArB;;AAEA,SAASM,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;EAChC,IAAIC,EAAJ,CADgC,CAGhC;;EACAA,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAL,CAJgC,CAMhC;;EACA,IAAID,EAAE,KAAK,GAAX,EAAgB;IACdD,KAAK,CAACG,QAAN,GAAiBC,WAAjB;IACA,OAAOJ,KAAK,CAACG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;EACD,CAV+B,CAYhC;;;EACA,IAAIC,EAAE,KAAK,GAAX,EAAgB;IACd,IAAIF,MAAM,CAACM,GAAP,CAAW,GAAX,CAAJ,EAAqB;MACnBL,KAAK,CAACG,QAAN,GAAiBG,YAAjB;MACA,OAAON,KAAK,CAACG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;IACD;;IACD,IAAID,MAAM,CAACM,GAAP,CAAW,GAAX,CAAJ,EAAqB;MACnBN,MAAM,CAACQ,SAAP;MACA,OAAO,SAAP;IACD;EACF,CAtB+B,CAwBhC;;;EACAR,MAAM,CAACS,MAAP,CAAc,CAAd,EAzBgC,CA2BhC;;EACA,IAAIC,CAAC,GAAGV,MAAM,CAACW,KAAP,CAAa,aAAb,EAA4B,KAA5B,CAAR;EACA,IAAID,CAAC,KAAK,IAAN,IAAcnB,SAAS,CAACqB,cAAV,CAAyBF,CAAC,CAAC,CAAD,CAA1B,CAAlB,EACET,KAAK,CAACY,MAAN,CAAaC,IAAb,CAAkB,QAAlB;EAEF,IAAIC,KAAK,GAAGC,YAAY,CAACf,KAAD,CAAxB;EAEA,IAAIc,KAAK,KAAK,QAAV,IAAsBb,EAAE,KAAK,GAAjC,EACED,KAAK,CAACY,MAAN,CAAaI,GAAb;EAEF,IAAIf,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,GAArB,IAA4BA,EAAE,KAAK,GAAvC,EACED,KAAK,CAACY,MAAN,CAAaC,IAAb,CAAkBZ,EAAlB;EAEFa,KAAK,GAAGC,YAAY,CAACf,KAAD,CAApB;EAEA,IAAIc,KAAK,KAAK,GAAV,IAAiBb,EAAE,KAAK,GAAxB,IACAa,KAAK,KAAK,GAAV,IAAiBb,EAAE,KAAK,GADxB,IAEAa,KAAK,KAAK,GAAV,IAAiBb,EAAE,KAAK,GAF5B,EAGED,KAAK,CAACY,MAAN,CAAaI,GAAb;;EAEF,IAAIf,EAAE,KAAK,GAAX,EAAgB;IACd,OAAOa,KAAK,KAAK,QAAjB,EAA2B;MACzBd,KAAK,CAACY,MAAN,CAAaI,GAAb;MACAF,KAAK,GAAGC,YAAY,CAACf,KAAD,CAApB;IACD;EACF,CApD+B,CAsDhC;;;EACA,IAAID,MAAM,CAACW,KAAP,CAAa,QAAb,EAAuB,IAAvB,EAA6B,KAA7B,CAAJ,EAAyC;IACvC,OAAO,WAAP;EACD,CAzD+B,CA2DhC;;;EACA,IAAIX,MAAM,CAACW,KAAP,CAAajB,WAAb,EAA0B,IAA1B,EAAgC,KAAhC,CAAJ,EAA4C;IAC1C,OAAO,QAAP;EACD,CA9D+B,CAgEhC;;;EACA,IAAIM,MAAM,CAACW,KAAP,CAAad,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,CAAJ,EAA0C;IACxC,OAAO,sBAAP;EACD,CAnE+B,CAqEhC;;;EACA,IAAIG,MAAM,CAACW,KAAP,CAAa,qBAAb,EAAoC,IAApC,EAA0C,KAA1C,CAAJ,EAAsD;IACpD,OAAO,SAAP;EACD,CAxE+B,CA0EhC;;;EACA,IAAIX,MAAM,CAACW,KAAP,CAAab,cAAb,EAA6B,IAA7B,EAAmC,KAAnC,CAAJ,EAA+C;IAC7CE,MAAM,CAACS,MAAP,CAAc,CAAd;IACA,OAAO,uBAAP;EACD,CA9E+B,CAgFhC;;;EACA,IAAIT,MAAM,CAACW,KAAP,CAAaf,YAAb,EAA2B,IAA3B,EAAiC,KAAjC,CAAJ,EAA6C;IAC3C,OAAO,UAAP;EACD,CAnF+B,CAqFhC;;;EACA,IAAII,MAAM,CAACW,KAAP,CAAa,8DAAb,EAA6E,IAA7E,EAAmF,KAAnF,CAAJ,EAA+F;IAC7F,OAAO,UAAP;EACD,CAxF+B,CA0FhC;;;EACA,OAAO,OAAP;AACD;;AAED,SAASN,WAAT,CAAqBL,MAArB,EAA6BC,KAA7B,EAAoC;EAClC,IAAIE,IAAJ;EAAA,IAAUe,GAAG,GAAG,KAAhB;EAAA,IAAuBC,OAAO,GAAG,KAAjC;;EACA,OAAO,CAAChB,IAAI,GAAGH,MAAM,CAACG,IAAP,EAAR,KAA0B,IAAjC,EAAuC;IACrC,IAAIA,IAAI,KAAK,GAAT,IAAgB,CAACgB,OAArB,EAA8B;MAC5BD,GAAG,GAAG,IAAN;MACA;IACD;;IACDC,OAAO,GAAG,CAACA,OAAD,IAAYhB,IAAI,KAAK,IAA/B;EACD;;EACD,IAAIe,GAAG,IAAI,CAACC,OAAZ,EAAqB;IACnBlB,KAAK,CAACG,QAAN,GAAiBL,SAAjB;EACD;;EACD,OAAO,QAAP;AACD;;AAAA;;AAED,SAASQ,YAAT,CAAsBP,MAAtB,EAA8BC,KAA9B,EAAqC;EACnC,IAAImB,IAAJ,EAAUjB,IAAV;;EACA,OAAM,CAACA,IAAI,GAAGH,MAAM,CAACG,IAAP,EAAR,KAA0B,IAAhC,EAAsC;IACpC,IAAIiB,IAAI,KAAK,GAAT,IAAgBjB,IAAI,KAAK,GAA7B,EAAkC;MAChCF,KAAK,CAACG,QAAN,GAAiBL,SAAjB;MACA;IACD;;IACDqB,IAAI,GAAGjB,IAAP;EACD;;EACD,OAAO,SAAP;AACD;;AAED,SAASa,YAAT,CAAsBf,KAAtB,EAA6B;EAC3B,IAAIc,KAAK,GAAG,IAAZ;EACA,IAAId,KAAK,CAACY,MAAN,CAAavB,MAAb,GAAsB,CAA1B,EACEyB,KAAK,GAAGd,KAAK,CAACY,MAAN,CAAaZ,KAAK,CAACY,MAAN,CAAavB,MAAb,GAAsB,CAAnC,CAAR;EACF,OAAOyB,KAAP;AACD;;AAED,OAAO,MAAMM,KAAK,GAAG;EACnBC,UAAU,EAAE,YAAW;IACrB,OAAO;MACLlB,QAAQ,EAAEL,SADL;MAELc,MAAM,EAAE;IAFH,CAAP;EAID,CANkB;EAOnBU,KAAK,EAAE,UAASvB,MAAT,EAAiBC,KAAjB,EAAwB;IAC7B,IAAID,MAAM,CAACwB,QAAP,EAAJ,EAAuB,OAAO,IAAP;IACvB,OAAOvB,KAAK,CAACG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;EACD,CAVkB;EAWnBwB,MAAM,EAAE,UAASxB,KAAT,EAAgByB,SAAhB,EAA2BC,EAA3B,EAA+B;IACrC,IAAI1B,KAAK,CAACG,QAAN,KAAmBL,SAAnB,IAAgCE,KAAK,CAACG,QAAN,KAAmB,IAAvD,EACE,OAAO,IAAP;IAEF,IAAIwB,KAAK,GAAG,CAAZ;IACA,IAAIF,SAAS,KAAK,GAAd,IAAqBA,SAAS,KAAK,IAAnC,IACAA,SAAS,KAAK,GADd,IACqBA,SAAS,KAAK,IADnC,IAEAA,SAAS,KAAK,IAFlB,EAGEE,KAAK,GAAG,CAAC,CAAT;IAEF,OAAO,CAAC3B,KAAK,CAACY,MAAN,CAAavB,MAAb,GAAsBsC,KAAvB,IAAgCD,EAAE,CAACE,IAA1C;EACD,CAtBkB;EAwBnBC,YAAY,EAAE;IACZC,aAAa,EAAE,cADH;IAEZC,aAAa,EAAE;MAACC,IAAI,EAAE,IAAP;MAAaC,KAAK,EAAE;QAACC,IAAI,EAAE,IAAP;QAAaC,KAAK,EAAE;MAApB;IAApB;EAFH;AAxBK,CAAd"},"metadata":{},"sourceType":"module"}