{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\n\nvar xor = require('buffer-xor');\n\nfunction encryptStart(self, data, decrypt) {\n  var len = data.length;\n  var out = xor(data, self._cache);\n  self._cache = self._cache.slice(len);\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out]);\n  return out;\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0);\n  var len;\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev);\n      self._prev = Buffer.allocUnsafe(0);\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length;\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)]);\n      data = data.slice(len);\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)]);\n      break;\n    }\n  }\n\n  return out;\n};","map":{"version":3,"names":["Buffer","require","xor","encryptStart","self","data","decrypt","len","length","out","_cache","slice","_prev","concat","exports","encrypt","allocUnsafe","_cipher","encryptBlock"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/browserify-aes/modes/cfb.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AACA,IAAIE,GAAG,GAAGD,OAAO,CAAC,YAAD,CAAjB;;AAEA,SAASE,YAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4C;EAC1C,IAAIC,GAAG,GAAGF,IAAI,CAACG,MAAf;EACA,IAAIC,GAAG,GAAGP,GAAG,CAACG,IAAD,EAAOD,IAAI,CAACM,MAAZ,CAAb;EACAN,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACM,MAAL,CAAYC,KAAZ,CAAkBJ,GAAlB,CAAd;EACAH,IAAI,CAACQ,KAAL,GAAaZ,MAAM,CAACa,MAAP,CAAc,CAACT,IAAI,CAACQ,KAAN,EAAaN,OAAO,GAAGD,IAAH,GAAUI,GAA9B,CAAd,CAAb;EACA,OAAOA,GAAP;AACD;;AAEDK,OAAO,CAACC,OAAR,GAAkB,UAAUX,IAAV,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;EAC/C,IAAIG,GAAG,GAAGT,MAAM,CAACgB,WAAP,CAAmB,CAAnB,CAAV;EACA,IAAIT,GAAJ;;EAEA,OAAOF,IAAI,CAACG,MAAZ,EAAoB;IAClB,IAAIJ,IAAI,CAACM,MAAL,CAAYF,MAAZ,KAAuB,CAA3B,EAA8B;MAC5BJ,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACa,OAAL,CAAaC,YAAb,CAA0Bd,IAAI,CAACQ,KAA/B,CAAd;MACAR,IAAI,CAACQ,KAAL,GAAaZ,MAAM,CAACgB,WAAP,CAAmB,CAAnB,CAAb;IACD;;IAED,IAAIZ,IAAI,CAACM,MAAL,CAAYF,MAAZ,IAAsBH,IAAI,CAACG,MAA/B,EAAuC;MACrCD,GAAG,GAAGH,IAAI,CAACM,MAAL,CAAYF,MAAlB;MACAC,GAAG,GAAGT,MAAM,CAACa,MAAP,CAAc,CAACJ,GAAD,EAAMN,YAAY,CAACC,IAAD,EAAOC,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcJ,GAAd,CAAP,EAA2BD,OAA3B,CAAlB,CAAd,CAAN;MACAD,IAAI,GAAGA,IAAI,CAACM,KAAL,CAAWJ,GAAX,CAAP;IACD,CAJD,MAIO;MACLE,GAAG,GAAGT,MAAM,CAACa,MAAP,CAAc,CAACJ,GAAD,EAAMN,YAAY,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,CAAlB,CAAd,CAAN;MACA;IACD;EACF;;EAED,OAAOG,GAAP;AACD,CArBD"},"metadata":{},"sourceType":"script"}