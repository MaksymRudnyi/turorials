{"ast":null,"code":"import { Decoration, showPanel, EditorView, ViewPlugin, hoverTooltip, logException, gutter, showTooltip, getPanel, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n  constructor(from, to, diagnostic) {\n    this.from = from;\n    this.to = to;\n    this.diagnostic = diagnostic;\n  }\n\n}\n\nclass LintState {\n  constructor(diagnostics, panel, selected) {\n    this.diagnostics = diagnostics;\n    this.panel = panel;\n    this.selected = selected;\n  }\n\n  static init(diagnostics, panel, state) {\n    // Filter the list of diagnostics for which to create markers\n    let markedDiagnostics = diagnostics;\n    let diagnosticFilter = state.facet(lintConfig).markerFilter;\n    if (diagnosticFilter) markedDiagnostics = diagnosticFilter(markedDiagnostics);\n    let ranges = Decoration.set(markedDiagnostics.map(d => {\n      // For zero-length ranges or ranges covering only a line break, create a widget\n      return d.from == d.to || d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from ? Decoration.widget({\n        widget: new DiagnosticWidget(d),\n        diagnostic: d\n      }).range(d.from) : Decoration.mark({\n        attributes: {\n          class: \"cm-lintRange cm-lintRange-\" + d.severity\n        },\n        diagnostic: d\n      }).range(d.from, d.to);\n    }), true);\n    return new LintState(ranges, panel, findDiagnostic(ranges));\n  }\n\n}\n\nfunction findDiagnostic(diagnostics) {\n  let diagnostic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let found = null;\n  diagnostics.between(after, 1e9, (from, to, _ref) => {\n    let {\n      spec\n    } = _ref;\n    if (diagnostic && spec.diagnostic != diagnostic) return;\n    found = new SelectedDiagnostic(from, to, spec.diagnostic);\n    return false;\n  });\n  return found;\n}\n\nfunction hideTooltip(tr, tooltip) {\n  return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(tooltip.pos));\n}\n\nfunction maybeEnableLint(state, effects) {\n  return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([lintState, EditorView.decorations.compute([lintState], state => {\n    let {\n      selected,\n      panel\n    } = state.field(lintState);\n    return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([activeMark.range(selected.from, selected.to)]);\n  }), hoverTooltip(lintTooltip, {\n    hideOn: hideTooltip\n  }), baseTheme]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\n\n\nfunction setDiagnostics(state, diagnostics) {\n  return {\n    effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n  };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\n\n\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n  create() {\n    return new LintState(Decoration.none, null, null);\n  },\n\n  update(value, tr) {\n    if (tr.docChanged) {\n      let mapped = value.diagnostics.map(tr.changes),\n          selected = null;\n\n      if (value.selected) {\n        let selPos = tr.changes.mapPos(value.selected.from, 1);\n        selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n      }\n\n      value = new LintState(mapped, value.panel, selected);\n    }\n\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        value = LintState.init(effect.value, value.panel, tr.state);\n      } else if (effect.is(togglePanel)) {\n        value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n      } else if (effect.is(movePanelSelection)) {\n        value = new LintState(value.diagnostics, value.panel, effect.value);\n      }\n    }\n\n    return value;\n  },\n\n  provide: f => [showPanel.from(f, val => val.panel), EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\n\nfunction diagnosticCount(state) {\n  let lint = state.field(lintState, false);\n  return lint ? lint.diagnostics.size : 0;\n}\n\nconst activeMark = /*@__PURE__*/Decoration.mark({\n  class: \"cm-lintRange cm-lintRange-active\"\n});\n\nfunction lintTooltip(view, pos, side) {\n  let {\n    diagnostics\n  } = view.state.field(lintState);\n  let found = [],\n      stackStart = 2e8,\n      stackEnd = 0;\n  diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, _ref2) => {\n    let {\n      spec\n    } = _ref2;\n\n    if (pos >= from && pos <= to && (from == to || (pos > from || side > 0) && (pos < to || side < 0))) {\n      found.push(spec.diagnostic);\n      stackStart = Math.min(from, stackStart);\n      stackEnd = Math.max(to, stackEnd);\n    }\n  });\n  let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n  if (diagnosticFilter) found = diagnosticFilter(found);\n  if (!found.length) return null;\n  return {\n    pos: stackStart,\n    end: stackEnd,\n    above: view.state.doc.lineAt(stackStart).to < stackEnd,\n\n    create() {\n      return {\n        dom: diagnosticsTooltip(view, found)\n      };\n    }\n\n  };\n}\n\nfunction diagnosticsTooltip(view, diagnostics) {\n  return elt(\"ul\", {\n    class: \"cm-tooltip-lint\"\n  }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\n\n\nconst openLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) view.dispatch({\n    effects: maybeEnableLint(view.state, [togglePanel.of(true)])\n  });\n  let panel = getPanel(view, LintPanel.open);\n  if (panel) panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n  return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\n\n\nconst closeLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) return false;\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\n\n\nconst nextDiagnostic = view => {\n  let field = view.state.field(lintState, false);\n  if (!field) return false;\n  let sel = view.state.selection.main,\n      next = field.diagnostics.iter(sel.to + 1);\n\n  if (!next.value) {\n    next = field.diagnostics.iter(0);\n    if (!next.value || next.from == sel.from && next.to == sel.to) return false;\n  }\n\n  view.dispatch({\n    selection: {\n      anchor: next.from,\n      head: next.to\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\n\n\nconst lintKeymap = [{\n  key: \"Mod-Shift-m\",\n  run: openLintPanel\n}, {\n  key: \"F8\",\n  run: nextDiagnostic\n}];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.timeout = -1;\n    this.set = true;\n    let {\n      delay\n    } = view.state.facet(lintConfig);\n    this.lintTime = Date.now() + delay;\n    this.run = this.run.bind(this);\n    this.timeout = setTimeout(this.run, delay);\n  }\n\n  run() {\n    let now = Date.now();\n\n    if (now < this.lintTime - 10) {\n      setTimeout(this.run, this.lintTime - now);\n    } else {\n      this.set = false;\n      let {\n        state\n      } = this.view,\n          {\n        sources\n      } = state.facet(lintConfig);\n      Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n        let all = annotations.reduce((a, b) => a.concat(b));\n        if (this.view.state.doc == state.doc) this.view.dispatch(setDiagnostics(this.view.state, all));\n      }, error => {\n        logException(this.view.state, error);\n      });\n    }\n  }\n\n  update(update) {\n    let config = update.state.facet(lintConfig);\n\n    if (update.docChanged || config != update.startState.facet(lintConfig)) {\n      this.lintTime = Date.now() + config.delay;\n\n      if (!this.set) {\n        this.set = true;\n        this.timeout = setTimeout(this.run, config.delay);\n      }\n    }\n  }\n\n  force() {\n    if (this.set) {\n      this.lintTime = Date.now();\n      this.run();\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n\n});\nconst lintConfig = /*@__PURE__*/Facet.define({\n  combine(input) {\n    return Object.assign({\n      sources: input.map(i => i.source)\n    }, combineConfig(input.map(i => i.config), {\n      delay: 750,\n      markerFilter: null,\n      tooltipFilter: null\n    }));\n  },\n\n  enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\n\nfunction linter(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return lintConfig.of({\n    source,\n    config\n  });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\n\n\nfunction forceLinting(view) {\n  let plugin = view.plugin(lintPlugin);\n  if (plugin) plugin.force();\n}\n\nfunction assignKeys(actions) {\n  let assigned = [];\n  if (actions) actions: for (let {\n    name\n  } of actions) {\n    for (let i = 0; i < name.length; i++) {\n      let ch = name[i];\n\n      if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n        assigned.push(ch);\n        continue actions;\n      }\n    }\n\n    assigned.push(\"\");\n  }\n  return assigned;\n}\n\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n  var _a;\n\n  let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n  return elt(\"li\", {\n    class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity\n  }, elt(\"span\", {\n    class: \"cm-diagnosticText\"\n  }, diagnostic.renderMessage ? diagnostic.renderMessage() : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n    let click = e => {\n      e.preventDefault();\n      let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n      if (found) action.apply(view, found.from, found.to);\n    };\n\n    let {\n      name\n    } = action,\n        keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n    let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex), elt(\"u\", name.slice(keyIndex, keyIndex + 1)), name.slice(keyIndex + 1)];\n    return elt(\"button\", {\n      type: \"button\",\n      class: \"cm-diagnosticAction\",\n      onclick: click,\n      onmousedown: click,\n      \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n    }, nameElt);\n  }), diagnostic.source && elt(\"div\", {\n    class: \"cm-diagnosticSource\"\n  }, diagnostic.source));\n}\n\nclass DiagnosticWidget extends WidgetType {\n  constructor(diagnostic) {\n    super();\n    this.diagnostic = diagnostic;\n  }\n\n  eq(other) {\n    return other.diagnostic == this.diagnostic;\n  }\n\n  toDOM() {\n    return elt(\"span\", {\n      class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity\n    });\n  }\n\n}\n\nclass PanelItem {\n  constructor(view, diagnostic) {\n    this.diagnostic = diagnostic;\n    this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n    this.dom = renderDiagnostic(view, diagnostic, true);\n    this.dom.id = this.id;\n    this.dom.setAttribute(\"role\", \"option\");\n  }\n\n}\n\nclass LintPanel {\n  constructor(view) {\n    this.view = view;\n    this.items = [];\n\n    let onkeydown = event => {\n      if (event.keyCode == 27) {\n        // Escape\n        closeLintPanel(this.view);\n        this.view.focus();\n      } else if (event.keyCode == 38 || event.keyCode == 33) {\n        // ArrowUp, PageUp\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      } else if (event.keyCode == 40 || event.keyCode == 34) {\n        // ArrowDown, PageDown\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      } else if (event.keyCode == 36) {\n        // Home\n        this.moveSelection(0);\n      } else if (event.keyCode == 35) {\n        // End\n        this.moveSelection(this.items.length - 1);\n      } else if (event.keyCode == 13) {\n        // Enter\n        this.view.focus();\n      } else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) {\n        // A-Z\n        let {\n          diagnostic\n        } = this.items[this.selectedIndex],\n            keys = assignKeys(diagnostic.actions);\n\n        for (let i = 0; i < keys.length; i++) if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n          let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n          if (found) diagnostic.actions[i].apply(view, found.from, found.to);\n        }\n      } else {\n        return;\n      }\n\n      event.preventDefault();\n    };\n\n    let onclick = event => {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].dom.contains(event.target)) this.moveSelection(i);\n      }\n    };\n\n    this.list = elt(\"ul\", {\n      tabIndex: 0,\n      role: \"listbox\",\n      \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n      onkeydown,\n      onclick\n    });\n    this.dom = elt(\"div\", {\n      class: \"cm-panel-lint\"\n    }, this.list, elt(\"button\", {\n      type: \"button\",\n      name: \"close\",\n      \"aria-label\": this.view.state.phrase(\"close\"),\n      onclick: () => closeLintPanel(this.view)\n    }, \"×\"));\n    this.update();\n  }\n\n  get selectedIndex() {\n    let selected = this.view.state.field(lintState).selected;\n    if (!selected) return -1;\n\n    for (let i = 0; i < this.items.length; i++) if (this.items[i].diagnostic == selected.diagnostic) return i;\n\n    return -1;\n  }\n\n  update() {\n    let {\n      diagnostics,\n      selected\n    } = this.view.state.field(lintState);\n    let i = 0,\n        needsSync = false,\n        newSelectedItem = null;\n    diagnostics.between(0, this.view.state.doc.length, (_start, _end, _ref3) => {\n      let {\n        spec\n      } = _ref3;\n      let found = -1,\n          item;\n\n      for (let j = i; j < this.items.length; j++) if (this.items[j].diagnostic == spec.diagnostic) {\n        found = j;\n        break;\n      }\n\n      if (found < 0) {\n        item = new PanelItem(this.view, spec.diagnostic);\n        this.items.splice(i, 0, item);\n        needsSync = true;\n      } else {\n        item = this.items[found];\n\n        if (found > i) {\n          this.items.splice(i, found - i);\n          needsSync = true;\n        }\n      }\n\n      if (selected && item.diagnostic == selected.diagnostic) {\n        if (!item.dom.hasAttribute(\"aria-selected\")) {\n          item.dom.setAttribute(\"aria-selected\", \"true\");\n          newSelectedItem = item;\n        }\n      } else if (item.dom.hasAttribute(\"aria-selected\")) {\n        item.dom.removeAttribute(\"aria-selected\");\n      }\n\n      i++;\n    });\n\n    while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n      needsSync = true;\n      this.items.pop();\n    }\n\n    if (this.items.length == 0) {\n      this.items.push(new PanelItem(this.view, {\n        from: -1,\n        to: -1,\n        severity: \"info\",\n        message: this.view.state.phrase(\"No diagnostics\")\n      }));\n      needsSync = true;\n    }\n\n    if (newSelectedItem) {\n      this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n      this.view.requestMeasure({\n        key: this,\n        read: () => ({\n          sel: newSelectedItem.dom.getBoundingClientRect(),\n          panel: this.list.getBoundingClientRect()\n        }),\n        write: _ref4 => {\n          let {\n            sel,\n            panel\n          } = _ref4;\n          if (sel.top < panel.top) this.list.scrollTop -= panel.top - sel.top;else if (sel.bottom > panel.bottom) this.list.scrollTop += sel.bottom - panel.bottom;\n        }\n      });\n    } else if (this.selectedIndex < 0) {\n      this.list.removeAttribute(\"aria-activedescendant\");\n    }\n\n    if (needsSync) this.sync();\n  }\n\n  sync() {\n    let domPos = this.list.firstChild;\n\n    function rm() {\n      let prev = domPos;\n      domPos = prev.nextSibling;\n      prev.remove();\n    }\n\n    for (let item of this.items) {\n      if (item.dom.parentNode == this.list) {\n        while (domPos != item.dom) rm();\n\n        domPos = item.dom.nextSibling;\n      } else {\n        this.list.insertBefore(item.dom, domPos);\n      }\n    }\n\n    while (domPos) rm();\n  }\n\n  moveSelection(selectedIndex) {\n    if (this.selectedIndex < 0) return;\n    let field = this.view.state.field(lintState);\n    let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n    if (!selection) return;\n    this.view.dispatch({\n      selection: {\n        anchor: selection.from,\n        head: selection.to\n      },\n      scrollIntoView: true,\n      effects: movePanelSelection.of(selection)\n    });\n  }\n\n  static open(view) {\n    return new LintPanel(view);\n  }\n\n}\n\nfunction svg(content) {\n  let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `viewBox=\"0 0 40 40\"`;\n  return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\n\nfunction underline(color) {\n  return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-diagnostic\": {\n    padding: \"3px 6px 3px 8px\",\n    marginLeft: \"-1px\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\"\n  },\n  \".cm-diagnostic-error\": {\n    borderLeft: \"5px solid #d11\"\n  },\n  \".cm-diagnostic-warning\": {\n    borderLeft: \"5px solid orange\"\n  },\n  \".cm-diagnostic-info\": {\n    borderLeft: \"5px solid #999\"\n  },\n  \".cm-diagnosticAction\": {\n    font: \"inherit\",\n    border: \"none\",\n    padding: \"2px 4px\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    borderRadius: \"3px\",\n    marginLeft: \"8px\"\n  },\n  \".cm-diagnosticSource\": {\n    fontSize: \"70%\",\n    opacity: .7\n  },\n  \".cm-lintRange\": {\n    backgroundPosition: \"left bottom\",\n    backgroundRepeat: \"repeat-x\",\n    paddingBottom: \"0.7px\"\n  },\n  \".cm-lintRange-error\": {\n    backgroundImage: /*@__PURE__*/underline(\"#d11\")\n  },\n  \".cm-lintRange-warning\": {\n    backgroundImage: /*@__PURE__*/underline(\"orange\")\n  },\n  \".cm-lintRange-info\": {\n    backgroundImage: /*@__PURE__*/underline(\"#999\")\n  },\n  \".cm-lintRange-active\": {\n    backgroundColor: \"#ffdd9980\"\n  },\n  \".cm-tooltip-lint\": {\n    padding: 0,\n    margin: 0\n  },\n  \".cm-lintPoint\": {\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      left: \"-2px\",\n      borderLeft: \"3px solid transparent\",\n      borderRight: \"3px solid transparent\",\n      borderBottom: \"4px solid #d11\"\n    }\n  },\n  \".cm-lintPoint-warning\": {\n    \"&:after\": {\n      borderBottomColor: \"orange\"\n    }\n  },\n  \".cm-lintPoint-info\": {\n    \"&:after\": {\n      borderBottomColor: \"#999\"\n    }\n  },\n  \".cm-panel.cm-panel-lint\": {\n    position: \"relative\",\n    \"& ul\": {\n      maxHeight: \"100px\",\n      overflowY: \"auto\",\n      \"& [aria-selected]\": {\n        backgroundColor: \"#ddd\",\n        \"& u\": {\n          textDecoration: \"underline\"\n        }\n      },\n      \"&:focus [aria-selected]\": {\n        background_fallback: \"#bdf\",\n        backgroundColor: \"Highlight\",\n        color_fallback: \"white\",\n        color: \"HighlightText\"\n      },\n      \"& u\": {\n        textDecoration: \"none\"\n      },\n      padding: 0,\n      margin: 0\n    },\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"2px\",\n      background: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\n\nclass LintGutterMarker extends GutterMarker {\n  constructor(diagnostics) {\n    super();\n    this.diagnostics = diagnostics;\n    this.severity = diagnostics.reduce((max, d) => {\n      let s = d.severity;\n      return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n    }, \"info\");\n  }\n\n  toDOM(view) {\n    let elt = document.createElement(\"div\");\n    elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n    let diagnostics = this.diagnostics;\n    let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n    if (diagnosticsFilter) diagnostics = diagnosticsFilter(diagnostics);\n    if (diagnostics.length) elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n    return elt;\n  }\n\n}\n\nfunction trackHoverOn(view, marker) {\n  let mousemove = event => {\n    let rect = marker.getBoundingClientRect();\n    if (event.clientX > rect.left - 10\n    /* Margin */\n    && event.clientX < rect.right + 10\n    /* Margin */\n    && event.clientY > rect.top - 10\n    /* Margin */\n    && event.clientY < rect.bottom + 10\n    /* Margin */\n    ) return;\n\n    for (let target = event.target; target; target = target.parentNode) {\n      if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\")) return;\n    }\n\n    window.removeEventListener(\"mousemove\", mousemove);\n    if (view.state.field(lintGutterTooltip)) view.dispatch({\n      effects: setLintGutterTooltip.of(null)\n    });\n  };\n\n  window.addEventListener(\"mousemove\", mousemove);\n}\n\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n  function hovered() {\n    let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n    const linePos = view.coordsAtPos(line.from);\n\n    if (linePos) {\n      view.dispatch({\n        effects: setLintGutterTooltip.of({\n          pos: line.from,\n          above: false,\n\n          create() {\n            return {\n              dom: diagnosticsTooltip(view, diagnostics),\n              getCoords: () => marker.getBoundingClientRect()\n            };\n          }\n\n        })\n      });\n    }\n\n    marker.onmouseout = marker.onmousemove = null;\n    trackHoverOn(view, marker);\n  }\n\n  let {\n    hoverTime\n  } = view.state.facet(lintGutterConfig);\n  let hoverTimeout = setTimeout(hovered, hoverTime);\n\n  marker.onmouseout = () => {\n    clearTimeout(hoverTimeout);\n    marker.onmouseout = marker.onmousemove = null;\n  };\n\n  marker.onmousemove = () => {\n    clearTimeout(hoverTimeout);\n    hoverTimeout = setTimeout(hovered, hoverTime);\n  };\n}\n\nfunction markersForDiagnostics(doc, diagnostics) {\n  let byLine = Object.create(null);\n\n  for (let diagnostic of diagnostics) {\n    let line = doc.lineAt(diagnostic.from);\n    (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n  }\n\n  let markers = [];\n\n  for (let line in byLine) {\n    markers.push(new LintGutterMarker(byLine[line]).range(+line));\n  }\n\n  return RangeSet.of(markers, true);\n}\n\nconst lintGutterExtension = /*@__PURE__*/gutter({\n  class: \"cm-gutter-lint\",\n  markers: view => view.state.field(lintGutterMarkers)\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n  create() {\n    return RangeSet.empty;\n  },\n\n  update(markers, tr) {\n    markers = markers.map(tr.changes);\n    let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        let diagnostics = effect.value;\n        if (diagnosticFilter) diagnostics = diagnosticFilter(diagnostics || []);\n        markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n      }\n    }\n\n    return markers;\n  }\n\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n  create() {\n    return null;\n  },\n\n  update(tooltip, tr) {\n    if (tooltip && tr.docChanged) tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), {\n      pos: tr.changes.mapPos(tooltip.pos)\n    });\n    return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n  },\n\n  provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-gutter-lint\": {\n    width: \"1.4em\",\n    \"& .cm-gutterElement\": {\n      padding: \".2em\"\n    }\n  },\n  \".cm-lint-marker\": {\n    width: \"1em\",\n    height: \"1em\"\n  },\n  \".cm-lint-marker-info\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n  },\n  \".cm-lint-marker-warning\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`)\n  },\n  \".cm-lint-marker-error:before\": {\n    content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n  }\n});\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n  combine(configs) {\n    return combineConfig(configs, {\n      hoverTime: 300\n      /* Time */\n      ,\n      markerFilter: null,\n      tooltipFilter: null\n    });\n  }\n\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\n\nfunction lintGutter() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n\nexport { closeLintPanel, diagnosticCount, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };","map":{"version":3,"names":["Decoration","showPanel","EditorView","ViewPlugin","hoverTooltip","logException","gutter","showTooltip","getPanel","WidgetType","GutterMarker","StateEffect","StateField","Facet","combineConfig","RangeSet","elt","SelectedDiagnostic","constructor","from","to","diagnostic","LintState","diagnostics","panel","selected","init","state","markedDiagnostics","diagnosticFilter","facet","lintConfig","markerFilter","ranges","set","map","d","doc","lineAt","widget","DiagnosticWidget","range","mark","attributes","class","severity","findDiagnostic","after","found","between","spec","hideTooltip","tr","tooltip","effects","some","e","is","setDiagnosticsEffect","changes","touchesRange","pos","maybeEnableLint","field","lintState","concat","appendConfig","of","decorations","compute","none","activeMark","lintTooltip","hideOn","baseTheme","setDiagnostics","define","togglePanel","movePanelSelection","create","update","value","docChanged","mapped","selPos","mapPos","effect","LintPanel","open","provide","f","val","s","diagnosticCount","lint","size","view","side","stackStart","stackEnd","push","Math","min","max","tooltipFilter","length","end","above","dom","diagnosticsTooltip","renderDiagnostic","openLintPanel","dispatch","querySelector","focus","closeLintPanel","nextDiagnostic","sel","selection","main","next","iter","anchor","head","scrollIntoView","lintKeymap","key","run","lintPlugin","fromClass","timeout","delay","lintTime","Date","now","bind","setTimeout","sources","Promise","all","source","resolve","then","annotations","reduce","a","b","error","config","startState","force","destroy","clearTimeout","combine","input","Object","assign","i","enables","linter","forceLinting","plugin","assignKeys","actions","assigned","name","ch","test","c","toLowerCase","inPanel","_a","keys","renderMessage","message","action","click","preventDefault","apply","keyIndex","indexOf","nameElt","slice","type","onclick","onmousedown","eq","other","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","onkeydown","event","keyCode","moveSelection","selectedIndex","toUpperCase","charCodeAt","contains","target","list","tabIndex","role","phrase","needsSync","newSelectedItem","_start","_end","item","j","splice","hasAttribute","removeAttribute","pop","requestMeasure","read","getBoundingClientRect","write","top","scrollTop","bottom","sync","domPos","firstChild","rm","prev","nextSibling","remove","parentNode","insertBefore","svg","content","attrs","encodeURIComponent","underline","color","padding","marginLeft","display","whiteSpace","borderLeft","font","border","backgroundColor","borderRadius","fontSize","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","margin","position","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","right","background","LintGutterMarker","document","createElement","className","diagnosticsFilter","lintGutterConfig","onmouseover","gutterMarkerMouseOver","trackHoverOn","marker","mousemove","rect","clientX","clientY","nodeType","classList","window","removeEventListener","lintGutterTooltip","setLintGutterTooltip","addEventListener","hovered","line","elementAtHeight","documentTop","linePos","coordsAtPos","getCoords","onmouseout","onmousemove","hoverTime","hoverTimeout","markersForDiagnostics","byLine","markers","lintGutterExtension","lintGutterMarkers","empty","t","lintGutterTheme","width","height","configs","lintGutter"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/lint/dist/index.js"],"sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, hoverTooltip, logException, gutter, showTooltip, getPanel, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics);\n        let ranges = Decoration.set(markedDiagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(tooltip.pos));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([\n        lintState,\n        EditorView.decorations.compute([lintState], state => {\n            let { selected, panel } = state.field(lintState);\n            return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                activeMark.range(selected.from, selected.to)\n            ]);\n        }),\n        hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n        baseTheme\n    ]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (diagnosticFilter)\n        found = diagnosticFilter(found);\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                let all = annotations.reduce((a, b) => a.concat(b));\n                if (this.view.state.doc == state.doc)\n                    this.view.dispatch(setDiagnostics(this.view.state, all));\n            }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null\n        }));\n    },\n    enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    return lintConfig.of({ source, config });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage() : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let click = (e) => {\n            e.preventDefault();\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => {\n            let s = d.severity;\n            return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n        }, \"info\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Margin */ && event.clientX < rect.right + 10 /* Margin */ &&\n            event.clientY > rect.top - 10 /* Margin */ && event.clientY < rect.bottom + 10 /* Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || []);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error:before\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n\nexport { closeLintPanel, diagnosticCount, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}