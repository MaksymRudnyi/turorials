{"ast":null,"code":"/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map(str => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/)) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1; // Make it inclusive by moving the right 'stop-point' away by one.\n\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;","map":{"version":3,"names":["parsePart","string","res","m","str","split","map","trim","test","push","parseInt","match","_","lhs","sep","rhs","incr","i","exports","default","module"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/parse-numeric-range/index.js"],"sourcesContent":["/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;EACzB,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIC,CAAJ;;EAEA,KAAK,IAAIC,GAAT,IAAgBH,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAuBF,GAAD,IAASA,GAAG,CAACG,IAAJ,EAA/B,CAAhB,EAA4D;IAC1D;IACA,IAAI,UAAUC,IAAV,CAAeJ,GAAf,CAAJ,EAAyB;MACvBF,GAAG,CAACO,IAAJ,CAASC,QAAQ,CAACN,GAAD,EAAM,EAAN,CAAjB;IACD,CAFD,MAEO,IACJD,CAAC,GAAGC,GAAG,CAACO,KAAJ,CAAU,kDAAV,CADA,EAEL;MACA;MACA,IAAI,CAACC,CAAD,EAAIC,GAAJ,EAASC,GAAT,EAAcC,GAAd,IAAqBZ,CAAzB;;MAEA,IAAIU,GAAG,IAAIE,GAAX,EAAgB;QACdF,GAAG,GAAGH,QAAQ,CAACG,GAAD,CAAd;QACAE,GAAG,GAAGL,QAAQ,CAACK,GAAD,CAAd;QACA,MAAMC,IAAI,GAAGH,GAAG,GAAGE,GAAN,GAAY,CAAZ,GAAgB,CAAC,CAA9B,CAHc,CAKd;;QACA,IAAID,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,IAAvB,IAA+BA,GAAG,KAAK,QAA3C,EAAqDC,GAAG,IAAIC,IAAP;;QAErD,KAAK,IAAIC,CAAC,GAAGJ,GAAb,EAAkBI,CAAC,KAAKF,GAAxB,EAA6BE,CAAC,IAAID,IAAlC,EAAwCd,GAAG,CAACO,IAAJ,CAASQ,CAAT;MACzC;IACF;EACF;;EAED,OAAOf,GAAP;AACD;;AAEDgB,OAAO,CAACC,OAAR,GAAkBnB,SAAlB;AACAoB,MAAM,CAACF,OAAP,GAAiBlB,SAAjB"},"metadata":{},"sourceType":"script"}