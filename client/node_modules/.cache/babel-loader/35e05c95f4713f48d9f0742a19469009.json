{"ast":null,"code":"/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file);\n  /** @type {Array.<number>} */\n\n  var indices = [];\n  var search = /\\r?\\n|\\r/g;\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex);\n  }\n\n  indices.push(value.length + 1);\n  return {\n    toPoint,\n    toOffset\n  };\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n\n  function toPoint(offset) {\n    var index = -1;\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          };\n        }\n      }\n    }\n\n    return {\n      line: undefined,\n      column: undefined,\n      offset: undefined\n    };\n  }\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n\n\n  function toOffset(point) {\n    var line = point && point.line;\n    var column = point && point.column;\n    /** @type {number} */\n\n    var offset;\n\n    if (typeof line === 'number' && typeof column === 'number' && !Number.isNaN(line) && !Number.isNaN(column) && line - 1 in indices) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0;\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1;\n  }\n}","map":{"version":3,"names":["location","file","value","String","indices","search","test","push","lastIndex","length","toPoint","toOffset","offset","index","line","column","undefined","point","Number","isNaN"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/vfile-location/index.js"],"sourcesContent":["/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file)\n  /** @type {Array.<number>} */\n  var indices = []\n  var search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n  function toPoint(offset) {\n    var index = -1\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n  function toOffset(point) {\n    var line = point && point.line\n    var column = point && point.column\n    /** @type {number} */\n    var offset\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EAC7B,IAAIC,KAAK,GAAGC,MAAM,CAACF,IAAD,CAAlB;EACA;;EACA,IAAIG,OAAO,GAAG,EAAd;EACA,IAAIC,MAAM,GAAG,WAAb;;EAEA,OAAOA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAP,EAA2B;IACzBE,OAAO,CAACG,IAAR,CAAaF,MAAM,CAACG,SAApB;EACD;;EAEDJ,OAAO,CAACG,IAAR,CAAaL,KAAK,CAACO,MAAN,GAAe,CAA5B;EAEA,OAAO;IAACC,OAAD;IAAUC;EAAV,CAAP;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,SAASD,OAAT,CAAiBE,MAAjB,EAAyB;IACvB,IAAIC,KAAK,GAAG,CAAC,CAAb;;IAEA,IAAID,MAAM,GAAG,CAAC,CAAV,IAAeA,MAAM,GAAGR,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAAnC,EAAyD;MACvD,OAAO,EAAEI,KAAF,GAAUT,OAAO,CAACK,MAAzB,EAAiC;QAC/B,IAAIL,OAAO,CAACS,KAAD,CAAP,GAAiBD,MAArB,EAA6B;UAC3B,OAAO;YACLE,IAAI,EAAED,KAAK,GAAG,CADT;YAELE,MAAM,EAAEH,MAAM,IAAIR,OAAO,CAACS,KAAK,GAAG,CAAT,CAAP,IAAsB,CAA1B,CAAN,GAAqC,CAFxC;YAGLD;UAHK,CAAP;QAKD;MACF;IACF;;IAED,OAAO;MAACE,IAAI,EAAEE,SAAP;MAAkBD,MAAM,EAAEC,SAA1B;MAAqCJ,MAAM,EAAEI;IAA7C,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACE,SAASL,QAAT,CAAkBM,KAAlB,EAAyB;IACvB,IAAIH,IAAI,GAAGG,KAAK,IAAIA,KAAK,CAACH,IAA1B;IACA,IAAIC,MAAM,GAAGE,KAAK,IAAIA,KAAK,CAACF,MAA5B;IACA;;IACA,IAAIH,MAAJ;;IAEA,IACE,OAAOE,IAAP,KAAgB,QAAhB,IACA,OAAOC,MAAP,KAAkB,QADlB,IAEA,CAACG,MAAM,CAACC,KAAP,CAAaL,IAAb,CAFD,IAGA,CAACI,MAAM,CAACC,KAAP,CAAaJ,MAAb,CAHD,IAIAD,IAAI,GAAG,CAAP,IAAYV,OALd,EAME;MACAQ,MAAM,GAAG,CAACR,OAAO,CAACU,IAAI,GAAG,CAAR,CAAP,IAAqB,CAAtB,IAA2BC,MAA3B,GAAoC,CAApC,IAAyC,CAAlD;IACD;;IAED,OAAOH,MAAM,GAAG,CAAC,CAAV,IAAeA,MAAM,GAAGR,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAA/B,GAAsDG,MAAtD,GAA+D,CAAC,CAAvE;EACD;AACF"},"metadata":{},"sourceType":"module"}