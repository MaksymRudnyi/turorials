{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\n\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape');\n    effects.enter('escapeMarker');\n    effects.consume(code);\n    effects.exit('escapeMarker');\n    return open;\n  }\n  /** @type {State} */\n\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue');\n      effects.consume(code);\n      effects.exit('characterEscapeValue');\n      effects.exit('characterEscape');\n      return ok;\n    }\n\n    return nok(code);\n  }\n}","map":{"version":3,"names":["asciiPunctuation","characterEscape","name","tokenize","tokenizeCharacterEscape","effects","ok","nok","start","code","enter","consume","exit","open"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/micromark-core-commonmark/lib/character-escape.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAAQA,gBAAR,QAA+B,0BAA/B;AAEA;;AACA,OAAO,MAAMC,eAAe,GAAG;EAC7BC,IAAI,EAAE,iBADuB;EAE7BC,QAAQ,EAAEC;AAFmB,CAAxB;AAIP;;AAEA,SAASA,uBAAT,CAAiCC,OAAjC,EAA0CC,EAA1C,EAA8CC,GAA9C,EAAmD;EACjD,OAAOC,KAAP;EACA;;EAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;IACnBJ,OAAO,CAACK,KAAR,CAAc,iBAAd;IACAL,OAAO,CAACK,KAAR,CAAc,cAAd;IACAL,OAAO,CAACM,OAAR,CAAgBF,IAAhB;IACAJ,OAAO,CAACO,IAAR,CAAa,cAAb;IACA,OAAOC,IAAP;EACD;EACD;;;EAEA,SAASA,IAAT,CAAcJ,IAAd,EAAoB;IAClB,IAAIT,gBAAgB,CAACS,IAAD,CAApB,EAA4B;MAC1BJ,OAAO,CAACK,KAAR,CAAc,sBAAd;MACAL,OAAO,CAACM,OAAR,CAAgBF,IAAhB;MACAJ,OAAO,CAACO,IAAR,CAAa,sBAAb;MACAP,OAAO,CAACO,IAAR,CAAa,iBAAb;MACA,OAAON,EAAP;IACD;;IAED,OAAOC,GAAG,CAACE,IAAD,CAAV;EACD;AACF"},"metadata":{},"sourceType":"module"}