{"ast":null,"code":"'use strict';\n\nconst HTML = require('../common/html'); //Aliases\n\n\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES; //Element utils\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\n\nfunction isImpliedEndTagRequired(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n    case 3:\n      return tn === $.RTC;\n\n    case 6:\n      return tn === $.OPTION;\n\n    case 8:\n      return tn === $.OPTGROUP;\n  }\n\n  return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI || tn === $.TD || tn === $.TH || tn === $.TR;\n\n    case 3:\n      return tn === $.RTC;\n\n    case 5:\n      return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n    case 6:\n      return tn === $.OPTION;\n\n    case 7:\n      return tn === $.CAPTION;\n\n    case 8:\n      return tn === $.OPTGROUP || tn === $.COLGROUP;\n  }\n\n  return false;\n}\n\nfunction isScopingElement(tn, ns) {\n  switch (tn.length) {\n    case 2:\n      if (tn === $.TD || tn === $.TH) {\n        return ns === NS.HTML;\n      } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n        return ns === NS.MATHML;\n      }\n\n      break;\n\n    case 4:\n      if (tn === $.HTML) {\n        return ns === NS.HTML;\n      } else if (tn === $.DESC) {\n        return ns === NS.SVG;\n      }\n\n      break;\n\n    case 5:\n      if (tn === $.TABLE) {\n        return ns === NS.HTML;\n      } else if (tn === $.MTEXT) {\n        return ns === NS.MATHML;\n      } else if (tn === $.TITLE) {\n        return ns === NS.SVG;\n      }\n\n      break;\n\n    case 6:\n      return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n    case 7:\n      return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n    case 8:\n      return tn === $.TEMPLATE && ns === NS.HTML;\n\n    case 13:\n      return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n    case 14:\n      return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n  }\n\n  return false;\n} //Stack of open elements\n\n\nclass OpenElementStack {\n  constructor(document, treeAdapter) {\n    this.stackTop = -1;\n    this.items = [];\n    this.current = document;\n    this.currentTagName = null;\n    this.currentTmplContent = null;\n    this.tmplCount = 0;\n    this.treeAdapter = treeAdapter;\n  } //Index of element\n\n\n  _indexOf(element) {\n    let idx = -1;\n\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.items[i] === element) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  } //Update current element\n\n\n  _isInTemplate() {\n    return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n  }\n\n  _updateCurrentElement() {\n    this.current = this.items[this.stackTop];\n    this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n    this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n  } //Mutations\n\n\n  push(element) {\n    this.items[++this.stackTop] = element;\n\n    this._updateCurrentElement();\n\n    if (this._isInTemplate()) {\n      this.tmplCount++;\n    }\n  }\n\n  pop() {\n    this.stackTop--;\n\n    if (this.tmplCount > 0 && this._isInTemplate()) {\n      this.tmplCount--;\n    }\n\n    this._updateCurrentElement();\n  }\n\n  replace(oldElement, newElement) {\n    const idx = this._indexOf(oldElement);\n\n    this.items[idx] = newElement;\n\n    if (idx === this.stackTop) {\n      this._updateCurrentElement();\n    }\n  }\n\n  insertAfter(referenceElement, newElement) {\n    const insertionIdx = this._indexOf(referenceElement) + 1;\n    this.items.splice(insertionIdx, 0, newElement);\n\n    if (insertionIdx === ++this.stackTop) {\n      this._updateCurrentElement();\n    }\n  }\n\n  popUntilTagNamePopped(tagName) {\n    while (this.stackTop > -1) {\n      const tn = this.currentTagName;\n      const ns = this.treeAdapter.getNamespaceURI(this.current);\n      this.pop();\n\n      if (tn === tagName && ns === NS.HTML) {\n        break;\n      }\n    }\n  }\n\n  popUntilElementPopped(element) {\n    while (this.stackTop > -1) {\n      const poppedElement = this.current;\n      this.pop();\n\n      if (poppedElement === element) {\n        break;\n      }\n    }\n  }\n\n  popUntilNumberedHeaderPopped() {\n    while (this.stackTop > -1) {\n      const tn = this.currentTagName;\n      const ns = this.treeAdapter.getNamespaceURI(this.current);\n      this.pop();\n\n      if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML) {\n        break;\n      }\n    }\n  }\n\n  popUntilTableCellPopped() {\n    while (this.stackTop > -1) {\n      const tn = this.currentTagName;\n      const ns = this.treeAdapter.getNamespaceURI(this.current);\n      this.pop();\n\n      if (tn === $.TD || tn === $.TH && ns === NS.HTML) {\n        break;\n      }\n    }\n  }\n\n  popAllUpToHtmlElement() {\n    //NOTE: here we assume that root <html> element is always first in the open element stack, so\n    //we perform this fast stack clean up.\n    this.stackTop = 0;\n\n    this._updateCurrentElement();\n  }\n\n  clearBackToTableContext() {\n    while (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n      this.pop();\n    }\n  }\n\n  clearBackToTableBodyContext() {\n    while (this.currentTagName !== $.TBODY && this.currentTagName !== $.TFOOT && this.currentTagName !== $.THEAD && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n      this.pop();\n    }\n  }\n\n  clearBackToTableRowContext() {\n    while (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n      this.pop();\n    }\n  }\n\n  remove(element) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (this.items[i] === element) {\n        this.items.splice(i, 1);\n        this.stackTop--;\n\n        this._updateCurrentElement();\n\n        break;\n      }\n    }\n  } //Search\n\n\n  tryPeekProperlyNestedBodyElement() {\n    //Properly nested <body> element (should be second element in stack).\n    const element = this.items[1];\n    return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n  }\n\n  contains(element) {\n    return this._indexOf(element) > -1;\n  }\n\n  getCommonAncestor(element) {\n    let elementIdx = this._indexOf(element);\n\n    return --elementIdx >= 0 ? this.items[elementIdx] : null;\n  }\n\n  isRootHtmlElementCurrent() {\n    return this.stackTop === 0 && this.currentTagName === $.HTML;\n  } //Element in scope\n\n\n  hasInScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n\n      if (isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasNumberedHeaderInScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML) {\n        return true;\n      }\n\n      if (isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInListItemScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n\n      if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInButtonScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n\n      if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInTableScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (ns !== NS.HTML) {\n        continue;\n      }\n\n      if (tn === tagName) {\n        return true;\n      }\n\n      if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasTableBodyContextInTableScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (ns !== NS.HTML) {\n        continue;\n      }\n\n      if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n        return true;\n      }\n\n      if (tn === $.TABLE || tn === $.HTML) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hasInSelectScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.treeAdapter.getTagName(this.items[i]);\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n      if (ns !== NS.HTML) {\n        continue;\n      }\n\n      if (tn === tagName) {\n        return true;\n      }\n\n      if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n        return false;\n      }\n    }\n\n    return true;\n  } //Implied end tags\n\n\n  generateImpliedEndTags() {\n    while (isImpliedEndTagRequired(this.currentTagName)) {\n      this.pop();\n    }\n  }\n\n  generateImpliedEndTagsThoroughly() {\n    while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n      this.pop();\n    }\n  }\n\n  generateImpliedEndTagsWithExclusion(exclusionTagName) {\n    while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n      this.pop();\n    }\n  }\n\n}\n\nmodule.exports = OpenElementStack;","map":{"version":3,"names":["HTML","require","$","TAG_NAMES","NS","NAMESPACES","isImpliedEndTagRequired","tn","length","P","RB","RP","RT","DD","DT","LI","RTC","OPTION","OPTGROUP","isImpliedEndTagRequiredThoroughly","TD","TH","TR","TBODY","TFOOT","THEAD","CAPTION","COLGROUP","isScopingElement","ns","MI","MO","MN","MS","MATHML","DESC","SVG","TABLE","MTEXT","TITLE","APPLET","OBJECT","MARQUEE","TEMPLATE","FOREIGN_OBJECT","ANNOTATION_XML","OpenElementStack","constructor","document","treeAdapter","stackTop","items","current","currentTagName","currentTmplContent","tmplCount","_indexOf","element","idx","i","_isInTemplate","getNamespaceURI","_updateCurrentElement","getTagName","getTemplateContent","push","pop","replace","oldElement","newElement","insertAfter","referenceElement","insertionIdx","splice","popUntilTagNamePopped","tagName","popUntilElementPopped","poppedElement","popUntilNumberedHeaderPopped","H1","H2","H3","H4","H5","H6","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","BODY","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","hasNumberedHeaderInScope","hasInListItemScope","UL","OL","hasInButtonScope","BUTTON","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionTagName","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/parse5/lib/parser/open-element-stack.js"],"sourcesContent":["'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}