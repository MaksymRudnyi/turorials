{"ast":null,"code":"// @ts-nocheck\nsupercollider.displayName = 'supercollider';\nsupercollider.aliases = ['sclang'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function supercollider(Prism) {\n  Prism.languages.supercollider = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n      greedy: true\n    },\n    symbol: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    label: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n      alias: 'property'\n    },\n    number: /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    operator: /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n    punctuation: /[{}()[\\].:,;]|#[[{]/\n  };\n  Prism.languages.sclang = Prism.languages.supercollider;\n}","map":{"version":3,"names":["supercollider","displayName","aliases","Prism","languages","comment","pattern","greedy","string","lookbehind","char","symbol","keyword","boolean","label","alias","number","operator","punctuation","sclang"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/supercollider.js"],"sourcesContent":["// @ts-nocheck\nsupercollider.displayName = 'supercollider'\nsupercollider.aliases = ['sclang']\n\n/** @type {import('../core.js').Syntax} */\nexport default function supercollider(Prism) {\n  Prism.languages.supercollider = {\n    comment: {\n      pattern:\n        /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n      greedy: true\n    },\n    symbol: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    label: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n      alias: 'property'\n    },\n    number:\n      /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    operator:\n      /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n    punctuation: /[{}()[\\].:,;]|#[[{]/\n  }\n  Prism.languages.sclang = Prism.languages.supercollider\n}\n"],"mappings":"AAAA;AACAA,aAAa,CAACC,WAAd,GAA4B,eAA5B;AACAD,aAAa,CAACE,OAAd,GAAwB,CAAC,QAAD,CAAxB;AAEA;;AACA,eAAe,SAASF,aAAT,CAAuBG,KAAvB,EAA8B;EAC3CA,KAAK,CAACC,SAAN,CAAgBJ,aAAhB,GAAgC;IAC9BK,OAAO,EAAE;MACPC,OAAO,EACL,wEAFK;MAGPC,MAAM,EAAE;IAHD,CADqB;IAM9BC,MAAM,EAAE;MACNF,OAAO,EAAE,iCADH;MAENG,UAAU,EAAE,IAFN;MAGNF,MAAM,EAAE;IAHF,CANsB;IAW9BG,IAAI,EAAE;MACJJ,OAAO,EAAE,qBADL;MAEJC,MAAM,EAAE;IAFJ,CAXwB;IAe9BI,MAAM,EAAE;MACNL,OAAO,EAAE,uCADH;MAENG,UAAU,EAAE,IAFN;MAGNF,MAAM,EAAE;IAHF,CAfsB;IAoB9BK,OAAO,EAAE,4CApBqB;IAqB9BC,OAAO,EAAE,oBArBqB;IAsB9BC,KAAK,EAAE;MACLR,OAAO,EAAE,qBADJ;MAELS,KAAK,EAAE;IAFF,CAtBuB;IA0B9BC,MAAM,EACJ,yHA3B4B;IA4B9B,cAAc,cA5BgB;IA6B9BC,QAAQ,EACN,+HA9B4B;IA+B9BC,WAAW,EAAE;EA/BiB,CAAhC;EAiCAf,KAAK,CAACC,SAAN,CAAgBe,MAAhB,GAAyBhB,KAAK,CAACC,SAAN,CAAgBJ,aAAzC;AACD"},"metadata":{},"sourceType":"module"}