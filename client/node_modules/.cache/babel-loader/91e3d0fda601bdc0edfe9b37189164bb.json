{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge');\n\nvar parseUrl = require('parseurl');\n\nvar qs = require('qs');\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options);\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next) {\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};","map":{"version":3,"names":["merge","require","parseUrl","qs","module","exports","query","options","opts","queryparse","parse","undefined","allowPrototypes","req","res","next","val"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/server/node_modules/express/lib/middleware/query.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACvC,IAAIC,IAAI,GAAGR,KAAK,CAAC,EAAD,EAAKO,OAAL,CAAhB;EACA,IAAIE,UAAU,GAAGN,EAAE,CAACO,KAApB;;EAEA,IAAI,OAAOH,OAAP,KAAmB,UAAvB,EAAmC;IACjCE,UAAU,GAAGF,OAAb;IACAC,IAAI,GAAGG,SAAP;EACD;;EAED,IAAIH,IAAI,KAAKG,SAAT,IAAsBH,IAAI,CAACI,eAAL,KAAyBD,SAAnD,EAA8D;IAC5D;IACAH,IAAI,CAACI,eAAL,GAAuB,IAAvB;EACD;;EAED,OAAO,SAASN,KAAT,CAAeO,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8B;IACnC,IAAI,CAACF,GAAG,CAACP,KAAT,EAAgB;MACd,IAAIU,GAAG,GAAGd,QAAQ,CAACW,GAAD,CAAR,CAAcP,KAAxB;MACAO,GAAG,CAACP,KAAJ,GAAYG,UAAU,CAACO,GAAD,EAAMR,IAAN,CAAtB;IACD;;IAEDO,IAAI;EACL,CAPD;AAQD,CAtBD"},"metadata":{},"sourceType":"script"}