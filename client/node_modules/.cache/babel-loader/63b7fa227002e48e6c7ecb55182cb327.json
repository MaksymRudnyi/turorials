{"ast":null,"code":"/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\nimport { checkBullet } from '../util/check-bullet.js';\nimport { checkListItemIndent } from '../util/check-list-item-indent.js';\nimport { containerFlow } from '../util/container-flow.js';\nimport { indentLines } from '../util/indent-lines.js';\nimport { track } from '../util/track.js';\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\n\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context);\n  let bullet = context.bulletCurrent || checkBullet(context); // Add the marker value for ordered lists.\n\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet = (typeof parent.start === 'number' && parent.start > -1 ? parent.start : 1) + (context.options.incrementListMarker === false ? 0 : parent.children.indexOf(node)) + bullet;\n  }\n\n  let size = bullet.length + 1;\n\n  if (listItemIndent === 'tab' || listItemIndent === 'mixed' && (parent && parent.type === 'list' && parent.spread || node.spread)) {\n    size = Math.ceil(size / 4) * 4;\n  }\n\n  const tracker = track(safeOptions);\n  tracker.move(bullet + ' '.repeat(size - bullet.length));\n  tracker.shift(size);\n  const exit = context.enter('listItem');\n  const value = indentLines(containerFlow(node, context, tracker.current()), map);\n  exit();\n  return value;\n  /** @type {Map} */\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line;\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line;\n  }\n}","map":{"version":3,"names":["checkBullet","checkListItemIndent","containerFlow","indentLines","track","listItem","node","parent","context","safeOptions","listItemIndent","bullet","bulletCurrent","type","ordered","start","options","incrementListMarker","children","indexOf","size","length","spread","Math","ceil","tracker","move","repeat","shift","exit","enter","value","current","map","line","index","blank"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/mdast-util-to-markdown/lib/handle/list-item.js"],"sourcesContent":["/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,WAAR,QAA0B,yBAA1B;AACA,SAAQC,mBAAR,QAAkC,mCAAlC;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyCC,WAAzC,EAAsD;EAC3D,MAAMC,cAAc,GAAGT,mBAAmB,CAACO,OAAD,CAA1C;EACA,IAAIG,MAAM,GAAGH,OAAO,CAACI,aAAR,IAAyBZ,WAAW,CAACQ,OAAD,CAAjD,CAF2D,CAI3D;;EACA,IAAID,MAAM,IAAIA,MAAM,CAACM,IAAP,KAAgB,MAA1B,IAAoCN,MAAM,CAACO,OAA/C,EAAwD;IACtDH,MAAM,GACJ,CAAC,OAAOJ,MAAM,CAACQ,KAAd,KAAwB,QAAxB,IAAoCR,MAAM,CAACQ,KAAP,GAAe,CAAC,CAApD,GACGR,MAAM,CAACQ,KADV,GAEG,CAFJ,KAGCP,OAAO,CAACQ,OAAR,CAAgBC,mBAAhB,KAAwC,KAAxC,GACG,CADH,GAEGV,MAAM,CAACW,QAAP,CAAgBC,OAAhB,CAAwBb,IAAxB,CALJ,IAMAK,MAPF;EAQD;;EAED,IAAIS,IAAI,GAAGT,MAAM,CAACU,MAAP,GAAgB,CAA3B;;EAEA,IACEX,cAAc,KAAK,KAAnB,IACCA,cAAc,KAAK,OAAnB,KACGH,MAAM,IAAIA,MAAM,CAACM,IAAP,KAAgB,MAA1B,IAAoCN,MAAM,CAACe,MAA5C,IAAuDhB,IAAI,CAACgB,MAD9D,CAFH,EAIE;IACAF,IAAI,GAAGG,IAAI,CAACC,IAAL,CAAUJ,IAAI,GAAG,CAAjB,IAAsB,CAA7B;EACD;;EAED,MAAMK,OAAO,GAAGrB,KAAK,CAACK,WAAD,CAArB;EACAgB,OAAO,CAACC,IAAR,CAAaf,MAAM,GAAG,IAAIgB,MAAJ,CAAWP,IAAI,GAAGT,MAAM,CAACU,MAAzB,CAAtB;EACAI,OAAO,CAACG,KAAR,CAAcR,IAAd;EACA,MAAMS,IAAI,GAAGrB,OAAO,CAACsB,KAAR,CAAc,UAAd,CAAb;EACA,MAAMC,KAAK,GAAG5B,WAAW,CACvBD,aAAa,CAACI,IAAD,EAAOE,OAAP,EAAgBiB,OAAO,CAACO,OAAR,EAAhB,CADU,EAEvBC,GAFuB,CAAzB;EAIAJ,IAAI;EAEJ,OAAOE,KAAP;EAEA;;EACA,SAASE,GAAT,CAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiC;IAC/B,IAAID,KAAJ,EAAW;MACT,OAAO,CAACC,KAAK,GAAG,EAAH,GAAQ,IAAIT,MAAJ,CAAWP,IAAX,CAAd,IAAkCc,IAAzC;IACD;;IAED,OAAO,CAACE,KAAK,GAAGzB,MAAH,GAAYA,MAAM,GAAG,IAAIgB,MAAJ,CAAWP,IAAI,GAAGT,MAAM,CAACU,MAAzB,CAA3B,IAA+Da,IAAtE;EACD;AACF"},"metadata":{},"sourceType":"module"}