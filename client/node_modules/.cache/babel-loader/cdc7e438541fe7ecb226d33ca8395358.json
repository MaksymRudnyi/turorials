{"ast":null,"code":"function parseWords(str) {\n  var obj = {},\n      words = str.split(\" \");\n\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n  return obj;\n}\n\nvar specials = parseWords(\"$! $$ $& $? $+ $abook $abs $active $activecid \" + \"$activewid $address $addtok $agent $agentname $agentstat $agentver \" + \"$alias $and $anick $ansi2mirc $aop $appactive $appstate $asc $asctime \" + \"$asin $atan $avoice $away $awaymsg $awaytime $banmask $base $bfind \" + \"$binoff $biton $bnick $bvar $bytes $calc $cb $cd $ceil $chan $chanmodes \" + \"$chantypes $chat $chr $cid $clevel $click $cmdbox $cmdline $cnick $color \" + \"$com $comcall $comchan $comerr $compact $compress $comval $cos $count \" + \"$cr $crc $creq $crlf $ctime $ctimer $ctrlenter $date $day $daylight \" + \"$dbuh $dbuw $dccignore $dccport $dde $ddename $debug $decode $decompress \" + \"$deltok $devent $dialog $did $didreg $didtok $didwm $disk $dlevel $dll \" + \"$dllcall $dname $dns $duration $ebeeps $editbox $emailaddr $encode $error \" + \"$eval $event $exist $feof $ferr $fgetc $file $filename $filtered $finddir \" + \"$finddirn $findfile $findfilen $findtok $fline $floor $fopen $fread $fserve \" + \"$fulladdress $fulldate $fullname $fullscreen $get $getdir $getdot $gettok $gmt \" + \"$group $halted $hash $height $hfind $hget $highlight $hnick $hotline \" + \"$hotlinepos $ial $ialchan $ibl $idle $iel $ifmatch $ignore $iif $iil \" + \"$inelipse $ini $inmidi $inpaste $inpoly $input $inrect $inroundrect \" + \"$insong $instok $int $inwave $ip $isalias $isbit $isdde $isdir $isfile \" + \"$isid $islower $istok $isupper $keychar $keyrpt $keyval $knick $lactive \" + \"$lactivecid $lactivewid $left $len $level $lf $line $lines $link $lock \" + \"$lock $locked $log $logstamp $logstampfmt $longfn $longip $lower $ltimer \" + \"$maddress $mask $matchkey $matchtok $md5 $me $menu $menubar $menucontext \" + \"$menutype $mid $middir $mircdir $mircexe $mircini $mklogfn $mnick $mode \" + \"$modefirst $modelast $modespl $mouse $msfile $network $newnick $nick $nofile \" + \"$nopath $noqt $not $notags $notify $null $numeric $numok $oline $onpoly \" + \"$opnick $or $ord $os $passivedcc $pic $play $pnick $port $portable $portfree \" + \"$pos $prefix $prop $protect $puttok $qt $query $rand $r $rawmsg $read $readomo \" + \"$readn $regex $regml $regsub $regsubex $remove $remtok $replace $replacex \" + \"$reptok $result $rgb $right $round $scid $scon $script $scriptdir $scriptline \" + \"$sdir $send $server $serverip $sfile $sha1 $shortfn $show $signal $sin \" + \"$site $sline $snick $snicks $snotify $sock $sockbr $sockerr $sockname \" + \"$sorttok $sound $sqrt $ssl $sreq $sslready $status $strip $str $stripped \" + \"$syle $submenu $switchbar $tan $target $ticks $time $timer $timestamp \" + \"$timestampfmt $timezone $tip $titlebar $toolbar $treebar $trust $ulevel \" + \"$ulist $upper $uptime $url $usermode $v1 $v2 $var $vcmd $vcmdstat $vcmdver \" + \"$version $vnick $vol $wid $width $wildsite $wildtok $window $wrap $xor\");\nvar keywords = parseWords(\"abook ajinvite alias aline ame amsg anick aop auser autojoin avoice \" + \"away background ban bcopy beep bread break breplace bset btrunc bunset bwrite \" + \"channel clear clearall cline clipboard close cnick color comclose comopen \" + \"comreg continue copy creq ctcpreply ctcps dcc dccserver dde ddeserver \" + \"debug dec describe dialog did didtok disable disconnect dlevel dline dll \" + \"dns dqwindow drawcopy drawdot drawfill drawline drawpic drawrect drawreplace \" + \"drawrot drawsave drawscroll drawtext ebeeps echo editbox emailaddr enable \" + \"events exit fclose filter findtext finger firewall flash flist flood flush \" + \"flushini font fopen fseek fsend fserve fullname fwrite ghide gload gmove \" + \"gopts goto gplay gpoint gqreq groups gshow gsize gstop gtalk gunload hadd \" + \"halt haltdef hdec hdel help hfree hinc hload hmake hop hsave ial ialclear \" + \"ialmark identd if ignore iline inc invite iuser join kick linesep links list \" + \"load loadbuf localinfo log mdi me menubar mkdir mnick mode msg nick noop notice \" + \"notify omsg onotice part partall pdcc perform play playctrl pop protect pvoice \" + \"qme qmsg query queryn quit raw reload remini remote remove rename renwin \" + \"reseterror resetidle return rlevel rline rmdir run ruser save savebuf saveini \" + \"say scid scon server set showmirc signam sline sockaccept sockclose socklist \" + \"socklisten sockmark sockopen sockpause sockread sockrename sockudp sockwrite \" + \"sound speak splay sreq strip switchbar timer timestamp titlebar tnick tokenize \" + \"toolbar topic tray treebar ulist unload unset unsetall updatenl url uwho \" + \"var vcadd vcmd vcrem vol while whois window winhelp write writeint if isalnum \" + \"isalpha isaop isavoice isban ischan ishop isignore isin isincs isletter islower \" + \"isnotify isnum ison isop isprotect isreg isupper isvoice iswm iswmcs \" + \"elseif else goto menu nicklist status title icon size option text edit \" + \"button check radio box scroll list combo link tab item\");\nvar functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\nvar isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  var beforeParams = state.beforeParams;\n  state.beforeParams = false;\n  var ch = stream.next();\n\n  if (/[\\[\\]{}\\(\\),\\.]/.test(ch)) {\n    if (ch == \"(\" && beforeParams) state.inParams = true;else if (ch == \")\") state.inParams = false;\n    return null;\n  } else if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  } else if (ch == \"\\\\\") {\n    stream.eat(\"\\\\\");\n    stream.eat(/./);\n    return \"number\";\n  } else if (ch == \"/\" && stream.eat(\"*\")) {\n    return chain(stream, state, tokenComment);\n  } else if (ch == \";\" && stream.match(/ *\\( *\\(/)) {\n    return chain(stream, state, tokenUnparsed);\n  } else if (ch == \";\" && !state.inParams) {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == '\"') {\n    stream.eat(/\"/);\n    return \"keyword\";\n  } else if (ch == \"$\") {\n    stream.eatWhile(/[$_a-z0-9A-Z\\.:]/);\n\n    if (specials && specials.propertyIsEnumerable(stream.current().toLowerCase())) {\n      return \"keyword\";\n    } else {\n      state.beforeParams = true;\n      return \"builtin\";\n    }\n  } else if (ch == \"%\") {\n    stream.eatWhile(/[^,\\s()]/);\n    state.beforeParams = true;\n    return \"string\";\n  } else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  } else {\n    stream.eatWhile(/[\\w\\$_{}]/);\n    var word = stream.current().toLowerCase();\n    if (keywords && keywords.propertyIsEnumerable(word)) return \"keyword\";\n\n    if (functions && functions.propertyIsEnumerable(word)) {\n      state.beforeParams = true;\n      return \"keyword\";\n    }\n\n    return null;\n  }\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"*\";\n  }\n\n  return \"comment\";\n}\n\nfunction tokenUnparsed(stream, state) {\n  var maybeEnd = 0,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \";\" && maybeEnd == 2) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    if (ch == \")\") maybeEnd++;else if (ch != \" \") maybeEnd = 0;\n  }\n\n  return \"meta\";\n}\n\nexport const mirc = {\n  startState: function () {\n    return {\n      tokenize: tokenBase,\n      beforeParams: false,\n      inParams: false\n    };\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  }\n};","map":{"version":3,"names":["parseWords","str","obj","words","split","i","length","specials","keywords","functions","isOperatorChar","chain","stream","state","f","tokenize","tokenBase","beforeParams","ch","next","test","inParams","eatWhile","eat","tokenComment","match","tokenUnparsed","skipToEnd","propertyIsEnumerable","current","toLowerCase","word","maybeEnd","mirc","startState","token","eatSpace"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/mirc.js"],"sourcesContent":["function parseWords(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar specials = parseWords(\"$! $$ $& $? $+ $abook $abs $active $activecid \" +\n                          \"$activewid $address $addtok $agent $agentname $agentstat $agentver \" +\n                          \"$alias $and $anick $ansi2mirc $aop $appactive $appstate $asc $asctime \" +\n                          \"$asin $atan $avoice $away $awaymsg $awaytime $banmask $base $bfind \" +\n                          \"$binoff $biton $bnick $bvar $bytes $calc $cb $cd $ceil $chan $chanmodes \" +\n                          \"$chantypes $chat $chr $cid $clevel $click $cmdbox $cmdline $cnick $color \" +\n                          \"$com $comcall $comchan $comerr $compact $compress $comval $cos $count \" +\n                          \"$cr $crc $creq $crlf $ctime $ctimer $ctrlenter $date $day $daylight \" +\n                          \"$dbuh $dbuw $dccignore $dccport $dde $ddename $debug $decode $decompress \" +\n                          \"$deltok $devent $dialog $did $didreg $didtok $didwm $disk $dlevel $dll \" +\n                          \"$dllcall $dname $dns $duration $ebeeps $editbox $emailaddr $encode $error \" +\n                          \"$eval $event $exist $feof $ferr $fgetc $file $filename $filtered $finddir \" +\n                          \"$finddirn $findfile $findfilen $findtok $fline $floor $fopen $fread $fserve \" +\n                          \"$fulladdress $fulldate $fullname $fullscreen $get $getdir $getdot $gettok $gmt \" +\n                          \"$group $halted $hash $height $hfind $hget $highlight $hnick $hotline \" +\n                          \"$hotlinepos $ial $ialchan $ibl $idle $iel $ifmatch $ignore $iif $iil \" +\n                          \"$inelipse $ini $inmidi $inpaste $inpoly $input $inrect $inroundrect \" +\n                          \"$insong $instok $int $inwave $ip $isalias $isbit $isdde $isdir $isfile \" +\n                          \"$isid $islower $istok $isupper $keychar $keyrpt $keyval $knick $lactive \" +\n                          \"$lactivecid $lactivewid $left $len $level $lf $line $lines $link $lock \" +\n                          \"$lock $locked $log $logstamp $logstampfmt $longfn $longip $lower $ltimer \" +\n                          \"$maddress $mask $matchkey $matchtok $md5 $me $menu $menubar $menucontext \" +\n                          \"$menutype $mid $middir $mircdir $mircexe $mircini $mklogfn $mnick $mode \" +\n                          \"$modefirst $modelast $modespl $mouse $msfile $network $newnick $nick $nofile \" +\n                          \"$nopath $noqt $not $notags $notify $null $numeric $numok $oline $onpoly \" +\n                          \"$opnick $or $ord $os $passivedcc $pic $play $pnick $port $portable $portfree \" +\n                          \"$pos $prefix $prop $protect $puttok $qt $query $rand $r $rawmsg $read $readomo \" +\n                          \"$readn $regex $regml $regsub $regsubex $remove $remtok $replace $replacex \" +\n                          \"$reptok $result $rgb $right $round $scid $scon $script $scriptdir $scriptline \" +\n                          \"$sdir $send $server $serverip $sfile $sha1 $shortfn $show $signal $sin \" +\n                          \"$site $sline $snick $snicks $snotify $sock $sockbr $sockerr $sockname \" +\n                          \"$sorttok $sound $sqrt $ssl $sreq $sslready $status $strip $str $stripped \" +\n                          \"$syle $submenu $switchbar $tan $target $ticks $time $timer $timestamp \" +\n                          \"$timestampfmt $timezone $tip $titlebar $toolbar $treebar $trust $ulevel \" +\n                          \"$ulist $upper $uptime $url $usermode $v1 $v2 $var $vcmd $vcmdstat $vcmdver \" +\n                          \"$version $vnick $vol $wid $width $wildsite $wildtok $window $wrap $xor\");\nvar keywords = parseWords(\"abook ajinvite alias aline ame amsg anick aop auser autojoin avoice \" +\n                          \"away background ban bcopy beep bread break breplace bset btrunc bunset bwrite \" +\n                          \"channel clear clearall cline clipboard close cnick color comclose comopen \" +\n                          \"comreg continue copy creq ctcpreply ctcps dcc dccserver dde ddeserver \" +\n                          \"debug dec describe dialog did didtok disable disconnect dlevel dline dll \" +\n                          \"dns dqwindow drawcopy drawdot drawfill drawline drawpic drawrect drawreplace \" +\n                          \"drawrot drawsave drawscroll drawtext ebeeps echo editbox emailaddr enable \" +\n                          \"events exit fclose filter findtext finger firewall flash flist flood flush \" +\n                          \"flushini font fopen fseek fsend fserve fullname fwrite ghide gload gmove \" +\n                          \"gopts goto gplay gpoint gqreq groups gshow gsize gstop gtalk gunload hadd \" +\n                          \"halt haltdef hdec hdel help hfree hinc hload hmake hop hsave ial ialclear \" +\n                          \"ialmark identd if ignore iline inc invite iuser join kick linesep links list \" +\n                          \"load loadbuf localinfo log mdi me menubar mkdir mnick mode msg nick noop notice \" +\n                          \"notify omsg onotice part partall pdcc perform play playctrl pop protect pvoice \" +\n                          \"qme qmsg query queryn quit raw reload remini remote remove rename renwin \" +\n                          \"reseterror resetidle return rlevel rline rmdir run ruser save savebuf saveini \" +\n                          \"say scid scon server set showmirc signam sline sockaccept sockclose socklist \" +\n                          \"socklisten sockmark sockopen sockpause sockread sockrename sockudp sockwrite \" +\n                          \"sound speak splay sreq strip switchbar timer timestamp titlebar tnick tokenize \" +\n                          \"toolbar topic tray treebar ulist unload unset unsetall updatenl url uwho \" +\n                          \"var vcadd vcmd vcrem vol while whois window winhelp write writeint if isalnum \" +\n                          \"isalpha isaop isavoice isban ischan ishop isignore isin isincs isletter islower \" +\n                          \"isnotify isnum ison isop isprotect isreg isupper isvoice iswm iswmcs \" +\n                          \"elseif else goto menu nicklist status title icon size option text edit \" +\n                          \"button check radio box scroll list combo link tab item\");\nvar functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\nvar isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\nfunction tokenBase(stream, state) {\n  var beforeParams = state.beforeParams;\n  state.beforeParams = false;\n  var ch = stream.next();\n  if (/[\\[\\]{}\\(\\),\\.]/.test(ch)) {\n    if (ch == \"(\" && beforeParams) state.inParams = true;\n    else if (ch == \")\") state.inParams = false;\n    return null;\n  }\n  else if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  else if (ch == \"\\\\\") {\n    stream.eat(\"\\\\\");\n    stream.eat(/./);\n    return \"number\";\n  }\n  else if (ch == \"/\" && stream.eat(\"*\")) {\n    return chain(stream, state, tokenComment);\n  }\n  else if (ch == \";\" && stream.match(/ *\\( *\\(/)) {\n    return chain(stream, state, tokenUnparsed);\n  }\n  else if (ch == \";\" && !state.inParams) {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  else if (ch == '\"') {\n    stream.eat(/\"/);\n    return \"keyword\";\n  }\n  else if (ch == \"$\") {\n    stream.eatWhile(/[$_a-z0-9A-Z\\.:]/);\n    if (specials && specials.propertyIsEnumerable(stream.current().toLowerCase())) {\n      return \"keyword\";\n    }\n    else {\n      state.beforeParams = true;\n      return \"builtin\";\n    }\n  }\n  else if (ch == \"%\") {\n    stream.eatWhile(/[^,\\s()]/);\n    state.beforeParams = true;\n    return \"string\";\n  }\n  else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  else {\n    stream.eatWhile(/[\\w\\$_{}]/);\n    var word = stream.current().toLowerCase();\n    if (keywords && keywords.propertyIsEnumerable(word))\n      return \"keyword\";\n    if (functions && functions.propertyIsEnumerable(word)) {\n      state.beforeParams = true;\n      return \"keyword\";\n    }\n    return null;\n  }\n}\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\nfunction tokenUnparsed(stream, state) {\n  var maybeEnd = 0, ch;\n  while (ch = stream.next()) {\n    if (ch == \";\" && maybeEnd == 2) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    if (ch == \")\")\n      maybeEnd++;\n    else if (ch != \" \")\n      maybeEnd = 0;\n  }\n  return \"meta\";\n}\nexport const mirc = {\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      beforeParams: false,\n      inParams: false\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}