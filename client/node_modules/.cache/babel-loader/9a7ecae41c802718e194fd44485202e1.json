{"ast":null,"code":"// @ts-nocheck\nimport refractorMarkup from './markup.js';\nxmlDoc.displayName = 'xml-doc';\nxmlDoc.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function xmlDoc(Prism) {\n  Prism.register(refractorMarkup);\n\n  (function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        });\n      }\n    }\n\n    var tag = Prism.languages.markup.tag;\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    };\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    };\n    insertDocComment('csharp', slashDocComment);\n    insertDocComment('fsharp', slashDocComment);\n    insertDocComment('vbnet', tickDocComment);\n  })(Prism);\n}","map":{"version":3,"names":["refractorMarkup","xmlDoc","displayName","aliases","Prism","register","insertDocComment","lang","docComment","languages","insertBefore","tag","markup","slashDocComment","pattern","greedy","alias","inside","tickDocComment"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/xml-doc.js"],"sourcesContent":["// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxmlDoc.displayName = 'xml-doc'\nxmlDoc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function xmlDoc(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,aAA5B;AACAC,MAAM,CAACC,WAAP,GAAqB,SAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACpCA,KAAK,CAACC,QAAN,CAAeL,eAAf;;EACC,CAAC,UAAUI,KAAV,EAAiB;IACjB;AACJ;AACA;AACA;AACA;AACA;IACI,SAASE,gBAAT,CAA0BC,IAA1B,EAAgCC,UAAhC,EAA4C;MAC1C,IAAIJ,KAAK,CAACK,SAAN,CAAgBF,IAAhB,CAAJ,EAA2B;QACzBH,KAAK,CAACK,SAAN,CAAgBC,YAAhB,CAA6BH,IAA7B,EAAmC,SAAnC,EAA8C;UAC5C,eAAeC;QAD6B,CAA9C;MAGD;IACF;;IAED,IAAIG,GAAG,GAAGP,KAAK,CAACK,SAAN,CAAgBG,MAAhB,CAAuBD,GAAjC;IACA,IAAIE,eAAe,GAAG;MACpBC,OAAO,EAAE,UADW;MAEpBC,MAAM,EAAE,IAFY;MAGpBC,KAAK,EAAE,SAHa;MAIpBC,MAAM,EAAE;QACNN,GAAG,EAAEA;MADC;IAJY,CAAtB;IAQA,IAAIO,cAAc,GAAG;MACnBJ,OAAO,EAAE,OADU;MAEnBC,MAAM,EAAE,IAFW;MAGnBC,KAAK,EAAE,SAHY;MAInBC,MAAM,EAAE;QACNN,GAAG,EAAEA;MADC;IAJW,CAArB;IAQAL,gBAAgB,CAAC,QAAD,EAAWO,eAAX,CAAhB;IACAP,gBAAgB,CAAC,QAAD,EAAWO,eAAX,CAAhB;IACAP,gBAAgB,CAAC,OAAD,EAAUY,cAAV,CAAhB;EACD,CAnCA,EAmCEd,KAnCF;AAoCF"},"metadata":{},"sourceType":"module"}