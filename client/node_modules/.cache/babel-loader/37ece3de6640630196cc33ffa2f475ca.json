{"ast":null,"code":"function inBlock(style, terminator, returnTokenizer) {\n  return function (stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = inText;\n        break;\n      }\n\n      stream.next();\n    }\n\n    if (returnTokenizer) state.tokenize = returnTokenizer;\n    return style;\n  };\n}\n\nfunction inLine(style) {\n  return function (stream, state) {\n    while (!stream.eol()) {\n      stream.next();\n    }\n\n    state.tokenize = inText;\n    return style;\n  };\n}\n\nfunction inText(stream, state) {\n  function chain(parser) {\n    state.tokenize = parser;\n    return parser(stream, state);\n  }\n\n  var sol = stream.sol();\n  var ch = stream.next(); //non start of line\n\n  switch (ch) {\n    //switch is generally much faster than if, so it is used here\n    case \"{\":\n      //plugin\n      stream.eat(\"/\");\n      stream.eatSpace();\n      stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n      state.tokenize = inPlugin;\n      return \"tag\";\n\n    case \"_\":\n      //bold\n      if (stream.eat(\"_\")) return chain(inBlock(\"strong\", \"__\", inText));\n      break;\n\n    case \"'\":\n      //italics\n      if (stream.eat(\"'\")) return chain(inBlock(\"em\", \"''\", inText));\n      break;\n\n    case \"(\":\n      // Wiki Link\n      if (stream.eat(\"(\")) return chain(inBlock(\"link\", \"))\", inText));\n      break;\n\n    case \"[\":\n      // Weblink\n      return chain(inBlock(\"url\", \"]\", inText));\n      break;\n\n    case \"|\":\n      //table\n      if (stream.eat(\"|\")) return chain(inBlock(\"comment\", \"||\"));\n      break;\n\n    case \"-\":\n      if (stream.eat(\"=\")) {\n        //titleBar\n        return chain(inBlock(\"header string\", \"=-\", inText));\n      } else if (stream.eat(\"-\")) {\n        //deleted\n        return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n      }\n\n      break;\n\n    case \"=\":\n      //underline\n      if (stream.match(\"==\")) return chain(inBlock(\"tw-underline\", \"===\", inText));\n      break;\n\n    case \":\":\n      if (stream.eat(\":\")) return chain(inBlock(\"comment\", \"::\"));\n      break;\n\n    case \"^\":\n      //box\n      return chain(inBlock(\"tw-box\", \"^\"));\n      break;\n\n    case \"~\":\n      //np\n      if (stream.match(\"np~\")) return chain(inBlock(\"meta\", \"~/np~\"));\n      break;\n  } //start of line types\n\n\n  if (sol) {\n    switch (ch) {\n      case \"!\":\n        //header at start of line\n        if (stream.match('!!!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!')) {\n          return chain(inLine(\"header string\"));\n        } else {\n          return chain(inLine(\"header string\"));\n        }\n\n        break;\n\n      case \"*\": //unordered list line item, or <li /> at start of line\n\n      case \"#\": //ordered list line item, or <li /> at start of line\n\n      case \"+\":\n        //ordered list line item, or <li /> at start of line\n        return chain(inLine(\"tw-listitem bracket\"));\n        break;\n    }\n  } //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n\n\n  return null;\n} // Return variables for tokenizers\n\n\nvar pluginName, type;\n\nfunction inPlugin(stream, state) {\n  var ch = stream.next();\n  var peek = stream.peek();\n\n  if (ch == \"}\") {\n    state.tokenize = inText; //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n\n    return \"tag\";\n  } else if (ch == \"(\" || ch == \")\") {\n    return \"bracket\";\n  } else if (ch == \"=\") {\n    type = \"equals\";\n\n    if (peek == \">\") {\n      stream.next();\n      peek = stream.peek();\n    } //here we detect values directly after equal character with no quotes\n\n\n    if (!/[\\'\\\"]/.test(peek)) {\n      state.tokenize = inAttributeNoQuote();\n    } //end detect values\n\n\n    return \"operator\";\n  } else if (/[\\'\\\"]/.test(ch)) {\n    state.tokenize = inAttribute(ch);\n    return state.tokenize(stream, state);\n  } else {\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n    return \"keyword\";\n  }\n}\n\nfunction inAttribute(quote) {\n  return function (stream, state) {\n    while (!stream.eol()) {\n      if (stream.next() == quote) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n\n    return \"string\";\n  };\n}\n\nfunction inAttributeNoQuote() {\n  return function (stream, state) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      var peek = stream.peek();\n\n      if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n\n    return \"string\";\n  };\n}\n\nvar curState, setStyle;\n\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) curState.cc.push(arguments[i]);\n}\n\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\n\nfunction pushContext(pluginName, startOfLine) {\n  var noIndent = curState.context && curState.context.noIndent;\n  curState.context = {\n    prev: curState.context,\n    pluginName: pluginName,\n    indent: curState.indented,\n    startOfLine: startOfLine,\n    noIndent: noIndent\n  };\n}\n\nfunction popContext() {\n  if (curState.context) curState.context = curState.context.prev;\n}\n\nfunction element(type) {\n  if (type == \"openPlugin\") {\n    curState.pluginName = pluginName;\n    return cont(attributes, endplugin(curState.startOfLine));\n  } else if (type == \"closePlugin\") {\n    var err = false;\n\n    if (curState.context) {\n      err = curState.context.pluginName != pluginName;\n      popContext();\n    } else {\n      err = true;\n    }\n\n    if (err) setStyle = \"error\";\n    return cont(endcloseplugin(err));\n  } else if (type == \"string\") {\n    if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n    if (curState.tokenize == inText) popContext();\n    return cont();\n  } else return cont();\n}\n\nfunction endplugin(startOfLine) {\n  return function (type) {\n    if (type == \"selfclosePlugin\" || type == \"endPlugin\") return cont();\n\n    if (type == \"endPlugin\") {\n      pushContext(curState.pluginName, startOfLine);\n      return cont();\n    }\n\n    return cont();\n  };\n}\n\nfunction endcloseplugin(err) {\n  return function (type) {\n    if (err) setStyle = \"error\";\n    if (type == \"endPlugin\") return cont();\n    return pass();\n  };\n}\n\nfunction attributes(type) {\n  if (type == \"keyword\") {\n    setStyle = \"attribute\";\n    return cont(attributes);\n  }\n\n  if (type == \"equals\") return cont(attvalue, attributes);\n  return pass();\n}\n\nfunction attvalue(type) {\n  if (type == \"keyword\") {\n    setStyle = \"string\";\n    return cont();\n  }\n\n  if (type == \"string\") return cont(attvaluemaybe);\n  return pass();\n}\n\nfunction attvaluemaybe(type) {\n  if (type == \"string\") return cont(attvaluemaybe);else return pass();\n}\n\nexport const tiki = {\n  startState: function () {\n    return {\n      tokenize: inText,\n      cc: [],\n      indented: 0,\n      startOfLine: true,\n      pluginName: null,\n      context: null\n    };\n  },\n  token: function (stream, state) {\n    if (stream.sol()) {\n      state.startOfLine = true;\n      state.indented = stream.indentation();\n    }\n\n    if (stream.eatSpace()) return null;\n    setStyle = type = pluginName = null;\n    var style = state.tokenize(stream, state);\n\n    if ((style || type) && style != \"comment\") {\n      curState = state;\n\n      while (true) {\n        var comb = state.cc.pop() || element;\n        if (comb(type || style)) break;\n      }\n    }\n\n    state.startOfLine = false;\n    return setStyle || style;\n  },\n  indent: function (state, textAfter, cx) {\n    var context = state.context;\n    if (context && context.noIndent) return 0;\n    if (context && /^{\\//.test(textAfter)) context = context.prev;\n\n    while (context && !context.startOfLine) context = context.prev;\n\n    if (context) return context.indent + cx.unit;else return 0;\n  }\n};","map":{"version":3,"names":["inBlock","style","terminator","returnTokenizer","stream","state","eol","match","tokenize","inText","next","inLine","chain","parser","sol","ch","eat","eatSpace","eatWhile","inPlugin","pluginName","type","peek","test","inAttributeNoQuote","inAttribute","quote","curState","setStyle","pass","i","arguments","length","cc","push","cont","apply","pushContext","startOfLine","noIndent","context","prev","indent","indented","popContext","element","attributes","endplugin","err","endcloseplugin","name","attvalue","attvaluemaybe","tiki","startState","token","indentation","comb","pop","textAfter","cx","unit"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/tiki.js"],"sourcesContent":["function inBlock(style, terminator, returnTokenizer) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = inText;\n        break;\n      }\n      stream.next();\n    }\n\n    if (returnTokenizer) state.tokenize = returnTokenizer;\n\n    return style;\n  };\n}\n\nfunction inLine(style) {\n  return function(stream, state) {\n    while(!stream.eol()) {\n      stream.next();\n    }\n    state.tokenize = inText;\n    return style;\n  };\n}\n\nfunction inText(stream, state) {\n  function chain(parser) {\n    state.tokenize = parser;\n    return parser(stream, state);\n  }\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  //non start of line\n  switch (ch) { //switch is generally much faster than if, so it is used here\n  case \"{\": //plugin\n    stream.eat(\"/\");\n    stream.eatSpace();\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n    state.tokenize = inPlugin;\n    return \"tag\";\n  case \"_\": //bold\n    if (stream.eat(\"_\"))\n      return chain(inBlock(\"strong\", \"__\", inText));\n    break;\n  case \"'\": //italics\n    if (stream.eat(\"'\"))\n      return chain(inBlock(\"em\", \"''\", inText));\n    break;\n  case \"(\":// Wiki Link\n    if (stream.eat(\"(\"))\n      return chain(inBlock(\"link\", \"))\", inText));\n    break;\n  case \"[\":// Weblink\n    return chain(inBlock(\"url\", \"]\", inText));\n    break;\n  case \"|\": //table\n    if (stream.eat(\"|\"))\n      return chain(inBlock(\"comment\", \"||\"));\n    break;\n  case \"-\":\n    if (stream.eat(\"=\")) {//titleBar\n      return chain(inBlock(\"header string\", \"=-\", inText));\n    } else if (stream.eat(\"-\")) {//deleted\n      return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n    }\n    break;\n  case \"=\": //underline\n    if (stream.match(\"==\"))\n      return chain(inBlock(\"tw-underline\", \"===\", inText));\n    break;\n  case \":\":\n    if (stream.eat(\":\"))\n      return chain(inBlock(\"comment\", \"::\"));\n    break;\n  case \"^\": //box\n    return chain(inBlock(\"tw-box\", \"^\"));\n    break;\n  case \"~\": //np\n    if (stream.match(\"np~\"))\n      return chain(inBlock(\"meta\", \"~/np~\"));\n    break;\n  }\n\n  //start of line types\n  if (sol) {\n    switch (ch) {\n    case \"!\": //header at start of line\n      if (stream.match('!!!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!')) {\n        return chain(inLine(\"header string\"));\n      } else {\n        return chain(inLine(\"header string\"));\n      }\n      break;\n    case \"*\": //unordered list line item, or <li /> at start of line\n    case \"#\": //ordered list line item, or <li /> at start of line\n    case \"+\": //ordered list line item, or <li /> at start of line\n      return chain(inLine(\"tw-listitem bracket\"));\n      break;\n    }\n  }\n\n  //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n  return null;\n}\n\n// Return variables for tokenizers\nvar pluginName, type;\nfunction inPlugin(stream, state) {\n  var ch = stream.next();\n  var peek = stream.peek();\n\n  if (ch == \"}\") {\n    state.tokenize = inText;\n    //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n    return \"tag\";\n  } else if (ch == \"(\" || ch == \")\") {\n    return \"bracket\";\n  } else if (ch == \"=\") {\n    type = \"equals\";\n\n    if (peek == \">\") {\n      stream.next();\n      peek = stream.peek();\n    }\n\n    //here we detect values directly after equal character with no quotes\n    if (!/[\\'\\\"]/.test(peek)) {\n      state.tokenize = inAttributeNoQuote();\n    }\n    //end detect values\n\n    return \"operator\";\n  } else if (/[\\'\\\"]/.test(ch)) {\n    state.tokenize = inAttribute(ch);\n    return state.tokenize(stream, state);\n  } else {\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n    return \"keyword\";\n  }\n}\n\nfunction inAttribute(quote) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.next() == quote) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n    return \"string\";\n  };\n}\n\nfunction inAttributeNoQuote() {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      var peek = stream.peek();\n      if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n    return \"string\";\n  };\n}\n\nvar curState, setStyle;\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) curState.cc.push(arguments[i]);\n}\n\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\n\nfunction pushContext(pluginName, startOfLine) {\n  var noIndent = curState.context && curState.context.noIndent;\n  curState.context = {\n    prev: curState.context,\n    pluginName: pluginName,\n    indent: curState.indented,\n    startOfLine: startOfLine,\n    noIndent: noIndent\n  };\n}\n\nfunction popContext() {\n  if (curState.context) curState.context = curState.context.prev;\n}\n\nfunction element(type) {\n  if (type == \"openPlugin\") {curState.pluginName = pluginName; return cont(attributes, endplugin(curState.startOfLine));}\n  else if (type == \"closePlugin\") {\n    var err = false;\n    if (curState.context) {\n      err = curState.context.pluginName != pluginName;\n      popContext();\n    } else {\n      err = true;\n    }\n    if (err) setStyle = \"error\";\n    return cont(endcloseplugin(err));\n  }\n  else if (type == \"string\") {\n    if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n    if (curState.tokenize == inText) popContext();\n    return cont();\n  }\n  else return cont();\n}\n\nfunction endplugin(startOfLine) {\n  return function(type) {\n    if (\n      type == \"selfclosePlugin\" ||\n        type == \"endPlugin\"\n    )\n      return cont();\n    if (type == \"endPlugin\") {pushContext(curState.pluginName, startOfLine); return cont();}\n    return cont();\n  };\n}\n\nfunction endcloseplugin(err) {\n  return function(type) {\n    if (err) setStyle = \"error\";\n    if (type == \"endPlugin\") return cont();\n    return pass();\n  };\n}\n\nfunction attributes(type) {\n  if (type == \"keyword\") {setStyle = \"attribute\"; return cont(attributes);}\n  if (type == \"equals\") return cont(attvalue, attributes);\n  return pass();\n}\nfunction attvalue(type) {\n  if (type == \"keyword\") {setStyle = \"string\"; return cont();}\n  if (type == \"string\") return cont(attvaluemaybe);\n  return pass();\n}\nfunction attvaluemaybe(type) {\n  if (type == \"string\") return cont(attvaluemaybe);\n  else return pass();\n}\nexport const tiki = {\n  startState: function() {\n    return {tokenize: inText, cc: [], indented: 0, startOfLine: true, pluginName: null, context: null};\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.startOfLine = true;\n      state.indented = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n\n    setStyle = type = pluginName = null;\n    var style = state.tokenize(stream, state);\n    if ((style || type) && style != \"comment\") {\n      curState = state;\n      while (true) {\n        var comb = state.cc.pop() || element;\n        if (comb(type || style)) break;\n      }\n    }\n    state.startOfLine = false;\n    return setStyle || style;\n  },\n  indent: function(state, textAfter, cx) {\n    var context = state.context;\n    if (context && context.noIndent) return 0;\n    if (context && /^{\\//.test(textAfter))\n      context = context.prev;\n    while (context && !context.startOfLine)\n      context = context.prev;\n    if (context) return context.indent + cx.unit;\n    else return 0;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}