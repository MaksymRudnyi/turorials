{"ast":null,"code":"// @ts-nocheck\nodin.displayName = 'odin';\nodin.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function odin(Prism) {\n  ;\n\n  (function (Prism) {\n    var escapes = /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/;\n    Prism.languages.odin = {\n      /**\n       * The current implementation supports only 1 level of nesting.\n       *\n       * @author Michael Schmidt\n       * @author edukisto\n       */\n      comment: [{\n        pattern: /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\n        greedy: true\n      }, {\n        pattern: /#![^\\n\\r]*/,\n        greedy: true\n      }, {\n        pattern: /\\/\\/[^\\n\\r]*/,\n        greedy: true\n      }],\n\n      /**\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\n       */\n      char: {\n        pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      },\n      string: [{\n        pattern: /`[^`]*`/,\n        greedy: true\n      }, {\n        pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      }],\n      directive: {\n        pattern: /#\\w+/,\n        alias: 'property'\n      },\n      number: /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\n      discard: {\n        pattern: /\\b_\\b/,\n        alias: 'keyword'\n      },\n      'procedure-definition': {\n        pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\n        alias: 'function'\n      },\n      keyword: /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n\n      /**\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\n       */\n      'procedure-name': {\n        pattern: /\\b\\w+(?=[ \\t]*\\()/,\n        alias: 'function'\n      },\n      boolean: /\\b(?:false|nil|true)\\b/,\n      'constant-parameter-sign': {\n        pattern: /\\$/,\n        alias: 'important'\n      },\n      undefined: {\n        pattern: /---/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /->/,\n        alias: 'punctuation'\n      },\n      operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\n      punctuation: /[(),.:;@\\[\\]{}]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["odin","displayName","aliases","Prism","escapes","languages","comment","pattern","greedy","char","inside","symbol","string","directive","alias","number","discard","keyword","boolean","undefined","arrow","operator","punctuation"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/odin.js"],"sourcesContent":["// @ts-nocheck\nodin.displayName = 'odin'\nodin.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function odin(Prism) {\n  ;(function (Prism) {\n    var escapes =\n      /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/\n    Prism.languages.odin = {\n      /**\n       * The current implementation supports only 1 level of nesting.\n       *\n       * @author Michael Schmidt\n       * @author edukisto\n       */\n      comment: [\n        {\n          pattern:\n            /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\n          greedy: true\n        },\n        {\n          pattern: /#![^\\n\\r]*/,\n          greedy: true\n        },\n        {\n          pattern: /\\/\\/[^\\n\\r]*/,\n          greedy: true\n        }\n      ],\n\n      /**\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\n       */\n      char: {\n        pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      },\n      string: [\n        {\n          pattern: /`[^`]*`/,\n          greedy: true\n        },\n        {\n          pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\n          greedy: true,\n          inside: {\n            symbol: escapes\n          }\n        }\n      ],\n      directive: {\n        pattern: /#\\w+/,\n        alias: 'property'\n      },\n      number:\n        /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\n      discard: {\n        pattern: /\\b_\\b/,\n        alias: 'keyword'\n      },\n      'procedure-definition': {\n        pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\n        alias: 'function'\n      },\n      keyword:\n        /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n\n      /**\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\n       */\n      'procedure-name': {\n        pattern: /\\b\\w+(?=[ \\t]*\\()/,\n        alias: 'function'\n      },\n      boolean: /\\b(?:false|nil|true)\\b/,\n      'constant-parameter-sign': {\n        pattern: /\\$/,\n        alias: 'important'\n      },\n      undefined: {\n        pattern: /---/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /->/,\n        alias: 'punctuation'\n      },\n      operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\n      punctuation: /[(),.:;@\\[\\]{}]/\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;AAEA;;AACA,eAAe,SAASF,IAAT,CAAcG,KAAd,EAAqB;EAClC;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjB,IAAIC,OAAO,GACT,6EADF;IAEAD,KAAK,CAACE,SAAN,CAAgBL,IAAhB,GAAuB;MACrB;AACN;AACA;AACA;AACA;AACA;MACMM,OAAO,EAAE,CACP;QACEC,OAAO,EACL,6EAFJ;QAGEC,MAAM,EAAE;MAHV,CADO,EAMP;QACED,OAAO,EAAE,YADX;QAEEC,MAAM,EAAE;MAFV,CANO,EAUP;QACED,OAAO,EAAE,cADX;QAEEC,MAAM,EAAE;MAFV,CAVO,CAPY;;MAuBrB;AACN;AACA;MACMC,IAAI,EAAE;QACJF,OAAO,EAAE,iDADL;QAEJC,MAAM,EAAE,IAFJ;QAGJE,MAAM,EAAE;UACNC,MAAM,EAAEP;QADF;MAHJ,CA1Be;MAiCrBQ,MAAM,EAAE,CACN;QACEL,OAAO,EAAE,SADX;QAEEC,MAAM,EAAE;MAFV,CADM,EAKN;QACED,OAAO,EAAE,uBADX;QAEEC,MAAM,EAAE,IAFV;QAGEE,MAAM,EAAE;UACNC,MAAM,EAAEP;QADF;MAHV,CALM,CAjCa;MA8CrBS,SAAS,EAAE;QACTN,OAAO,EAAE,MADA;QAETO,KAAK,EAAE;MAFE,CA9CU;MAkDrBC,MAAM,EACJ,oLAnDmB;MAoDrBC,OAAO,EAAE;QACPT,OAAO,EAAE,OADF;QAEPO,KAAK,EAAE;MAFA,CApDY;MAwDrB,wBAAwB;QACtBP,OAAO,EAAE,kCADa;QAEtBO,KAAK,EAAE;MAFe,CAxDH;MA4DrBG,OAAO,EACL,uPA7DmB;;MA+DrB;AACN;AACA;MACM,kBAAkB;QAChBV,OAAO,EAAE,mBADO;QAEhBO,KAAK,EAAE;MAFS,CAlEG;MAsErBI,OAAO,EAAE,wBAtEY;MAuErB,2BAA2B;QACzBX,OAAO,EAAE,IADgB;QAEzBO,KAAK,EAAE;MAFkB,CAvEN;MA2ErBK,SAAS,EAAE;QACTZ,OAAO,EAAE,KADA;QAETO,KAAK,EAAE;MAFE,CA3EU;MA+ErBM,KAAK,EAAE;QACLb,OAAO,EAAE,IADJ;QAELO,KAAK,EAAE;MAFF,CA/Ec;MAmFrBO,QAAQ,EAAE,wDAnFW;MAoFrBC,WAAW,EAAE;IApFQ,CAAvB;EAsFD,CAzFA,EAyFEnB,KAzFF;AA0FF"},"metadata":{},"sourceType":"module"}