{"ast":null,"code":"// @ts-nocheck\nsmalltalk.displayName = 'smalltalk';\nsmalltalk.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  };\n}","map":{"version":3,"names":["smalltalk","displayName","aliases","Prism","languages","comment","pattern","greedy","char","string","symbol","lookbehind","inside","variable","punctuation","keyword","boolean","number","operator"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/smalltalk.js"],"sourcesContent":["// @ts-nocheck\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n"],"mappings":"AAAA;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;AAEA;;AACA,eAAe,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;EACvCA,KAAK,CAACC,SAAN,CAAgBJ,SAAhB,GAA4B;IAC1BK,OAAO,EAAE;MACPC,OAAO,EAAE,gBADF;MAEPC,MAAM,EAAE;IAFD,CADiB;IAK1BC,IAAI,EAAE;MACJF,OAAO,EAAE,KADL;MAEJC,MAAM,EAAE;IAFJ,CALoB;IAS1BE,MAAM,EAAE;MACNH,OAAO,EAAE,gBADH;MAENC,MAAM,EAAE;IAFF,CATkB;IAa1BG,MAAM,EAAE,mDAbkB;IAc1B,mBAAmB;MACjBJ,OAAO,EAAE,mBADQ;MAEjBK,UAAU,EAAE,IAFK;MAGjBC,MAAM,EAAE;QACNC,QAAQ,EAAE,YADJ;QAENC,WAAW,EAAE;MAFP;IAHS,CAdO;IAsB1B,uBAAuB;MACrBR,OAAO,EAAE,WADY;MAErBM,MAAM,EAAE;QACNC,QAAQ,EAAE,WADJ;QAENC,WAAW,EAAE;MAFP;IAFa,CAtBG;IA6B1BC,OAAO,EAAE,4BA7BiB;IA8B1BC,OAAO,EAAE,oBA9BiB;IA+B1BC,MAAM,EAAE,CACN,0CADM,EAEN,4BAFM,CA/BkB;IAmC1BC,QAAQ,EAAE,gDAnCgB;IAoC1BJ,WAAW,EAAE;EApCa,CAA5B;AAsCD"},"metadata":{},"sourceType":"module"}