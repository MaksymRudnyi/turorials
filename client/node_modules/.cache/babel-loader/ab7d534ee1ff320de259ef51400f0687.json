{"ast":null,"code":"// @ts-nocheck\nimport refractorJavascript from './javascript.js';\nqml.displayName = 'qml';\nqml.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function qml(Prism) {\n  Prism.register(refractorJavascript);\n\n  (function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n    var jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source.replace(/<string>/g, function () {\n      return jsString;\n    }).replace(/<comment>/g, function () {\n      return jsComment;\n    }); // the pattern will blow up, so only a few iterations\n\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr;\n      });\n    }\n\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]');\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function () {\n          return jsExpr;\n        }), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [{\n        pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n        lookbehind: true\n      }, {\n        pattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^property/,\n          property: /\\w+(?:\\.\\w+)*/\n        }\n      }],\n      'javascript-expression': {\n        pattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function () {\n          return jsExpr;\n        }), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["refractorJavascript","qml","displayName","aliases","Prism","register","jsString","source","jsComment","jsExpr","replace","i","languages","comment","pattern","greedy","RegExp","lookbehind","alias","inside","javascript","property","keyword","string","punctuation"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/qml.js"],"sourcesContent":["// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nqml.displayName = 'qml'\nqml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function qml(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,mBAAP,MAAgC,iBAAhC;AACAC,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;EACjCA,KAAK,CAACC,QAAN,CAAeL,mBAAf;;EACC,CAAC,UAAUI,KAAV,EAAiB;IACjB,IAAIE,QAAQ,GAAG,8CAA8CC,MAA7D;IACA,IAAIC,SAAS,GAAG,yCAAyCD,MAAzD;IACA,IAAIE,MAAM,GACR,iGAAiGF,MAAjG,CACGG,OADH,CACW,WADX,EACwB,YAAY;MAChC,OAAOJ,QAAP;IACD,CAHH,EAIGI,OAJH,CAIW,YAJX,EAIyB,YAAY;MACjC,OAAOF,SAAP;IACD,CANH,CADF,CAHiB,CAUV;;IAEP,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BF,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAe,SAAf,EAA0B,YAAY;QAC7C,OAAOD,MAAP;MACD,CAFQ,CAAT;IAGD;;IAEDA,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAe,SAAf,EAA0B,WAA1B,CAAT;IACAN,KAAK,CAACQ,SAAN,CAAgBX,GAAhB,GAAsB;MACpBY,OAAO,EAAE;QACPC,OAAO,EAAE,yBADF;QAEPC,MAAM,EAAE;MAFD,CADW;MAKpB,uBAAuB;QACrBD,OAAO,EAAEE,MAAM,CACb,2GAA2GT,MAA3G,CAAkHG,OAAlH,CACE,OADF,EAEE,YAAY;UACV,OAAOD,MAAP;QACD,CAJH,CADa,EAOb,GAPa,CADM;QAUrBQ,UAAU,EAAE,IAVS;QAWrBF,MAAM,EAAE,IAXa;QAYrBG,KAAK,EAAE,qBAZc;QAarBC,MAAM,EAAEf,KAAK,CAACQ,SAAN,CAAgBQ;MAbH,CALH;MAoBpB,cAAc;QACZN,OAAO,EAAE,qDADG;QAEZG,UAAU,EAAE;MAFA,CApBM;MAwBpBI,QAAQ,EAAE,CACR;QACEP,OAAO,EAAE,mDADX;QAEEG,UAAU,EAAE;MAFd,CADQ,EAKR;QACEH,OAAO,EACL,0FAFJ;QAGEG,UAAU,EAAE,IAHd;QAIEE,MAAM,EAAE;UACNG,OAAO,EAAE,WADH;UAEND,QAAQ,EAAE;QAFJ;MAJV,CALQ,CAxBU;MAuCpB,yBAAyB;QACvBP,OAAO,EAAEE,MAAM,CACb,0CAA0CT,MAA1C,CAAiDG,OAAjD,CACE,OADF,EAEE,YAAY;UACV,OAAOD,MAAP;QACD,CAJH,CADa,EAOb,GAPa,CADQ;QAUvBQ,UAAU,EAAE,IAVW;QAWvBF,MAAM,EAAE,IAXe;QAYvBG,KAAK,EAAE,qBAZgB;QAavBC,MAAM,EAAEf,KAAK,CAACQ,SAAN,CAAgBQ;MAbD,CAvCL;MAsDpBG,MAAM,EAAE;QACNT,OAAO,EAAE,uBADH;QAENC,MAAM,EAAE;MAFF,CAtDY;MA0DpBO,OAAO,EAAE,sBA1DW;MA2DpBE,WAAW,EAAE;IA3DO,CAAtB;EA6DD,CAhFA,EAgFEpB,KAhFF;AAiFF"},"metadata":{},"sourceType":"module"}