{"ast":null,"code":"import { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\nconst defaultOptions = {\n  properties: 'data'\n};\n\nconst rehypeAttrs = options => {\n  const opts = { ...defaultOptions,\n    ...options\n  };\n  return tree => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0];\n\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children, index);\n\n          if (child) {\n            const attr = getCommentObject(child);\n\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties,\n                ...{\n                  'data-type': 'rehyp'\n                }\n              };\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, opts.properties);\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index);\n\n        if (child) {\n          const attr = getCommentObject(child);\n\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, opts.properties);\n          }\n        }\n      }\n    });\n  };\n};\n\nexport default rehypeAttrs;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAEA,SAAS,KAAT,QAAsB,kBAAtB;AACA,SAAS,gBAAT,EAA2B,SAA3B,EAAsC,SAAtC,EAAiD,gBAAjD,QAAyE,YAAzE;AA4CA,MAAM,cAAc,GAAuB;EACzC,UAAU,EAAE;AAD6B,CAA3C;;AAIA,MAAM,WAAW,GAAyC,OAAD,IAAY;EACnE,MAAM,IAAI,GAAG,EAAE,GAAG,cAAL;IAAqB,GAAG;EAAxB,CAAb;EACA,OAAQ,IAAD,IAAS;IACd,KAAK,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,KAAwB;MAC7C,IAAI,IAAI,CAAC,OAAL,KAAiB,KAAjB,IAA0B,IAA1B,IAAkC,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,QAAnB,CAAlC,IAAkE,MAAlE,IAA4E,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,QAArB,CAA5E,IAA8G,MAAM,CAAC,QAAP,CAAgB,MAAhB,GAAyB,CAA3I,EAA8I;QAC5I,MAAM,UAAU,GAAG,IAAI,CAAC,QAAL,CAAc,CAAd,CAAnB;;QACA,IAAI,UAAU,IAAI,UAAU,CAAC,OAAX,KAAuB,MAArC,IAA+C,OAAO,KAAP,KAAiB,QAApE,EAA8E;UAC5E,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,QAAR,EAA+B,KAA/B,CAAvB;;UACA,IAAI,KAAJ,EAAW;YACT,MAAM,IAAI,GAAG,gBAAgB,CAAC,KAAD,CAA7B;;YACA,IAAI,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,MAAlB,GAA2B,CAA/B,EAAkC;cAChC,IAAI,CAAC,UAAL,GAAkB,EAAE,GAAG,IAAI,CAAC,UAAV;gBAAsB,GAAG;kBAAE,aAAa;gBAAf;cAAzB,CAAlB;cACA,UAAU,CAAC,UAAX,GAAwB,gBAAgB,CAAC,UAAU,CAAC,UAAZ,EAAwB,IAAxB,EAA8B,IAAI,CAAC,UAAnC,CAAxC;YACD;UACF;QACF;MACF;;MAED,IAAI,mFAAmF,IAAnF,CAAwF,IAAI,CAAC,OAA7F,KAAyG,MAAzG,IAAmH,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,QAArB,CAAnH,IAAqJ,OAAO,KAAP,KAAiB,QAA1K,EAAoL;QAClL,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,QAAR,EAAkB,KAAlB,CAAvB;;QACA,IAAI,KAAJ,EAAW;UACT,MAAM,IAAI,GAAG,gBAAgB,CAAC,KAAD,CAA7B;;UACA,IAAI,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,MAAlB,GAA2B,CAA/B,EAAkC;YAChC,IAAI,CAAC,UAAL,GAAkB,gBAAgB,CAAC,IAAI,CAAC,UAAN,EAAkB,IAAlB,EAAwB,IAAI,CAAC,UAA7B,CAAlC;UACD;QACF;MACF;IACF,CAxBI,CAAL;EAyBD,CA1BD;AA2BD,CA7BD;;AAgCA,eAAe,WAAf","sourceRoot":"","sourcesContent":["import { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\nconst defaultOptions = {\n    properties: 'data',\n};\nconst rehypeAttrs = (options) => {\n    const opts = { ...defaultOptions, ...options };\n    return (tree) => {\n        visit(tree, 'element', (node, index, parent) => {\n            if (node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n                const firstChild = node.children[0];\n                if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n                    const child = prevChild(parent.children, index);\n                    if (child) {\n                        const attr = getCommentObject(child);\n                        if (Object.keys(attr).length > 0) {\n                            node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } };\n                            firstChild.properties = propertiesHandle(firstChild.properties, attr, opts.properties);\n                        }\n                    }\n                }\n            }\n            if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n                const child = nextChild(parent.children, index);\n                if (child) {\n                    const attr = getCommentObject(child);\n                    if (Object.keys(attr).length > 0) {\n                        node.properties = propertiesHandle(node.properties, attr, opts.properties);\n                    }\n                }\n            }\n        });\n    };\n};\nexport default rehypeAttrs;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}