{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nfunction getCommands(data, resulte) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  if (resulte === void 0) {\n    resulte = {};\n  }\n\n  data.forEach(item => {\n    if (item.children && Array.isArray(item.children)) {\n      resulte = _extends({}, resulte, getCommands(item.children || []));\n    } else if (item.keyCommand && item.shortcuts && item.execute) {\n      resulte[item.shortcuts.toLocaleLowerCase()] = item;\n    }\n  });\n  return resulte;\n}\n\nexport default function shortcutsHandle(e, commands, commandOrchestrator, dispatch, state) {\n  if (commands === void 0) {\n    commands = [];\n  }\n\n  var data = getCommands(commands || []);\n  var shortcuts = [];\n\n  if (e.altKey) {\n    shortcuts.push('alt');\n  }\n\n  if (e.shiftKey) {\n    shortcuts.push('shift');\n  }\n\n  if (e.metaKey) {\n    shortcuts.push('cmd');\n  }\n\n  if (e.ctrlKey) {\n    shortcuts.push('ctrl');\n  }\n\n  if (shortcuts.length > 0 && !/(control|alt|meta|shift)/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push(e.key.toLocaleLowerCase());\n  }\n\n  if (/escape/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push('escape');\n  }\n\n  if (shortcuts.length < 1) {\n    return;\n  }\n\n  var equal = !!data[shortcuts.join('+')];\n  var command = equal ? data[shortcuts.join('+')] : undefined;\n  Object.keys(data).forEach(item => {\n    var isequal = item.split('+').every(v => {\n      if (/ctrlcmd/.test(v)) {\n        return shortcuts.includes('ctrl') || shortcuts.includes('cmd');\n      }\n\n      return shortcuts.includes(v);\n    });\n\n    if (isequal) {\n      command = data[item];\n    }\n  });\n\n  if (command && commandOrchestrator) {\n    e.stopPropagation();\n    e.preventDefault();\n    commandOrchestrator.executeCommand(command, dispatch, state);\n    return;\n  }\n}","map":{"version":3,"sources":["../../../src/components/TextArea/shortcuts.ts"],"names":["data","resulte","item","Array","getCommands","commands","shortcuts","e","equal","command","Object","isequal","v","commandOrchestrator"],"mappings":"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","sourcesContent":["import { ICommand, TextAreaCommandOrchestrator } from '../../commands';\nimport { ContextStore, ExecuteCommandState } from '../../Context';\n\nfunction getCommands(data: ICommand[] = [], resulte: Record<string, ICommand> = {}): Record<string, ICommand> {\n  data.forEach((item) => {\n    if (item.children && Array.isArray(item.children)) {\n      resulte = { ...resulte, ...getCommands(item.children || []) };\n    } else if (item.keyCommand && item.shortcuts && item.execute) {\n      resulte[item.shortcuts.toLocaleLowerCase()] = item;\n    }\n  });\n  return resulte;\n}\n\nexport default function shortcutsHandle(\n  e: KeyboardEvent | React.KeyboardEvent<HTMLTextAreaElement>,\n  commands: ICommand[] = [],\n  commandOrchestrator?: TextAreaCommandOrchestrator,\n  dispatch?: React.Dispatch<ContextStore>,\n  state?: ExecuteCommandState,\n) {\n  const data = getCommands(commands || []);\n  const shortcuts: (string | number)[] = [];\n  if (e.altKey) {\n    shortcuts.push('alt');\n  }\n  if (e.shiftKey) {\n    shortcuts.push('shift');\n  }\n  if (e.metaKey) {\n    shortcuts.push('cmd');\n  }\n  if (e.ctrlKey) {\n    shortcuts.push('ctrl');\n  }\n  if (shortcuts.length > 0 && !/(control|alt|meta|shift)/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push(e.key.toLocaleLowerCase());\n  }\n  if (/escape/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push('escape');\n  }\n  if (shortcuts.length < 1) {\n    return;\n  }\n\n  let equal = !!data[shortcuts.join('+')];\n  let command = equal ? data[shortcuts.join('+')] : undefined;\n\n  Object.keys(data).forEach((item) => {\n    const isequal = item.split('+').every((v) => {\n      if (/ctrlcmd/.test(v)) {\n        return shortcuts.includes('ctrl') || shortcuts.includes('cmd');\n      }\n      return shortcuts.includes(v);\n    });\n    if (isequal) {\n      command = data[item];\n    }\n  });\n  if (command && commandOrchestrator) {\n    e.stopPropagation();\n    e.preventDefault();\n    commandOrchestrator.executeCommand(command, dispatch, state);\n    return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}