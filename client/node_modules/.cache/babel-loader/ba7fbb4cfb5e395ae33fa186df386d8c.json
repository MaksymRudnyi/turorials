{"ast":null,"code":"var words = {};\n\nfunction define(style, dict) {\n  for (var i = 0; i < dict.length; i++) {\n    words[dict[i]] = style;\n  }\n}\n\n;\nvar commonAtoms = [\"true\", \"false\"];\nvar commonKeywords = [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\", \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"];\nvar commonCommands = [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\", \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\", \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"nl\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\", \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\", \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\", \"yes\", \"zsh\"];\ndefine('atom', commonAtoms);\ndefine('keyword', commonKeywords);\ndefine('builtin', commonCommands);\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) return null;\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    stream.next();\n    return null;\n  }\n\n  if (ch === '\\'' || ch === '\"' || ch === '`') {\n    state.tokens.unshift(tokenString(ch, ch === \"`\" ? \"quote\" : \"string\"));\n    return tokenize(stream, state);\n  }\n\n  if (ch === '#') {\n    if (sol && stream.eat('!')) {\n      stream.skipToEnd();\n      return 'meta'; // 'comment'?\n    }\n\n    stream.skipToEnd();\n    return 'comment';\n  }\n\n  if (ch === '$') {\n    state.tokens.unshift(tokenDollar);\n    return tokenize(stream, state);\n  }\n\n  if (ch === '+' || ch === '=') {\n    return 'operator';\n  }\n\n  if (ch === '-') {\n    stream.eat('-');\n    stream.eatWhile(/\\w/);\n    return 'attribute';\n  }\n\n  if (ch == \"<\") {\n    if (stream.match(\"<<\")) return \"operator\";\n    var heredoc = stream.match(/^<-?\\s*['\"]?([^'\"]*)['\"]?/);\n\n    if (heredoc) {\n      state.tokens.unshift(tokenHeredoc(heredoc[1]));\n      return 'string.special';\n    }\n  }\n\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/\\d/);\n\n    if (stream.eol() || !/\\w/.test(stream.peek())) {\n      return 'number';\n    }\n  }\n\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenString(quote, style) {\n  var close = quote == \"(\" ? \")\" : quote == \"{\" ? \"}\" : quote;\n  return function (stream, state) {\n    var next,\n        escaped = false;\n\n    while ((next = stream.next()) != null) {\n      if (next === close && !escaped) {\n        state.tokens.shift();\n        break;\n      } else if (next === '$' && !escaped && quote !== \"'\" && stream.peek() != close) {\n        escaped = true;\n        stream.backUp(1);\n        state.tokens.unshift(tokenDollar);\n        break;\n      } else if (!escaped && quote !== close && next === quote) {\n        state.tokens.unshift(tokenString(quote, style));\n        return tokenize(stream, state);\n      } else if (!escaped && /['\"]/.test(next) && !/['\"]/.test(quote)) {\n        state.tokens.unshift(tokenStringStart(next, \"string\"));\n        stream.backUp(1);\n        break;\n      }\n\n      escaped = !escaped && next === '\\\\';\n    }\n\n    return style;\n  };\n}\n\n;\n\nfunction tokenStringStart(quote, style) {\n  return function (stream, state) {\n    state.tokens[0] = tokenString(quote, style);\n    stream.next();\n    return tokenize(stream, state);\n  };\n}\n\nvar tokenDollar = function (stream, state) {\n  if (state.tokens.length > 1) stream.eat('$');\n  var ch = stream.next();\n\n  if (/['\"({]/.test(ch)) {\n    state.tokens[0] = tokenString(ch, ch == \"(\" ? \"quote\" : ch == \"{\" ? \"def\" : \"string\");\n    return tokenize(stream, state);\n  }\n\n  if (!/\\d/.test(ch)) stream.eatWhile(/\\w/);\n  state.tokens.shift();\n  return 'def';\n};\n\nfunction tokenHeredoc(delim) {\n  return function (stream, state) {\n    if (stream.sol() && stream.string == delim) state.tokens.shift();\n    stream.skipToEnd();\n    return \"string.special\";\n  };\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase)(stream, state);\n}\n\n;\nexport const shell = {\n  startState: function () {\n    return {\n      tokens: []\n    };\n  },\n  token: function (stream, state) {\n    return tokenize(stream, state);\n  },\n  languageData: {\n    autocomplete: commonAtoms.concat(commonKeywords, commonCommands),\n    closeBrackets: {\n      brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]\n    },\n    commentTokens: {\n      line: \"#\"\n    }\n  }\n};","map":{"version":3,"names":["words","define","style","dict","i","length","commonAtoms","commonKeywords","commonCommands","tokenBase","stream","state","eatSpace","sol","ch","next","tokens","unshift","tokenString","tokenize","eat","skipToEnd","tokenDollar","eatWhile","match","heredoc","tokenHeredoc","test","eol","peek","cur","current","hasOwnProperty","quote","close","escaped","shift","backUp","tokenStringStart","delim","string","shell","startState","token","languageData","autocomplete","concat","closeBrackets","brackets","commentTokens","line"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/shell.js"],"sourcesContent":["var words = {};\nfunction define(style, dict) {\n  for(var i = 0; i < dict.length; i++) {\n    words[dict[i]] = style;\n  }\n};\n\nvar commonAtoms = [\"true\", \"false\"];\nvar commonKeywords = [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\",\n                      \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"];\nvar commonCommands = [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\",\n                      \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\",\n                      \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"nl\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\",\n                      \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\",\n                      \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\",\n                      \"yes\", \"zsh\"];\n\ndefine('atom', commonAtoms);\ndefine('keyword', commonKeywords);\ndefine('builtin', commonCommands);\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) return null;\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    stream.next();\n    return null;\n  }\n  if (ch === '\\'' || ch === '\"' || ch === '`') {\n    state.tokens.unshift(tokenString(ch, ch === \"`\" ? \"quote\" : \"string\"));\n    return tokenize(stream, state);\n  }\n  if (ch === '#') {\n    if (sol && stream.eat('!')) {\n      stream.skipToEnd();\n      return 'meta'; // 'comment'?\n    }\n    stream.skipToEnd();\n    return 'comment';\n  }\n  if (ch === '$') {\n    state.tokens.unshift(tokenDollar);\n    return tokenize(stream, state);\n  }\n  if (ch === '+' || ch === '=') {\n    return 'operator';\n  }\n  if (ch === '-') {\n    stream.eat('-');\n    stream.eatWhile(/\\w/);\n    return 'attribute';\n  }\n  if (ch == \"<\") {\n    if (stream.match(\"<<\")) return \"operator\"\n    var heredoc = stream.match(/^<-?\\s*['\"]?([^'\"]*)['\"]?/)\n    if (heredoc) {\n      state.tokens.unshift(tokenHeredoc(heredoc[1]))\n      return 'string.special'\n    }\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/\\d/);\n    if(stream.eol() || !/\\w/.test(stream.peek())) {\n      return 'number';\n    }\n  }\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenString(quote, style) {\n  var close = quote == \"(\" ? \")\" : quote == \"{\" ? \"}\" : quote\n  return function(stream, state) {\n    var next, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === close && !escaped) {\n        state.tokens.shift();\n        break;\n      } else if (next === '$' && !escaped && quote !== \"'\" && stream.peek() != close) {\n        escaped = true;\n        stream.backUp(1);\n        state.tokens.unshift(tokenDollar);\n        break;\n      } else if (!escaped && quote !== close && next === quote) {\n        state.tokens.unshift(tokenString(quote, style))\n        return tokenize(stream, state)\n      } else if (!escaped && /['\"]/.test(next) && !/['\"]/.test(quote)) {\n        state.tokens.unshift(tokenStringStart(next, \"string\"));\n        stream.backUp(1);\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    return style;\n  };\n};\n\nfunction tokenStringStart(quote, style) {\n  return function(stream, state) {\n    state.tokens[0] = tokenString(quote, style)\n    stream.next()\n    return tokenize(stream, state)\n  }\n}\n\nvar tokenDollar = function(stream, state) {\n  if (state.tokens.length > 1) stream.eat('$');\n  var ch = stream.next()\n  if (/['\"({]/.test(ch)) {\n    state.tokens[0] = tokenString(ch, ch == \"(\" ? \"quote\" : ch == \"{\" ? \"def\" : \"string\");\n    return tokenize(stream, state);\n  }\n  if (!/\\d/.test(ch)) stream.eatWhile(/\\w/);\n  state.tokens.shift();\n  return 'def';\n};\n\nfunction tokenHeredoc(delim) {\n  return function(stream, state) {\n    if (stream.sol() && stream.string == delim) state.tokens.shift()\n    stream.skipToEnd()\n    return \"string.special\"\n  }\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase) (stream, state);\n};\n\nexport const shell = {\n  startState: function() {return {tokens:[]};},\n  token: function(stream, state) {\n    return tokenize(stream, state);\n  },\n  languageData: {\n    autocomplete: commonAtoms.concat(commonKeywords, commonCommands),\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]},\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}