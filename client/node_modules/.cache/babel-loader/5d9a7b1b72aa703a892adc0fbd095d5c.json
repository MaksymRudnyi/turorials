{"ast":null,"code":"var stat = require('fs').stat;\n\nvar spawn = require('child_process').spawn;\n\nmodule.exports = function () {\n  var src;\n  var args;\n  var options;\n  var callback;\n  var pdSpawn;\n  var result = \"\";\n  var isURL; // Event Handlers\n\n  var onStdOutData;\n  var onStdOutEnd;\n  var onStdErrData;\n  var onStatCheck;\n\n  isURL = function (src) {\n    return /^(https?|ftp):\\/\\//i.test(src);\n  };\n\n  onStdOutData = function (data) {\n    result += data;\n  };\n\n  onStdOutEnd = function () {\n    callback(null, result || true);\n  };\n\n  onStdErrData = function (err) {\n    callback(new Error(err));\n  };\n\n  onStatCheck = function (err, stats) {\n    // If src is a file or valid web URL, push the src back into args array\n    if (stats && stats.isFile() || isURL) {\n      args.unshift(src);\n    } // Create child_process.spawn\n\n\n    pdSpawn = spawn('pandoc', args, options); // If src is not a file, assume a string input.\n\n    if (typeof stats === \"undefined\" && !isURL) {\n      pdSpawn.stdin.end(src, 'utf-8');\n    } // Set handlers...\n\n\n    pdSpawn.stdout.on('data', onStdOutData);\n    pdSpawn.stdout.on('end', onStdOutEnd);\n    pdSpawn.stderr.on('data', onStdErrData);\n  }; // Convert arguments to actual array.\n\n\n  args = Array.prototype.slice.call(arguments); // Save src out of the args array.\n\n  src = args.shift(); // Check if src is URL match.\n\n  isURL = isURL(src); // Save the callback out of the args array.\n\n  callback = args.pop(); // At this point, args array should be atlest .length \n  // of 1. If .length is 2, we have an Options object.\n\n  if (args.length == 2 && args[1].constructor !== Array) {\n    options = args.pop();\n  } // Pull only remaining element from \n  // the args Array and overwrite itself.\n\n\n  args = args.shift(); // Array of arguments are required for PanDoc.\n  // If arguments are in String format, convert \n  // them to an array to use \n  // in the child_process.spawn() call.\n\n  if (args.constructor === String) {\n    args = args.split(' ');\n  } // Check file status of src\n\n\n  stat(src, onStatCheck);\n};","map":{"version":3,"names":["stat","require","spawn","module","exports","src","args","options","callback","pdSpawn","result","isURL","onStdOutData","onStdOutEnd","onStdErrData","onStatCheck","test","data","err","Error","stats","isFile","unshift","stdin","end","stdout","on","stderr","Array","prototype","slice","call","arguments","shift","pop","length","constructor","String","split"],"sources":["C:/Users/apinto2/node_modules/node-pandoc/index.js"],"sourcesContent":["var stat = require('fs').stat;\nvar spawn = require('child_process').spawn;\n\nmodule.exports = function() {\n\n  var src;\n  var args;\n  var options;\n  var callback;\n  var pdSpawn;\n  var result = \"\";\n  var isURL;\n\n  // Event Handlers\n  var onStdOutData;\n  var onStdOutEnd;\n  var onStdErrData;\n  var onStatCheck;\n\n  isURL = function (src) {\n    return /^(https?|ftp):\\/\\//i.test(src);\n  };\n\n  onStdOutData = function (data) {\n    result += data;\n  };\n\n  onStdOutEnd = function () {\n    callback(null, result || true);\n  };\n\n  onStdErrData = function (err) {\n    callback(new Error(err));\n  };\n\n  onStatCheck = function (err, stats) {\n    // If src is a file or valid web URL, push the src back into args array\n    if ((stats && stats.isFile()) || isURL) {\n      args.unshift(src);\n    }\n\n    // Create child_process.spawn\n    pdSpawn = spawn('pandoc', args, options);\n\n    // If src is not a file, assume a string input.\n    if ((typeof stats === \"undefined\") && !isURL) {\n      pdSpawn.stdin.end(src, 'utf-8');\n    }\n\n    // Set handlers...\n    pdSpawn.stdout.on('data', onStdOutData);\n    pdSpawn.stdout.on('end', onStdOutEnd);\n    pdSpawn.stderr.on('data', onStdErrData);\n  };\n\n  // Convert arguments to actual array.\n  args = Array.prototype.slice.call(arguments);\n  // Save src out of the args array.\n  src = args.shift();\n  // Check if src is URL match.\n  isURL = isURL(src);\n  // Save the callback out of the args array.\n  callback = args.pop();\n\n  // At this point, args array should be atlest .length \n  // of 1. If .length is 2, we have an Options object.\n  if (args.length == 2 && args[1].constructor !== Array) {\n    options = args.pop();\n  }\n\n  // Pull only remaining element from \n  // the args Array and overwrite itself.\n  args = args.shift();\n\n  // Array of arguments are required for PanDoc.\n  // If arguments are in String format, convert \n  // them to an array to use \n  // in the child_process.spawn() call.\n  if (args.constructor === String) {\n    args = args.split(' ');\n  }\n\n  // Check file status of src\n  stat(src, onStatCheck);\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAAzB;;AACA,IAAIE,KAAK,GAAGD,OAAO,CAAC,eAAD,CAAP,CAAyBC,KAArC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAW;EAE1B,IAAIC,GAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,QAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,KAAJ,CAR0B,CAU1B;;EACA,IAAIC,YAAJ;EACA,IAAIC,WAAJ;EACA,IAAIC,YAAJ;EACA,IAAIC,WAAJ;;EAEAJ,KAAK,GAAG,UAAUN,GAAV,EAAe;IACrB,OAAO,sBAAsBW,IAAtB,CAA2BX,GAA3B,CAAP;EACD,CAFD;;EAIAO,YAAY,GAAG,UAAUK,IAAV,EAAgB;IAC7BP,MAAM,IAAIO,IAAV;EACD,CAFD;;EAIAJ,WAAW,GAAG,YAAY;IACxBL,QAAQ,CAAC,IAAD,EAAOE,MAAM,IAAI,IAAjB,CAAR;EACD,CAFD;;EAIAI,YAAY,GAAG,UAAUI,GAAV,EAAe;IAC5BV,QAAQ,CAAC,IAAIW,KAAJ,CAAUD,GAAV,CAAD,CAAR;EACD,CAFD;;EAIAH,WAAW,GAAG,UAAUG,GAAV,EAAeE,KAAf,EAAsB;IAClC;IACA,IAAKA,KAAK,IAAIA,KAAK,CAACC,MAAN,EAAV,IAA6BV,KAAjC,EAAwC;MACtCL,IAAI,CAACgB,OAAL,CAAajB,GAAb;IACD,CAJiC,CAMlC;;;IACAI,OAAO,GAAGP,KAAK,CAAC,QAAD,EAAWI,IAAX,EAAiBC,OAAjB,CAAf,CAPkC,CASlC;;IACA,IAAK,OAAOa,KAAP,KAAiB,WAAlB,IAAkC,CAACT,KAAvC,EAA8C;MAC5CF,OAAO,CAACc,KAAR,CAAcC,GAAd,CAAkBnB,GAAlB,EAAuB,OAAvB;IACD,CAZiC,CAclC;;;IACAI,OAAO,CAACgB,MAAR,CAAeC,EAAf,CAAkB,MAAlB,EAA0Bd,YAA1B;IACAH,OAAO,CAACgB,MAAR,CAAeC,EAAf,CAAkB,KAAlB,EAAyBb,WAAzB;IACAJ,OAAO,CAACkB,MAAR,CAAeD,EAAf,CAAkB,MAAlB,EAA0BZ,YAA1B;EACD,CAlBD,CAhC0B,CAoD1B;;;EACAR,IAAI,GAAGsB,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAP,CArD0B,CAsD1B;;EACA3B,GAAG,GAAGC,IAAI,CAAC2B,KAAL,EAAN,CAvD0B,CAwD1B;;EACAtB,KAAK,GAAGA,KAAK,CAACN,GAAD,CAAb,CAzD0B,CA0D1B;;EACAG,QAAQ,GAAGF,IAAI,CAAC4B,GAAL,EAAX,CA3D0B,CA6D1B;EACA;;EACA,IAAI5B,IAAI,CAAC6B,MAAL,IAAe,CAAf,IAAoB7B,IAAI,CAAC,CAAD,CAAJ,CAAQ8B,WAAR,KAAwBR,KAAhD,EAAuD;IACrDrB,OAAO,GAAGD,IAAI,CAAC4B,GAAL,EAAV;EACD,CAjEyB,CAmE1B;EACA;;;EACA5B,IAAI,GAAGA,IAAI,CAAC2B,KAAL,EAAP,CArE0B,CAuE1B;EACA;EACA;EACA;;EACA,IAAI3B,IAAI,CAAC8B,WAAL,KAAqBC,MAAzB,EAAiC;IAC/B/B,IAAI,GAAGA,IAAI,CAACgC,KAAL,CAAW,GAAX,CAAP;EACD,CA7EyB,CA+E1B;;;EACAtC,IAAI,CAACK,GAAD,EAAMU,WAAN,CAAJ;AACD,CAjFD"},"metadata":{},"sourceType":"script"}