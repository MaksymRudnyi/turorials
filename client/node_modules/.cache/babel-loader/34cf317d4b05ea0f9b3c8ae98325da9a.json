{"ast":null,"code":"var capability = require('./capability');\n\nvar inherits = require('inherits');\n\nvar response = require('./response');\n\nvar stream = require('readable-stream');\n\nvar toArrayBuffer = require('to-arraybuffer');\n\nvar IncomingMessage = response.IncomingMessage;\nvar rStates = response.readyStates;\n\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.fetch && useFetch) {\n    return 'fetch';\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer';\n  } else if (capability.msstream) {\n    return 'ms-stream';\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer';\n  } else if (capability.vbArray && preferBinary) {\n    return 'text:vbarray';\n  } else {\n    return 'text';\n  }\n}\n\nvar ClientRequest = module.exports = function (opts) {\n  var self = this;\n  stream.Writable.call(self);\n  self._opts = opts;\n  self._body = [];\n  self._headers = {};\n  if (opts.auth) self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'));\n  Object.keys(opts.headers).forEach(function (name) {\n    self.setHeader(name, opts.headers[name]);\n  });\n  var preferBinary;\n  var useFetch = true;\n\n  if (opts.mode === 'disable-fetch' || 'requestTimeout' in opts && !capability.abortController) {\n    // If the use of XHR should be preferred. Not typically needed.\n    useFetch = false;\n    preferBinary = true;\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false;\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType;\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true;\n  } else {\n    throw new Error('Invalid value for opts.mode');\n  }\n\n  self._mode = decideMode(preferBinary, useFetch);\n  self._fetchTimer = null;\n  self.on('finish', function () {\n    self._onFinish();\n  });\n};\n\ninherits(ClientRequest, stream.Writable);\n\nClientRequest.prototype.setHeader = function (name, value) {\n  var self = this;\n  var lowerName = name.toLowerCase(); // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n  // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n  // http-browserify did it, so I will too.\n\n  if (unsafeHeaders.indexOf(lowerName) !== -1) return;\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  };\n};\n\nClientRequest.prototype.getHeader = function (name) {\n  var header = this._headers[name.toLowerCase()];\n\n  if (header) return header.value;\n  return null;\n};\n\nClientRequest.prototype.removeHeader = function (name) {\n  var self = this;\n  delete self._headers[name.toLowerCase()];\n};\n\nClientRequest.prototype._onFinish = function () {\n  var self = this;\n  if (self._destroyed) return;\n  var opts = self._opts;\n  var headersObj = self._headers;\n  var body = null;\n\n  if (opts.method !== 'GET' && opts.method !== 'HEAD') {\n    if (capability.arraybuffer) {\n      body = toArrayBuffer(Buffer.concat(self._body));\n    } else if (capability.blobConstructor) {\n      body = new global.Blob(self._body.map(function (buffer) {\n        return toArrayBuffer(buffer);\n      }), {\n        type: (headersObj['content-type'] || {}).value || ''\n      });\n    } else {\n      // get utf8 string\n      body = Buffer.concat(self._body).toString();\n    }\n  } // create flattened list of headers\n\n\n  var headersList = [];\n  Object.keys(headersObj).forEach(function (keyName) {\n    var name = headersObj[keyName].name;\n    var value = headersObj[keyName].value;\n\n    if (Array.isArray(value)) {\n      value.forEach(function (v) {\n        headersList.push([name, v]);\n      });\n    } else {\n      headersList.push([name, value]);\n    }\n  });\n\n  if (self._mode === 'fetch') {\n    var signal = null;\n    var fetchTimer = null;\n\n    if (capability.abortController) {\n      var controller = new AbortController();\n      signal = controller.signal;\n      self._fetchAbortController = controller;\n\n      if ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n        self._fetchTimer = global.setTimeout(function () {\n          self.emit('requestTimeout');\n          if (self._fetchAbortController) self._fetchAbortController.abort();\n        }, opts.requestTimeout);\n      }\n    }\n\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headersList,\n      body: body || undefined,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin',\n      signal: signal\n    }).then(function (response) {\n      self._fetchResponse = response;\n\n      self._connect();\n    }, function (reason) {\n      global.clearTimeout(self._fetchTimer);\n      if (!self._destroyed) self.emit('error', reason);\n    });\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest();\n\n    try {\n      xhr.open(self._opts.method, self._opts.url, true);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    } // Can't set responseType on really old browsers\n\n\n    if ('responseType' in xhr) xhr.responseType = self._mode.split(':')[0];\n    if ('withCredentials' in xhr) xhr.withCredentials = !!opts.withCredentials;\n    if (self._mode === 'text' && 'overrideMimeType' in xhr) xhr.overrideMimeType('text/plain; charset=x-user-defined');\n\n    if ('requestTimeout' in opts) {\n      xhr.timeout = opts.requestTimeout;\n\n      xhr.ontimeout = function () {\n        self.emit('requestTimeout');\n      };\n    }\n\n    headersList.forEach(function (header) {\n      xhr.setRequestHeader(header[0], header[1]);\n    });\n    self._response = null;\n\n    xhr.onreadystatechange = function () {\n      switch (xhr.readyState) {\n        case rStates.LOADING:\n        case rStates.DONE:\n          self._onXHRProgress();\n\n          break;\n      }\n    }; // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n    // in onprogress, not in onreadystatechange with xhr.readyState = 3\n\n\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function () {\n        self._onXHRProgress();\n      };\n    }\n\n    xhr.onerror = function () {\n      if (self._destroyed) return;\n      self.emit('error', new Error('XHR error'));\n    };\n\n    try {\n      xhr.send(body);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n  }\n};\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\n\n\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status;\n    return status !== null && status !== 0;\n  } catch (e) {\n    return false;\n  }\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n  var self = this;\n  if (!statusValid(self._xhr) || self._destroyed) return;\n  if (!self._response) self._connect();\n\n  self._response._onXHRProgress();\n};\n\nClientRequest.prototype._connect = function () {\n  var self = this;\n  if (self._destroyed) return;\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer);\n\n  self._response.on('error', function (err) {\n    self.emit('error', err);\n  });\n\n  self.emit('response', self._response);\n};\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n  var self = this;\n\n  self._body.push(chunk);\n\n  cb();\n};\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n  var self = this;\n  self._destroyed = true;\n  global.clearTimeout(self._fetchTimer);\n  if (self._response) self._response._destroyed = true;\n  if (self._xhr) self._xhr.abort();else if (self._fetchAbortController) self._fetchAbortController.abort();\n};\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n  var self = this;\n\n  if (typeof data === 'function') {\n    cb = data;\n    data = undefined;\n  }\n\n  stream.Writable.prototype.end.call(self, data, encoding, cb);\n};\n\nClientRequest.prototype.flushHeaders = function () {};\n\nClientRequest.prototype.setTimeout = function () {};\n\nClientRequest.prototype.setNoDelay = function () {};\n\nClientRequest.prototype.setSocketKeepAlive = function () {}; // Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\n\n\nvar unsafeHeaders = ['accept-charset', 'accept-encoding', 'access-control-request-headers', 'access-control-request-method', 'connection', 'content-length', 'cookie', 'cookie2', 'date', 'dnt', 'expect', 'host', 'keep-alive', 'origin', 'referer', 'te', 'trailer', 'transfer-encoding', 'upgrade', 'via'];","map":{"version":3,"names":["capability","require","inherits","response","stream","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","module","exports","opts","self","Writable","call","_opts","_body","_headers","auth","setHeader","Buffer","toString","Object","keys","headers","forEach","name","mode","abortController","overrideMimeType","Error","_mode","_fetchTimer","on","_onFinish","prototype","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","concat","blobConstructor","global","Blob","map","buffer","type","headersList","keyName","Array","isArray","v","push","signal","fetchTimer","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","url","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","xhr","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","split","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","statusValid","status","e","_write","chunk","encoding","cb","destroy","end","data","flushHeaders","setNoDelay","setSocketKeepAlive"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/stream-http/lib/request.js"],"sourcesContent":["var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}