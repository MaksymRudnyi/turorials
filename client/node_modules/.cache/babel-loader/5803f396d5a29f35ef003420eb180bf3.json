{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\n\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape');\n    effects.enter('escapeMarker');\n    effects.consume(code);\n    return open;\n  }\n  /** @type {State} */\n\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker');\n      effects.exit('hardBreakEscape');\n      return ok(code);\n    }\n\n    return nok(code);\n  }\n}","map":{"version":3,"names":["markdownLineEnding","hardBreakEscape","name","tokenize","tokenizeHardBreakEscape","effects","ok","nok","start","code","enter","consume","open","exit"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/micromark-core-commonmark/lib/hard-break-escape.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAAQA,kBAAR,QAAiC,0BAAjC;AAEA;;AACA,OAAO,MAAMC,eAAe,GAAG;EAC7BC,IAAI,EAAE,iBADuB;EAE7BC,QAAQ,EAAEC;AAFmB,CAAxB;AAIP;;AAEA,SAASA,uBAAT,CAAiCC,OAAjC,EAA0CC,EAA1C,EAA8CC,GAA9C,EAAmD;EACjD,OAAOC,KAAP;EACA;;EAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;IACnBJ,OAAO,CAACK,KAAR,CAAc,iBAAd;IACAL,OAAO,CAACK,KAAR,CAAc,cAAd;IACAL,OAAO,CAACM,OAAR,CAAgBF,IAAhB;IACA,OAAOG,IAAP;EACD;EACD;;;EAEA,SAASA,IAAT,CAAcH,IAAd,EAAoB;IAClB,IAAIT,kBAAkB,CAACS,IAAD,CAAtB,EAA8B;MAC5BJ,OAAO,CAACQ,IAAR,CAAa,cAAb;MACAR,OAAO,CAACQ,IAAR,CAAa,iBAAb;MACA,OAAOP,EAAE,CAACG,IAAD,CAAT;IACD;;IAED,OAAOF,GAAG,CAACE,IAAD,CAAV;EACD;AACF"},"metadata":{},"sourceType":"module"}