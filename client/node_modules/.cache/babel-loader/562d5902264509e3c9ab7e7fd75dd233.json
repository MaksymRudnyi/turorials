{"ast":null,"code":"// @ts-nocheck\nini.displayName = 'ini';\nini.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  };\n}","map":{"version":3,"names":["ini","displayName","aliases","Prism","languages","comment","pattern","lookbehind","section","inside","alias","punctuation","key","value"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/ini.js"],"sourcesContent":["// @ts-nocheck\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;EACjCA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;IACpB;AACJ;AACA;AACA;AACA;IACIK,OAAO,EAAE;MACPC,OAAO,EAAE,4BADF;MAEPC,UAAU,EAAE;IAFL,CANW;IAUpBC,OAAO,EAAE;MACPF,OAAO,EAAE,+BADF;MAEPC,UAAU,EAAE,IAFL;MAGPE,MAAM,EAAE;QACN,gBAAgB;UACdH,OAAO,EAAE,0DADK;UAEdC,UAAU,EAAE,IAFE;UAGdG,KAAK,EAAE;QAHO,CADV;QAMNC,WAAW,EAAE;MANP;IAHD,CAVW;IAsBpBC,GAAG,EAAE;MACHN,OAAO,EACL,8EAFC;MAGHC,UAAU,EAAE,IAHT;MAIHG,KAAK,EAAE;IAJJ,CAtBe;IA4BpBG,KAAK,EAAE;MACLP,OAAO,EAAE,4DADJ;MAELC,UAAU,EAAE,IAFP;MAGLG,KAAK,EAAE,YAHF;MAILD,MAAM,EAAE;QACN,eAAe;UACbH,OAAO,EAAE,iBADI;UAEbC,UAAU,EAAE;QAFC;MADT;IAJH,CA5Ba;IAuCpBI,WAAW,EAAE;EAvCO,CAAtB;AAyCD"},"metadata":{},"sourceType":"module"}