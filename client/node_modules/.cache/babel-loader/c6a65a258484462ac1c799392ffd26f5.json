{"ast":null,"code":"// @ts-nocheck\ntoml.displayName = 'toml';\ntoml.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function toml(Prism) {\n  ;\n\n  (function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n    /**\n     * @param {string} pattern\n     */\n\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key;\n      });\n    }\n\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [{\n        // Offset Date-Time, Local Date-Time, Local Date\n        pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n        alias: 'number'\n      }, {\n        // Local Time\n        pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n        alias: 'number'\n      }],\n      number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["toml","displayName","aliases","Prism","key","source","insertKey","pattern","replace","languages","comment","greedy","table","RegExp","lookbehind","alias","string","date","number","boolean","punctuation"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/toml.js"],"sourcesContent":["// @ts-nocheck\ntoml.displayName = 'toml'\ntoml.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;AAEA;;AACA,eAAe,SAASF,IAAT,CAAcG,KAAd,EAAqB;EAClC;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjB,IAAIC,GAAG,GAAG,+CAA+CC,MAAzD;IACA;AACJ;AACA;;IAEI,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;MAC1B,OAAOA,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuB,YAAY;QACxC,OAAOJ,GAAP;MACD,CAFM,CAAP;IAGD;;IAEDD,KAAK,CAACM,SAAN,CAAgBT,IAAhB,GAAuB;MACrBU,OAAO,EAAE;QACPH,OAAO,EAAE,KADF;QAEPI,MAAM,EAAE;MAFD,CADY;MAKrBC,KAAK,EAAE;QACLL,OAAO,EAAEM,MAAM,CACbP,SAAS,CACP,qDAAqDD,MAD9C,CADI,EAIb,GAJa,CADV;QAOLS,UAAU,EAAE,IAPP;QAQLH,MAAM,EAAE,IARH;QASLI,KAAK,EAAE;MATF,CALc;MAgBrBX,GAAG,EAAE;QACHG,OAAO,EAAEM,MAAM,CACbP,SAAS,CAAC,6CAA6CD,MAA9C,CADI,EAEb,GAFa,CADZ;QAKHS,UAAU,EAAE,IALT;QAMHH,MAAM,EAAE,IANL;QAOHI,KAAK,EAAE;MAPJ,CAhBgB;MAyBrBC,MAAM,EAAE;QACNT,OAAO,EACL,6EAFI;QAGNI,MAAM,EAAE;MAHF,CAzBa;MA8BrBM,IAAI,EAAE,CACJ;QACE;QACAV,OAAO,EACL,mFAHJ;QAIEQ,KAAK,EAAE;MAJT,CADI,EAOJ;QACE;QACAR,OAAO,EAAE,iCAFX;QAGEQ,KAAK,EAAE;MAHT,CAPI,CA9Be;MA2CrBG,MAAM,EACJ,0KA5CmB;MA6CrBC,OAAO,EAAE,oBA7CY;MA8CrBC,WAAW,EAAE;IA9CQ,CAAvB;EAgDD,CA5DA,EA4DEjB,KA5DF;AA6DF"},"metadata":{},"sourceType":"module"}