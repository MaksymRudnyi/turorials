{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\ncfscript.displayName = 'cfscript';\ncfscript.aliases = ['cfc'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function cfscript(Prism) {\n  Prism.register(refractorClike); // https://cfdocs.org/script\n\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n      inside: {\n        annotation: {\n          pattern: /(?:^|[^.])@[\\w\\.]+/,\n          alias: 'punctuation'\n        }\n      }\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    keyword: /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [/\\+\\+|--|&&|\\|\\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|:/, /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/],\n    scope: {\n      pattern: /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern: /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  });\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern: /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  });\n  delete Prism.languages.cfscript['class-name'];\n  Prism.languages.cfc = Prism.languages['cfscript'];\n}","map":{"version":3,"names":["refractorClike","cfscript","displayName","aliases","Prism","register","languages","extend","comment","pattern","lookbehind","inside","annotation","alias","greedy","keyword","operator","scope","type","insertBefore","cfc"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/cfscript.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\ncfscript.displayName = 'cfscript'\ncfscript.aliases = ['cfc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function cfscript(Prism) {\n  Prism.register(refractorClike)\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|:/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,CAAC,KAAD,CAAnB;AAEA;;AACA,eAAe,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;EACtCA,KAAK,CAACC,QAAN,CAAeL,cAAf,EADsC,CAEtC;;EACAI,KAAK,CAACE,SAAN,CAAgBL,QAAhB,GAA2BG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;IACzDC,OAAO,EAAE,CACP;MACEC,OAAO,EAAE,iCADX;MAEEC,UAAU,EAAE,IAFd;MAGEC,MAAM,EAAE;QACNC,UAAU,EAAE;UACVH,OAAO,EAAE,oBADC;UAEVI,KAAK,EAAE;QAFG;MADN;IAHV,CADO,EAWP;MACEJ,OAAO,EAAE,kBADX;MAEEC,UAAU,EAAE,IAFd;MAGEI,MAAM,EAAE;IAHV,CAXO,CADgD;IAkBzDC,OAAO,EACL,+NAnBuD;IAoBzDC,QAAQ,EAAE,CACR,6DADQ,EAER,uEAFQ,CApB+C;IAwBzDC,KAAK,EAAE;MACLR,OAAO,EACL,oFAFG;MAGLI,KAAK,EAAE;IAHF,CAxBkD;IA6BzDK,IAAI,EAAE;MACJT,OAAO,EACL,sFAFE;MAGJI,KAAK,EAAE;IAHH;EA7BmD,CAAhC,CAA3B;EAmCAT,KAAK,CAACE,SAAN,CAAgBa,YAAhB,CAA6B,UAA7B,EAAyC,SAAzC,EAAoD;IAClD;IACA,qBAAqB;MACnBV,OAAO,EACL,0KAFiB;MAGnBI,KAAK,EAAE;IAHY;EAF6B,CAApD;EAQA,OAAOT,KAAK,CAACE,SAAN,CAAgBL,QAAhB,CAAyB,YAAzB,CAAP;EACAG,KAAK,CAACE,SAAN,CAAgBc,GAAhB,GAAsBhB,KAAK,CAACE,SAAN,CAAgB,UAAhB,CAAtB;AACD"},"metadata":{},"sourceType":"module"}