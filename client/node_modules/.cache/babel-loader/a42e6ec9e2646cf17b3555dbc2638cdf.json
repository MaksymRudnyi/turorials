{"ast":null,"code":"// @ts-nocheck\nmakefile.displayName = 'makefile';\nmakefile.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword: /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  };\n}","map":{"version":3,"names":["makefile","displayName","aliases","Prism","languages","comment","pattern","lookbehind","string","greedy","alias","target","inside","variable","keyword","function","operator","punctuation"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/makefile.js"],"sourcesContent":["// @ts-nocheck\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n"],"mappings":"AAAA;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,EAAnB;AAEA;;AACA,eAAe,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;EACtCA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2B;IACzBK,OAAO,EAAE;MACPC,OAAO,EAAE,4CADF;MAEPC,UAAU,EAAE;IAFL,CADgB;IAKzBC,MAAM,EAAE;MACNF,OAAO,EAAE,gDADH;MAENG,MAAM,EAAE;IAFF,CALiB;IASzB,kBAAkB;MAChBH,OAAO,EAAE,+BADO;MAEhBI,KAAK,EAAE;IAFS,CATO;IAazBC,MAAM,EAAE;MACNL,OAAO,EAAE,6CADH;MAENI,KAAK,EAAE,QAFD;MAGNE,MAAM,EAAE;QACNC,QAAQ,EAAE;MADJ;IAHF,CAbiB;IAoBzBA,QAAQ,EAAE,uDApBe;IAqBzB;IACAC,OAAO,EACL,4HAvBuB;IAwBzBC,QAAQ,EAAE;MACRT,OAAO,EACL,uQAFM;MAGRC,UAAU,EAAE;IAHJ,CAxBe;IA6BzBS,QAAQ,EAAE,sBA7Be;IA8BzBC,WAAW,EAAE;EA9BY,CAA3B;AAgCD"},"metadata":{},"sourceType":"module"}