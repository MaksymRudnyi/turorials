{"ast":null,"code":"var keywords = {\n  \"break\": true,\n  \"case\": true,\n  \"chan\": true,\n  \"const\": true,\n  \"continue\": true,\n  \"default\": true,\n  \"defer\": true,\n  \"else\": true,\n  \"fallthrough\": true,\n  \"for\": true,\n  \"func\": true,\n  \"go\": true,\n  \"goto\": true,\n  \"if\": true,\n  \"import\": true,\n  \"interface\": true,\n  \"map\": true,\n  \"package\": true,\n  \"range\": true,\n  \"return\": true,\n  \"select\": true,\n  \"struct\": true,\n  \"switch\": true,\n  \"type\": true,\n  \"var\": true,\n  \"bool\": true,\n  \"byte\": true,\n  \"complex64\": true,\n  \"complex128\": true,\n  \"float32\": true,\n  \"float64\": true,\n  \"int8\": true,\n  \"int16\": true,\n  \"int32\": true,\n  \"int64\": true,\n  \"string\": true,\n  \"uint8\": true,\n  \"uint16\": true,\n  \"uint32\": true,\n  \"uint64\": true,\n  \"int\": true,\n  \"uint\": true,\n  \"uintptr\": true,\n  \"error\": true,\n  \"rune\": true\n};\nvar atoms = {\n  \"true\": true,\n  \"false\": true,\n  \"iota\": true,\n  \"nil\": true,\n  \"append\": true,\n  \"cap\": true,\n  \"close\": true,\n  \"complex\": true,\n  \"copy\": true,\n  \"delete\": true,\n  \"imag\": true,\n  \"len\": true,\n  \"make\": true,\n  \"new\": true,\n  \"panic\": true,\n  \"print\": true,\n  \"println\": true,\n  \"real\": true,\n  \"recover\": true\n};\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n\n    return \"number\";\n  }\n\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n    return \"keyword\";\n  }\n\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false,\n        next,\n        end = false;\n\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n\n      escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n    }\n\n    if (end || !(escaped || quote == \"`\")) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"*\";\n  }\n\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n  return state.context = state.context.prev;\n} // Interface\n\n\nexport const go = {\n  startState: function (indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n  token: function (stream, state) {\n    var ctx = state.context;\n\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      if (ctx.type == \"case\") ctx.type = \"}\";\n    }\n\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n    if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"case\") ctx.type = \"case\";else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);else if (curPunc == ctx.type) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context,\n        firstChar = textAfter && textAfter.charAt(0);\n\n    if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n      state.context.type = \"}\";\n      return ctx.indented;\n    }\n\n    var closing = firstChar == ctx.type;\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n  languageData: {\n    indentOnInput: /^\\s([{}]|case |default\\s*:)$/,\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    }\n  }\n};","map":{"version":3,"names":["keywords","atoms","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","go","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","charAt","closing","unit","languageData","indentOnInput","commentTokens","line","block","open","close"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/go.js"],"sourcesContent":["var keywords = {\n  \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n  \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n  \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n  \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n  \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n  \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n  \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n  \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n  \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n  \"rune\":true\n};\n\nvar atoms = {\n  \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n  \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n  \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n  \"println\":true, \"real\":true, \"recover\":true\n};\n\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) {\n    if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n    }\n    if (end || !(escaped || quote == \"`\"))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const go = {\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n      if (ctx.type == \"case\") ctx.type = \"}\";\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"case\") ctx.type = \"case\";\n    else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n    else if (curPunc == ctx.type) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return null;\n    var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n    if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n      state.context.type = \"}\";\n      return ctx.indented;\n    }\n    var closing = firstChar == ctx.type;\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s([{}]|case |default\\s*:)$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}