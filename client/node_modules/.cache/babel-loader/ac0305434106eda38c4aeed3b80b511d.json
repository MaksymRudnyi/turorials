{"ast":null,"code":"// @ts-nocheck\nlatex.displayName = 'latex';\nlatex.aliases = ['context', 'tex'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function latex(Prism) {\n  ;\n\n  (function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i;\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    };\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern: /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [{\n        pattern: /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n        inside: insideEqu,\n        alias: 'string'\n      }, {\n        pattern: /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true,\n        inside: insideEqu,\n        alias: 'string'\n      }],\n\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern: /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern: /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    };\n    Prism.languages.tex = Prism.languages.latex;\n    Prism.languages.context = Prism.languages.latex;\n  })(Prism);\n}","map":{"version":3,"names":["latex","displayName","aliases","Prism","funcPattern","insideEqu","pattern","alias","languages","comment","cdata","lookbehind","equation","inside","keyword","url","headline","function","punctuation","tex","context"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/latex.js"],"sourcesContent":["// @ts-nocheck\nlatex.displayName = 'latex'\nlatex.aliases = ['context', 'tex']\n\n/** @type {import('../core.js').Syntax} */\nexport default function latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n"],"mappings":"AAAA;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,CAAC,SAAD,EAAY,KAAZ,CAAhB;AAEA;;AACA,eAAe,SAASF,KAAT,CAAeG,KAAf,EAAsB;EACnC;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjB,IAAIC,WAAW,GAAG,4BAAlB;IACA,IAAIC,SAAS,GAAG;MACd,oBAAoB;QAClBC,OAAO,EAAEF,WADS;QAElBG,KAAK,EAAE;MAFW;IADN,CAAhB;IAMAJ,KAAK,CAACK,SAAN,CAAgBR,KAAhB,GAAwB;MACtBS,OAAO,EAAE,KADa;MAEtB;MACAC,KAAK,EAAE;QACLJ,OAAO,EACL,kEAFG;QAGLK,UAAU,EAAE;MAHP,CAHe;;MAStB;AACN;AACA;AACA;MACMC,QAAQ,EAAE,CACR;QACEN,OAAO,EACL,yFAFJ;QAGEO,MAAM,EAAER,SAHV;QAIEE,KAAK,EAAE;MAJT,CADQ,EAOR;QACED,OAAO,EACL,2FAFJ;QAGEK,UAAU,EAAE,IAHd;QAIEE,MAAM,EAAER,SAJV;QAKEE,KAAK,EAAE;MALT,CAPQ,CAbY;;MA6BtB;AACN;AACA;AACA;MACMO,OAAO,EAAE;QACPR,OAAO,EACL,uFAFK;QAGPK,UAAU,EAAE;MAHL,CAjCa;MAsCtBI,GAAG,EAAE;QACHT,OAAO,EAAE,sBADN;QAEHK,UAAU,EAAE;MAFT,CAtCiB;;MA2CtB;AACN;AACA;AACA;MACMK,QAAQ,EAAE;QACRV,OAAO,EACL,2JAFM;QAGRK,UAAU,EAAE,IAHJ;QAIRJ,KAAK,EAAE;MAJC,CA/CY;MAqDtBU,QAAQ,EAAE;QACRX,OAAO,EAAEF,WADD;QAERG,KAAK,EAAE;MAFC,CArDY;MAyDtBW,WAAW,EAAE;IAzDS,CAAxB;IA2DAf,KAAK,CAACK,SAAN,CAAgBW,GAAhB,GAAsBhB,KAAK,CAACK,SAAN,CAAgBR,KAAtC;IACAG,KAAK,CAACK,SAAN,CAAgBY,OAAhB,GAA0BjB,KAAK,CAACK,SAAN,CAAgBR,KAA1C;EACD,CArEA,EAqEEG,KArEF;AAsEF"},"metadata":{},"sourceType":"module"}