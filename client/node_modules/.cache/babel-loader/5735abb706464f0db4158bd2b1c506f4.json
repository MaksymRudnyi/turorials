{"ast":null,"code":"// @ts-nocheck\ndot.displayName = 'dot';\ndot.aliases = ['gv'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;\n\n  (function (Prism) {\n    var ID = '(?:' + [// an identifier\n    /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n    /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n    /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n    /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source].join('|') + ')';\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    };\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n\n    function withID(source, flags) {\n      return RegExp(source.replace(/<ID>/g, function () {\n        return ID;\n      }), flags);\n    }\n\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(/(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source, 'i'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    };\n    Prism.languages.gv = Prism.languages.dot;\n  })(Prism);\n}","map":{"version":3,"names":["dot","displayName","aliases","Prism","ID","source","join","IDInside","markup","pattern","lookbehind","alias","inside","languages","withID","flags","RegExp","replace","comment","greedy","keyword","node","operator","punctuation","gv"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/dot.js"],"sourcesContent":["// @ts-nocheck\ndot.displayName = 'dot'\ndot.aliases = ['gv']\n\n/** @type {import('../core.js').Syntax} */\nexport default function dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,CAAC,IAAD,CAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;EACjC;EACA;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjB,IAAIC,EAAE,GACJ,QACA,CACE;IACA,uCAAuCC,MAFzC,EAEiD;IAC/C,4BAA4BA,MAH9B,EAGsC;IACpC,gCAAgCA,MAJlC,EAI0C;IACxC,+EACGA,MANL,EAOEC,IAPF,CAOO,GAPP,CADA,GASA,GAVF;IAWA,IAAIC,QAAQ,GAAG;MACbC,MAAM,EAAE;QACNC,OAAO,EAAE,mBADH;QAENC,UAAU,EAAE,IAFN;QAGNC,KAAK,EAAE,CAAC,iBAAD,EAAoB,eAApB,EAAqC,cAArC,CAHD;QAINC,MAAM,EAAET,KAAK,CAACU,SAAN,CAAgBL;MAJlB;IADK,CAAf;IAQA;AACJ;AACA;AACA;AACA;;IAEI,SAASM,MAAT,CAAgBT,MAAhB,EAAwBU,KAAxB,EAA+B;MAC7B,OAAOC,MAAM,CACXX,MAAM,CAACY,OAAP,CAAe,OAAf,EAAwB,YAAY;QAClC,OAAOb,EAAP;MACD,CAFD,CADW,EAIXW,KAJW,CAAb;IAMD;;IAEDZ,KAAK,CAACU,SAAN,CAAgBb,GAAhB,GAAsB;MACpBkB,OAAO,EAAE;QACPT,OAAO,EAAE,+BADF;QAEPU,MAAM,EAAE;MAFD,CADW;MAKpB,cAAc;QACZV,OAAO,EAAEK,MAAM,CACb,+CAA+CT,MADlC,EAEb,GAFa,CADH;QAKZK,UAAU,EAAE,IALA;QAMZS,MAAM,EAAE,IANI;QAOZR,KAAK,EAAE,YAPK;QAQZC,MAAM,EAAEL;MARI,CALM;MAepB,cAAc;QACZE,OAAO,EAAEK,MAAM,CAAC,oBAAoBT,MAArB,CADH;QAEZK,UAAU,EAAE,IAFA;QAGZS,MAAM,EAAE,IAHI;QAIZP,MAAM,EAAEL;MAJI,CAfM;MAqBpB,aAAa;QACXE,OAAO,EAAEK,MAAM,CAAC,qCAAqCT,MAAtC,CADJ;QAEXK,UAAU,EAAE,IAFD;QAGXS,MAAM,EAAE,IAHG;QAIXP,MAAM,EAAEL;MAJG,CArBO;MA2BpBa,OAAO,EAAE,kDA3BW;MA4BpB,iBAAiB;QACfX,OAAO,EAAE,sDADM;QAEfC,UAAU,EAAE,IAFG;QAGfC,KAAK,EAAE;MAHQ,CA5BG;MAiCpBU,IAAI,EAAE;QACJZ,OAAO,EAAEK,MAAM,CAAC,+BAA+BT,MAAhC,CADX;QAEJK,UAAU,EAAE,IAFR;QAGJS,MAAM,EAAE,IAHJ;QAIJP,MAAM,EAAEL;MAJJ,CAjCc;MAuCpBe,QAAQ,EAAE,YAvCU;MAwCpBC,WAAW,EAAE;IAxCO,CAAtB;IA0CApB,KAAK,CAACU,SAAN,CAAgBW,EAAhB,GAAqBrB,KAAK,CAACU,SAAN,CAAgBb,GAArC;EACD,CA9EA,EA8EEG,KA9EF;AA+EF"},"metadata":{},"sourceType":"module"}