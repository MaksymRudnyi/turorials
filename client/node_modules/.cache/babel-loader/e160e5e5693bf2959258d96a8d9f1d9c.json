{"ast":null,"code":"// @ts-nocheck\ngettext.displayName = 'gettext';\ngettext.aliases = ['po'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [{\n      pattern: /# .*/,\n      greedy: true,\n      alias: 'translator-comment'\n    }, {\n      pattern: /#\\..*/,\n      greedy: true,\n      alias: 'extracted-comment'\n    }, {\n      pattern: /#:.*/,\n      greedy: true,\n      alias: 'reference-comment'\n    }, {\n      pattern: /#,.*/,\n      greedy: true,\n      alias: 'flag-comment'\n    }, {\n      pattern: /#\\|.*/,\n      greedy: true,\n      alias: 'previously-untranslated-comment'\n    }, {\n      pattern: /#.*/,\n      greedy: true\n    }],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  };\n  Prism.languages.po = Prism.languages.gettext;\n}","map":{"version":3,"names":["gettext","displayName","aliases","Prism","languages","comment","pattern","greedy","alias","string","lookbehind","keyword","number","punctuation","po"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/gettext.js"],"sourcesContent":["// @ts-nocheck\ngettext.displayName = 'gettext'\ngettext.aliases = ['po']\n\n/** @type {import('../core.js').Syntax} */\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [\n      {\n        pattern: /# .*/,\n        greedy: true,\n        alias: 'translator-comment'\n      },\n      {\n        pattern: /#\\..*/,\n        greedy: true,\n        alias: 'extracted-comment'\n      },\n      {\n        pattern: /#:.*/,\n        greedy: true,\n        alias: 'reference-comment'\n      },\n      {\n        pattern: /#,.*/,\n        greedy: true,\n        alias: 'flag-comment'\n      },\n      {\n        pattern: /#\\|.*/,\n        greedy: true,\n        alias: 'previously-untranslated-comment'\n      },\n      {\n        pattern: /#.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  }\n  Prism.languages.po = Prism.languages.gettext\n}\n"],"mappings":"AAAA;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,CAAC,IAAD,CAAlB;AAEA;;AACA,eAAe,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;EACrCA,KAAK,CAACC,SAAN,CAAgBJ,OAAhB,GAA0B;IACxBK,OAAO,EAAE,CACP;MACEC,OAAO,EAAE,MADX;MAEEC,MAAM,EAAE,IAFV;MAGEC,KAAK,EAAE;IAHT,CADO,EAMP;MACEF,OAAO,EAAE,OADX;MAEEC,MAAM,EAAE,IAFV;MAGEC,KAAK,EAAE;IAHT,CANO,EAWP;MACEF,OAAO,EAAE,MADX;MAEEC,MAAM,EAAE,IAFV;MAGEC,KAAK,EAAE;IAHT,CAXO,EAgBP;MACEF,OAAO,EAAE,MADX;MAEEC,MAAM,EAAE,IAFV;MAGEC,KAAK,EAAE;IAHT,CAhBO,EAqBP;MACEF,OAAO,EAAE,OADX;MAEEC,MAAM,EAAE,IAFV;MAGEC,KAAK,EAAE;IAHT,CArBO,EA0BP;MACEF,OAAO,EAAE,KADX;MAEEC,MAAM,EAAE;IAFV,CA1BO,CADe;IAgCxBE,MAAM,EAAE;MACNH,OAAO,EAAE,4BADH;MAENI,UAAU,EAAE,IAFN;MAGNH,MAAM,EAAE;IAHF,CAhCgB;IAqCxBI,OAAO,EAAE,kCArCe;IAsCxBC,MAAM,EAAE,SAtCgB;IAuCxBC,WAAW,EAAE;EAvCW,CAA1B;EAyCAV,KAAK,CAACC,SAAN,CAAgBU,EAAhB,GAAqBX,KAAK,CAACC,SAAN,CAAgBJ,OAArC;AACD"},"metadata":{},"sourceType":"module"}