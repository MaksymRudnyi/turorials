{"ast":null,"code":"var keywords = {\n  \"term\": true,\n  \"method\": true,\n  \"accu\": true,\n  \"rule\": true,\n  \"then\": true,\n  \"is\": true,\n  \"and\": true,\n  \"or\": true,\n  \"if\": true,\n  \"default\": true\n};\nvar start_blocks = {\n  \"var_input\": true,\n  \"var_output\": true,\n  \"fuzzify\": true,\n  \"defuzzify\": true,\n  \"function_block\": true,\n  \"ruleblock\": true\n};\nvar end_blocks = {\n  \"end_ruleblock\": true,\n  \"end_defuzzify\": true,\n  \"end_function_block\": true,\n  \"end_fuzzify\": true,\n  \"end_var\": true\n};\nvar atoms = {\n  \"true\": true,\n  \"false\": true,\n  \"nan\": true,\n  \"real\": true,\n  \"min\": true,\n  \"max\": true,\n  \"cog\": true,\n  \"cogs\": true\n};\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n\n    return \"number\";\n  }\n\n  if (ch == \"/\" || ch == \"(\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n  var cur = stream.current().toLowerCase();\n\n  if (keywords.propertyIsEnumerable(cur) || start_blocks.propertyIsEnumerable(cur) || end_blocks.propertyIsEnumerable(cur)) {\n    return \"keyword\";\n  }\n\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while (ch = stream.next()) {\n    if ((ch == \"/\" || ch == \")\") && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n\n    maybeEnd = ch == \"*\";\n  }\n\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \"end_block\") state.indented = state.context.indented;\n  return state.context = state.context.prev;\n} // Interface\n\n\nexport const fcl = {\n  startState: function (indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n  token: function (stream, state) {\n    var ctx = state.context;\n\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n\n    if (stream.eatSpace()) return null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n    var cur = stream.current().toLowerCase();\n    if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");else if (end_blocks.propertyIsEnumerable(cur)) popContext(state);\n    state.startOfLine = false;\n    return style;\n  },\n  indent: function (state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var ctx = state.context;\n    var closing = end_blocks.propertyIsEnumerable(textAfter);\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n  languageData: {\n    commentTokens: {\n      line: \"//\",\n      block: {\n        open: \"(*\",\n        close: \"*)\"\n      }\n    }\n  }\n};","map":{"version":3,"names":["keywords","start_blocks","end_blocks","atoms","isOperatorChar","tokenBase","stream","state","ch","next","test","match","eat","tokenize","tokenComment","skipToEnd","eatWhile","cur","current","toLowerCase","propertyIsEnumerable","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","fcl","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","closing","unit","languageData","commentTokens","line","block","open","close"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/fcl.js"],"sourcesContent":["var keywords = {\n  \"term\": true,\n  \"method\": true, \"accu\": true,\n  \"rule\": true, \"then\": true, \"is\": true, \"and\": true, \"or\": true,\n  \"if\": true, \"default\": true\n};\n\nvar start_blocks = {\n  \"var_input\": true,\n  \"var_output\": true,\n  \"fuzzify\": true,\n  \"defuzzify\": true,\n  \"function_block\": true,\n  \"ruleblock\": true\n};\n\nvar end_blocks = {\n  \"end_ruleblock\": true,\n  \"end_defuzzify\": true,\n  \"end_function_block\": true,\n  \"end_fuzzify\": true,\n  \"end_var\": true\n};\n\nvar atoms = {\n  \"true\": true, \"false\": true, \"nan\": true,\n  \"real\": true, \"min\": true, \"max\": true, \"cog\": true, \"cogs\": true\n};\n\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n\n  if (ch == \"/\" || ch == \"(\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n\n  var cur = stream.current().toLowerCase();\n  if (keywords.propertyIsEnumerable(cur) ||\n      start_blocks.propertyIsEnumerable(cur) ||\n      end_blocks.propertyIsEnumerable(cur)) {\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if ((ch == \"/\" || ch == \")\") && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \"end_block\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const fcl = {\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    var cur = stream.current().toLowerCase();\n\n    if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");\n    else if (end_blocks.propertyIsEnumerable(cur))  popContext(state);\n\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var ctx = state.context;\n\n    var closing = end_blocks.propertyIsEnumerable(textAfter);\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    commentTokens: {line: \"//\", block: {open: \"(*\", close: \"*)\"}}\n  }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}