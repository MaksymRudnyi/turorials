{"ast":null,"code":"// @ts-nocheck\nr.displayName = 'r';\nr.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [/\\b(?:Inf|NaN)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n    keyword: /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  };\n}","map":{"version":3,"names":["r","displayName","aliases","Prism","languages","comment","string","pattern","greedy","alias","boolean","ellipsis","number","keyword","operator","punctuation"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/r.js"],"sourcesContent":["// @ts-nocheck\nr.displayName = 'r'\nr.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n"],"mappings":"AAAA;AACAA,CAAC,CAACC,WAAF,GAAgB,GAAhB;AACAD,CAAC,CAACE,OAAF,GAAY,EAAZ;AAEA;;AACA,eAAe,SAASF,CAAT,CAAWG,KAAX,EAAkB;EAC/BA,KAAK,CAACC,SAAN,CAAgBJ,CAAhB,GAAoB;IAClBK,OAAO,EAAE,KADS;IAElBC,MAAM,EAAE;MACNC,OAAO,EAAE,kCADH;MAENC,MAAM,EAAE;IAFF,CAFU;IAMlB,oBAAoB;MAClB;MACA;MACAD,OAAO,EAAE,WAHS;MAIlBE,KAAK,EAAE;IAJW,CANF;IAYlBC,OAAO,EAAE,oBAZS;IAalBC,QAAQ,EAAE,gBAbQ;IAclBC,MAAM,EAAE,CACN,iBADM,EAEN,+EAFM,CAdU;IAkBlBC,OAAO,EACL,gHAnBgB;IAoBlBC,QAAQ,EAAE,oDApBQ;IAqBlBC,WAAW,EAAE;EArBK,CAApB;AAuBD"},"metadata":{},"sourceType":"module"}