{"ast":null,"code":"// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js';\nftl.displayName = 'ftl';\nftl.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function ftl(Prism) {\n  Prism.register(refractorMarkupTemplating);\n\n  (function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR;\n      });\n    }\n\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [{\n        // raw string\n        pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n        greedy: true\n      }, {\n        pattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(/<expr>/g, function () {\n          return FTL_EXPR;\n        })),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(/<expr>/g, function () {\n              return FTL_EXPR;\n            })),\n            lookbehind: true,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              rest: null\n            }\n          }\n        }\n      }],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator: /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    };\n    ftl.string[1].inside.interpolation.inside.rest = ftl;\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    };\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () {\n        return FTL_EXPR;\n      }), 'gi');\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'ftl', pattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl');\n    });\n  })(Prism);\n}","map":{"version":3,"names":["refractorMarkupTemplating","ftl","displayName","aliases","Prism","register","FTL_EXPR","source","i","replace","comment","string","pattern","greedy","RegExp","inside","interpolation","lookbehind","alias","rest","keyword","boolean","function","number","operator","punctuation","languages","directive","content","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/ftl.js"],"sourcesContent":["// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nftl.displayName = 'ftl'\nftl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}