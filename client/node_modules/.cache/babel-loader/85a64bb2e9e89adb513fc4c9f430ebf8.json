{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nkotlin.displayName = 'kotlin';\nkotlin.aliases = ['kt', 'kts'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike);\n\n  (function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [{\n        pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n        greedy: true\n      }, {\n        pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n        lookbehind: true,\n        greedy: true\n      }],\n      number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    });\n    delete Prism.languages.kotlin['class-name'];\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    };\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [{\n        pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n        alias: 'multiline',\n        inside: {\n          interpolation: {\n            pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n            inside: interpolationInside\n          },\n          string: /[\\s\\S]+/\n        }\n      }, {\n        pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n        alias: 'singleline',\n        inside: {\n          interpolation: {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n            lookbehind: true,\n            inside: interpolationInside\n          },\n          string: /[\\s\\S]+/\n        }\n      }],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    });\n    delete Prism.languages.kotlin['string'];\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    });\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    });\n    Prism.languages.kt = Prism.languages.kotlin;\n    Prism.languages.kts = Prism.languages.kotlin;\n  })(Prism);\n}","map":{"version":3,"names":["refractorClike","kotlin","displayName","aliases","Prism","register","languages","extend","keyword","pattern","lookbehind","function","greedy","number","operator","interpolationInside","alias","expression","inside","insertBefore","interpolation","string","char","annotation","label","kt","kts"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/kotlin.js"],"sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,CAAC,IAAD,EAAO,KAAP,CAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACpCA,KAAK,CAACC,QAAN,CAAeL,cAAf;;EACC,CAAC,UAAUI,KAAV,EAAiB;IACjBA,KAAK,CAACE,SAAN,CAAgBL,MAAhB,GAAyBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;MACvDC,OAAO,EAAE;QACP;QACAC,OAAO,EACL,0bAHK;QAIPC,UAAU,EAAE;MAJL,CAD8C;MAOvDC,QAAQ,EAAE,CACR;QACEF,OAAO,EAAE,gCADX;QAEEG,MAAM,EAAE;MAFV,CADQ,EAKR;QACEH,OAAO,EAAE,kCADX;QAEEC,UAAU,EAAE,IAFd;QAGEE,MAAM,EAAE;MAHV,CALQ,CAP6C;MAkBvDC,MAAM,EACJ,iIAnBqD;MAoBvDC,QAAQ,EACN;IArBqD,CAAhC,CAAzB;IAuBA,OAAOV,KAAK,CAACE,SAAN,CAAgBL,MAAhB,CAAuB,YAAvB,CAAP;IACA,IAAIc,mBAAmB,GAAG;MACxB,6BAA6B;QAC3BN,OAAO,EAAE,YADkB;QAE3BO,KAAK,EAAE;MAFoB,CADL;MAKxBC,UAAU,EAAE;QACVR,OAAO,EAAE,SADC;QAEVS,MAAM,EAAEd,KAAK,CAACE,SAAN,CAAgBL;MAFd;IALY,CAA1B;IAUAG,KAAK,CAACE,SAAN,CAAgBa,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;MAC/C;MACA,kBAAkB,CAChB;QACEV,OAAO,EAAE,0CADX;QAEEO,KAAK,EAAE,WAFT;QAGEE,MAAM,EAAE;UACNE,aAAa,EAAE;YACbX,OAAO,EAAE,6BADI;YAEbS,MAAM,EAAEH;UAFK,CADT;UAKNM,MAAM,EAAE;QALF;MAHV,CADgB,EAYhB;QACEZ,OAAO,EAAE,gDADX;QAEEO,KAAK,EAAE,YAFT;QAGEE,MAAM,EAAE;UACNE,aAAa,EAAE;YACbX,OAAO,EAAE,oDADI;YAEbC,UAAU,EAAE,IAFC;YAGbQ,MAAM,EAAEH;UAHK,CADT;UAMNM,MAAM,EAAE;QANF;MAHV,CAZgB,CAF6B;MA2B/CC,IAAI,EAAE;QACJ;QACAb,OAAO,EAAE,4CAFL;QAGJG,MAAM,EAAE;MAHJ;IA3ByC,CAAjD;IAiCA,OAAOR,KAAK,CAACE,SAAN,CAAgBL,MAAhB,CAAuB,QAAvB,CAAP;IACAG,KAAK,CAACE,SAAN,CAAgBa,YAAhB,CAA6B,QAA7B,EAAuC,SAAvC,EAAkD;MAChDI,UAAU,EAAE;QACVd,OAAO,EAAE,qCADC;QAEVO,KAAK,EAAE;MAFG;IADoC,CAAlD;IAMAZ,KAAK,CAACE,SAAN,CAAgBa,YAAhB,CAA6B,QAA7B,EAAuC,UAAvC,EAAmD;MACjDK,KAAK,EAAE;QACLf,OAAO,EAAE,eADJ;QAELO,KAAK,EAAE;MAFF;IAD0C,CAAnD;IAMAZ,KAAK,CAACE,SAAN,CAAgBmB,EAAhB,GAAqBrB,KAAK,CAACE,SAAN,CAAgBL,MAArC;IACAG,KAAK,CAACE,SAAN,CAAgBoB,GAAhB,GAAsBtB,KAAK,CAACE,SAAN,CAAgBL,MAAtC;EACD,CAnFA,EAmFEG,KAnFF;AAoFF"},"metadata":{},"sourceType":"module"}