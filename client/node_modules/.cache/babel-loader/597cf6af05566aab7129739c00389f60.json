{"ast":null,"code":"// @ts-nocheck\nopenqasm.displayName = 'openqasm';\nopenqasm.aliases = ['qasm'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword: /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name': /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  };\n  Prism.languages.qasm = Prism.languages.openqasm;\n}","map":{"version":3,"names":["openqasm","displayName","aliases","Prism","languages","comment","string","pattern","greedy","keyword","function","constant","number","lookbehind","operator","punctuation","qasm"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/refractor/lang/openqasm.js"],"sourcesContent":["// @ts-nocheck\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\n\n/** @type {import('../core.js').Syntax} */\nexport default function openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n"],"mappings":"AAAA;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,CAAC,MAAD,CAAnB;AAEA;;AACA,eAAe,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;EACtC;EACAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2B;IACzBK,OAAO,EAAE,yBADgB;IAEzBC,MAAM,EAAE;MACNC,OAAO,EAAE,6BADH;MAENC,MAAM,EAAE;IAFF,CAFiB;IAMzBC,OAAO,EACL,8NAPuB;IAQzB,cACE,4EATuB;IAUzBC,QAAQ,EAAE,6DAVe;IAWzBC,QAAQ,EAAE,6BAXe;IAYzBC,MAAM,EAAE;MACNL,OAAO,EACL,wEAFI;MAGNM,UAAU,EAAE;IAHN,CAZiB;IAiBzBC,QAAQ,EAAE,mDAjBe;IAkBzBC,WAAW,EAAE;EAlBY,CAA3B;EAoBAZ,KAAK,CAACC,SAAN,CAAgBY,IAAhB,GAAuBb,KAAK,CAACC,SAAN,CAAgBJ,QAAvC;AACD"},"metadata":{},"sourceType":"module"}