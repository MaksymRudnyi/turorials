{"ast":null,"code":"import * as React from 'react';\nimport { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var quote = {\n  name: 'quote',\n  keyCommand: 'quote',\n  shortcuts: 'ctrlcmd+q',\n  buttonProps: {\n    'aria-label': 'Insert a quote',\n    title: 'Insert a quote'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"\n    })\n  }),\n  execute: (state, api) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\n    var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join('\\n'); // Replaces the current selection with the quote mark up\n\n    api.replaceSelection(breaksBefore + \"> \" + state1.selectedText + breaksAfter);\n    var selectionStart = state1.selection.start + breaksBeforeCount + 2;\n    var selectionEnd = selectionStart + state1.selectedText.length;\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n  }\n};","map":{"version":3,"sources":["../../src/commands/quote.tsx"],"names":["quote","name","keyCommand","shortcuts","buttonProps","title","icon","execute","newSelectionRange","selectWord","text","state","selection","state1","api","breaksBeforeCount","getBreaksNeededForEmptyLineBefore","breaksBefore","Array","breaksAfterCount","getBreaksNeededForEmptyLineAfter","breaksAfter","selectionStart","selectionEnd","start","end"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,SAAA,iCAAA,EAAA,gCAAA,EAAA,UAAA,QAAA,wBAAA;;AAMA,OAAO,IAAMA,KAAe,GAAG;EAC7BC,IAAI,EADyB,OAAA;EAE7BC,UAAU,EAFmB,OAAA;EAG7BC,SAAS,EAHoB,WAAA;EAI7BC,WAAW,EAAE;IAAE,cAAF,gBAAA;IAAkCC,KAAK,EAAE;EAAzC,CAJgB;EAK7BC,IAAI,EAAA,aACF,IAAA,CAAA,KAAA,EAAA;IAAK,KAAK,EAAV,IAAA;IAAgB,MAAM,EAAtB,IAAA;IAA4B,OAAO,EAAnC,aAAA;IAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;MACE,IAAI,EADN,cAAA;MAEE,CAAC,EAAC;IAFJ,CAAA;EADF,CAAA,CAN2B;EAa7BC,OAAO,EAAE,CAAA,KAAA,EAAA,GAAA,KAA4C;IACnD;IACA,IAAMC,iBAAiB,GAAGC,UAAU,CAAC;MAAEC,IAAI,EAAEC,KAAK,CAAb,IAAA;MAAoBC,SAAS,EAAED,KAAK,CAACC;IAArC,CAAD,CAApC;IACA,IAAMC,MAAM,GAAGC,GAAG,CAAHA,iBAAAA,CAAf,iBAAeA,CAAf;IACA,IAAMC,iBAAiB,GAAGC,iCAAiC,CAACH,MAAM,CAAP,IAAA,EAAcA,MAAM,CAANA,SAAAA,CAAzE,KAA2D,CAA3D;IACA,IAAMI,YAAY,GAAGC,KAAK,CAACH,iBAAiB,GAAvBG,CAAK,CAALA,CAAAA,IAAAA,CAArB,IAAqBA,CAArB;IAEA,IAAMC,gBAAgB,GAAGC,gCAAgC,CAACP,MAAM,CAAP,IAAA,EAAcA,MAAM,CAANA,SAAAA,CAAvE,GAAyD,CAAzD;IACA,IAAMQ,WAAW,GAAGH,KAAK,CAACC,gBAAgB,GAAtBD,CAAK,CAALA,CAAAA,IAAAA,CAR+B,IAQ/BA,CAApB,CARmD,CAUnD;;IACAJ,GAAG,CAAHA,gBAAAA,CAAwBG,YAAxBH,GAAAA,IAAwBG,GAAiBJ,MAAM,CAA/CC,YAAwBG,GAAxBH,WAAAA;IAEA,IAAMQ,cAAc,GAAGT,MAAM,CAANA,SAAAA,CAAAA,KAAAA,GAAAA,iBAAAA,GAAvB,CAAA;IACA,IAAMU,YAAY,GAAGD,cAAc,GAAGT,MAAM,CAANA,YAAAA,CAAtC,MAAA;IAEAC,GAAG,CAAHA,iBAAAA,CAAsB;MACpBU,KAAK,EADe,cAAA;MAEpBC,GAAG,EAAEF;IAFe,CAAtBT;EAID;AAjC4B,CAAxB","sourcesContent":["import * as React from 'react';\nimport { ICommand, TextState, TextAreaTextApi } from './';\nimport {\n  getBreaksNeededForEmptyLineBefore,\n  getBreaksNeededForEmptyLineAfter,\n  selectWord,\n} from '../utils/markdownUtils';\n\nexport const quote: ICommand = {\n  name: 'quote',\n  keyCommand: 'quote',\n  shortcuts: 'ctrlcmd+q',\n  buttonProps: { 'aria-label': 'Insert a quote', title: 'Insert a quote' },\n  icon: (\n    <svg width=\"12\" height=\"12\" viewBox=\"0 0 520 520\">\n      <path\n        fill=\"currentColor\"\n        d=\"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"\n      />\n    </svg>\n  ),\n  execute: (state: TextState, api: TextAreaTextApi) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n    const state1 = api.setSelectionRange(newSelectionRange);\n    const breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    const breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\n\n    const breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    const breaksAfter = Array(breaksAfterCount + 1).join('\\n');\n\n    // Replaces the current selection with the quote mark up\n    api.replaceSelection(`${breaksBefore}> ${state1.selectedText}${breaksAfter}`);\n\n    const selectionStart = state1.selection.start + breaksBeforeCount + 2;\n    const selectionEnd = selectionStart + state1.selectedText.length;\n\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd,\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}