{"ast":null,"code":"'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n  constructor(host, opts) {\n    super(host);\n    this.posTracker = null;\n    this.onParseError = opts.onParseError;\n  }\n\n  _setErrorLocation(err) {\n    err.startLine = err.endLine = this.posTracker.line;\n    err.startCol = err.endCol = this.posTracker.col;\n    err.startOffset = err.endOffset = this.posTracker.offset;\n  }\n\n  _reportError(code) {\n    const err = {\n      code: code,\n      startLine: -1,\n      startCol: -1,\n      startOffset: -1,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    };\n\n    this._setErrorLocation(err);\n\n    this.onParseError(err);\n  }\n\n  _getOverriddenMethods(mxn) {\n    return {\n      _err(code) {\n        mxn._reportError(code);\n      }\n\n    };\n  }\n\n}\n\nmodule.exports = ErrorReportingMixinBase;","map":{"version":3,"names":["Mixin","require","ErrorReportingMixinBase","constructor","host","opts","posTracker","onParseError","_setErrorLocation","err","startLine","endLine","line","startCol","endCol","col","startOffset","endOffset","offset","_reportError","code","_getOverriddenMethods","mxn","_err","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js"],"sourcesContent":["'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AAEA,MAAMC,uBAAN,SAAsCF,KAAtC,CAA4C;EACxCG,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;IACpB,MAAMD,IAAN;IAEA,KAAKE,UAAL,GAAkB,IAAlB;IACA,KAAKC,YAAL,GAAoBF,IAAI,CAACE,YAAzB;EACH;;EAEDC,iBAAiB,CAACC,GAAD,EAAM;IACnBA,GAAG,CAACC,SAAJ,GAAgBD,GAAG,CAACE,OAAJ,GAAc,KAAKL,UAAL,CAAgBM,IAA9C;IACAH,GAAG,CAACI,QAAJ,GAAeJ,GAAG,CAACK,MAAJ,GAAa,KAAKR,UAAL,CAAgBS,GAA5C;IACAN,GAAG,CAACO,WAAJ,GAAkBP,GAAG,CAACQ,SAAJ,GAAgB,KAAKX,UAAL,CAAgBY,MAAlD;EACH;;EAEDC,YAAY,CAACC,IAAD,EAAO;IACf,MAAMX,GAAG,GAAG;MACRW,IAAI,EAAEA,IADE;MAERV,SAAS,EAAE,CAAC,CAFJ;MAGRG,QAAQ,EAAE,CAAC,CAHH;MAIRG,WAAW,EAAE,CAAC,CAJN;MAKRL,OAAO,EAAE,CAAC,CALF;MAMRG,MAAM,EAAE,CAAC,CAND;MAORG,SAAS,EAAE,CAAC;IAPJ,CAAZ;;IAUA,KAAKT,iBAAL,CAAuBC,GAAvB;;IACA,KAAKF,YAAL,CAAkBE,GAAlB;EACH;;EAEDY,qBAAqB,CAACC,GAAD,EAAM;IACvB,OAAO;MACHC,IAAI,CAACH,IAAD,EAAO;QACPE,GAAG,CAACH,YAAJ,CAAiBC,IAAjB;MACH;;IAHE,CAAP;EAKH;;AAnCuC;;AAsC5CI,MAAM,CAACC,OAAP,GAAiBvB,uBAAjB"},"metadata":{},"sourceType":"script"}