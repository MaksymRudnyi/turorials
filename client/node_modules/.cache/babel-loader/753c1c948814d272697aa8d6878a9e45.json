{"ast":null,"code":"'use strict';\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n// undocumented cb() API, needed for core, not for public API\n\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","map":{"version":3,"names":["pna","require","destroy","err","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","errorEmitted","nextTick","emitErrorNT","_destroy","undestroy","reading","ended","endEmitted","ending","finished","self","emit","module","exports"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js"],"sourcesContent":["'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,sBAAD,CAAjB;AACA;AAEA;;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,EAAtB,EAA0B;EACxB,IAAIC,KAAK,GAAG,IAAZ;;EAEA,IAAIC,iBAAiB,GAAG,KAAKC,cAAL,IAAuB,KAAKA,cAAL,CAAoBC,SAAnE;EACA,IAAIC,iBAAiB,GAAG,KAAKC,cAAL,IAAuB,KAAKA,cAAL,CAAoBF,SAAnE;;EAEA,IAAIF,iBAAiB,IAAIG,iBAAzB,EAA4C;IAC1C,IAAIL,EAAJ,EAAQ;MACNA,EAAE,CAACD,GAAD,CAAF;IACD,CAFD,MAEO,IAAIA,GAAG,KAAK,CAAC,KAAKO,cAAN,IAAwB,CAAC,KAAKA,cAAL,CAAoBC,YAAlD,CAAP,EAAwE;MAC7EX,GAAG,CAACY,QAAJ,CAAaC,WAAb,EAA0B,IAA1B,EAAgCV,GAAhC;IACD;;IACD,OAAO,IAAP;EACD,CAbuB,CAexB;EACA;;;EAEA,IAAI,KAAKI,cAAT,EAAyB;IACvB,KAAKA,cAAL,CAAoBC,SAApB,GAAgC,IAAhC;EACD,CApBuB,CAsBxB;;;EACA,IAAI,KAAKE,cAAT,EAAyB;IACvB,KAAKA,cAAL,CAAoBF,SAApB,GAAgC,IAAhC;EACD;;EAED,KAAKM,QAAL,CAAcX,GAAG,IAAI,IAArB,EAA2B,UAAUA,GAAV,EAAe;IACxC,IAAI,CAACC,EAAD,IAAOD,GAAX,EAAgB;MACdH,GAAG,CAACY,QAAJ,CAAaC,WAAb,EAA0BR,KAA1B,EAAiCF,GAAjC;;MACA,IAAIE,KAAK,CAACK,cAAV,EAA0B;QACxBL,KAAK,CAACK,cAAN,CAAqBC,YAArB,GAAoC,IAApC;MACD;IACF,CALD,MAKO,IAAIP,EAAJ,EAAQ;MACbA,EAAE,CAACD,GAAD,CAAF;IACD;EACF,CATD;;EAWA,OAAO,IAAP;AACD;;AAED,SAASY,SAAT,GAAqB;EACnB,IAAI,KAAKR,cAAT,EAAyB;IACvB,KAAKA,cAAL,CAAoBC,SAApB,GAAgC,KAAhC;IACA,KAAKD,cAAL,CAAoBS,OAApB,GAA8B,KAA9B;IACA,KAAKT,cAAL,CAAoBU,KAApB,GAA4B,KAA5B;IACA,KAAKV,cAAL,CAAoBW,UAApB,GAAiC,KAAjC;EACD;;EAED,IAAI,KAAKR,cAAT,EAAyB;IACvB,KAAKA,cAAL,CAAoBF,SAApB,GAAgC,KAAhC;IACA,KAAKE,cAAL,CAAoBO,KAApB,GAA4B,KAA5B;IACA,KAAKP,cAAL,CAAoBS,MAApB,GAA6B,KAA7B;IACA,KAAKT,cAAL,CAAoBU,QAApB,GAA+B,KAA/B;IACA,KAAKV,cAAL,CAAoBC,YAApB,GAAmC,KAAnC;EACD;AACF;;AAED,SAASE,WAAT,CAAqBQ,IAArB,EAA2BlB,GAA3B,EAAgC;EAC9BkB,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmBnB,GAAnB;AACD;;AAEDoB,MAAM,CAACC,OAAP,GAAiB;EACftB,OAAO,EAAEA,OADM;EAEfa,SAAS,EAAEA;AAFI,CAAjB"},"metadata":{},"sourceType":"script"}