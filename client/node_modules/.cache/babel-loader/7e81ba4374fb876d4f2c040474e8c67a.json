{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Preview = props => {\n  var {\n    editorProps\n  } = props;\n  var {\n    containerEditor,\n    preview,\n    previewWidth = '50%'\n  } = editorProps;\n  var [visible, setVisible] = useState(props.editorProps.visible);\n  useEffect(() => setVisible(props.editorProps.visible), [props.editorProps.visible]);\n  useEffect(() => {\n    if (preview.current) {\n      var $preview = preview.current;\n\n      if (preview) {\n        $preview.style.borderBottomRightRadius = '3px';\n      }\n\n      if ($preview && visible) {\n        $preview.style.width = previewWidth;\n        $preview.style.overflow = 'auto';\n\n        if (previewWidth !== '100%') {\n          $preview.style.borderLeft = '1px solid var(--color-border-muted)';\n        }\n\n        $preview.style.padding = '20px';\n\n        if (containerEditor.current) {\n          containerEditor.current.style.width = \"calc(100% - \" + previewWidth + \")\";\n        }\n      } else if ($preview) {\n        $preview.style.width = '0%';\n        $preview.style.overflow = 'hidden';\n        $preview.style.borderLeft = '0px';\n        $preview.style.padding = '0';\n\n        if (containerEditor.current) {\n          containerEditor.current.style.width = '100%';\n        }\n      }\n    }\n  }, [visible, containerEditor, preview, previewWidth]);\n  return /*#__PURE__*/_jsx(\"button\", {\n    onClick: () => setVisible(!visible),\n    type: \"button\",\n    className: visible ? 'active' : '',\n    children: props.command.icon\n  });\n};\n\nexport var preview = {\n  name: 'preview',\n  keyCommand: 'preview',\n  button: (command, props, opts) => /*#__PURE__*/_jsx(Preview, {\n    command: command,\n    editorProps: _extends({}, props, opts)\n  }),\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    fill: \"currentColor\",\n    viewBox: \"0 0 576 512\",\n    height: \"16\",\n    width: \"16\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M279.6 160.4c2.8-.3 5.6-.4 8.4-.4 53 0 96 42.1 96 96 0 53-43 96-96 96-53.9 0-96-43-96-96 0-2.8.1-5.6.4-8.4 9.3 4.5 20.1 8.4 31.6 8.4 35.3 0 64-28.7 64-64 0-11.5-3.9-22.3-8.4-31.6zm201-47.8c46.8 43.4 78.1 94.5 92.9 131.1 3.3 7.9 3.3 16.7 0 24.6-14.8 35.7-46.1 86.8-92.9 131.1C433.5 443.2 368.8 480 288 480s-145.5-36.8-192.58-80.6C48.62 355.1 17.34 304 2.461 268.3a31.967 31.967 0 0 1 0-24.6C17.34 207.1 48.62 156 95.42 112.6 142.5 68.84 207.2 32 288 32c80.8 0 145.5 36.84 192.6 80.6zM288 112c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z\"\n    })\n  })\n};","map":{"version":3,"sources":["../../src/commands/preview.tsx"],"names":["Preview","props","editorProps","previewWidth","useState","useEffect","setVisible","preview","$preview","containerEditor","visible","icon","name","keyCommand","button"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ICommand } from './';\nimport { IMarkdownEditor, ToolBarProps } from '../';\n\nconst Preview: React.FC<{ command: ICommand; editorProps: IMarkdownEditor & ToolBarProps }> = (props) => {\n  const { editorProps } = props;\n  const { containerEditor, preview, previewWidth = '50%' } = editorProps;\n  const [visible, setVisible] = useState(props.editorProps.visible);\n  useEffect(() => setVisible(props.editorProps.visible), [props.editorProps.visible]);\n  useEffect(() => {\n    if (preview.current) {\n      const $preview = preview.current;\n      if (preview) {\n        $preview.style.borderBottomRightRadius = '3px';\n      }\n      if ($preview && visible) {\n        $preview.style.width = previewWidth;\n        $preview.style.overflow = 'auto';\n        if (previewWidth !== '100%') {\n          $preview.style.borderLeft = '1px solid var(--color-border-muted)';\n        }\n        $preview.style.padding = '20px';\n        if (containerEditor.current) {\n          containerEditor.current.style.width = `calc(100% - ${previewWidth})`;\n        }\n      } else if ($preview) {\n        $preview.style.width = '0%';\n        $preview.style.overflow = 'hidden';\n        $preview.style.borderLeft = '0px';\n        $preview.style.padding = '0';\n        if (containerEditor.current) {\n          containerEditor.current.style.width = '100%';\n        }\n      }\n    }\n  }, [visible, containerEditor, preview, previewWidth]);\n\n  return (\n    <button onClick={() => setVisible(!visible)} type=\"button\" className={visible ? 'active' : ''}>\n      {props.command.icon}\n    </button>\n  );\n};\n\nexport const preview: ICommand = {\n  name: 'preview',\n  keyCommand: 'preview',\n  button: (command, props, opts) => <Preview command={command} editorProps={{ ...props, ...opts }} />,\n  icon: (\n    <svg fill=\"currentColor\" viewBox=\"0 0 576 512\" height=\"16\" width=\"16\">\n      <path d=\"M279.6 160.4c2.8-.3 5.6-.4 8.4-.4 53 0 96 42.1 96 96 0 53-43 96-96 96-53.9 0-96-43-96-96 0-2.8.1-5.6.4-8.4 9.3 4.5 20.1 8.4 31.6 8.4 35.3 0 64-28.7 64-64 0-11.5-3.9-22.3-8.4-31.6zm201-47.8c46.8 43.4 78.1 94.5 92.9 131.1 3.3 7.9 3.3 16.7 0 24.6-14.8 35.7-46.1 86.8-92.9 131.1C433.5 443.2 368.8 480 288 480s-145.5-36.8-192.58-80.6C48.62 355.1 17.34 304 2.461 268.3a31.967 31.967 0 0 1 0-24.6C17.34 207.1 48.62 156 95.42 112.6 142.5 68.84 207.2 32 288 32c80.8 0 145.5 36.84 192.6 80.6zM288 112c-79.5 0-144 64.5-144 144s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z\" />\n    </svg>\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}