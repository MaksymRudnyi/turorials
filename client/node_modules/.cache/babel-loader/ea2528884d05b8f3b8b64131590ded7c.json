{"ast":null,"code":"function words(str) {\n  var obj = {},\n      words = str.split(\" \");\n\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n  return obj;\n}\n\nconst parserConfig = {\n  name: \"ttcn-cfg\",\n  keywords: words(\"Yes No LogFile FileMask ConsoleMask AppendFile\" + \" TimeStampFormat LogEventTypes SourceInfoFormat\" + \" LogEntityName LogSourceInfo DiskFullAction\" + \" LogFileNumber LogFileSize MatchingHints Detailed\" + \" Compact SubCategories Stack Single None Seconds\" + \" DateTime Time Stop Error Retry Delete TCPPort KillTimer\" + \" NumHCs UnixSocketsEnabled LocalAddress\"),\n  fileNCtrlMaskOptions: words(\"TTCN_EXECUTOR TTCN_ERROR TTCN_WARNING\" + \" TTCN_PORTEVENT TTCN_TIMEROP TTCN_VERDICTOP\" + \" TTCN_DEFAULTOP TTCN_TESTCASE TTCN_ACTION\" + \" TTCN_USER TTCN_FUNCTION TTCN_STATISTICS\" + \" TTCN_PARALLEL TTCN_MATCHING TTCN_DEBUG\" + \" EXECUTOR ERROR WARNING PORTEVENT TIMEROP\" + \" VERDICTOP DEFAULTOP TESTCASE ACTION USER\" + \" FUNCTION STATISTICS PARALLEL MATCHING DEBUG\" + \" LOG_ALL LOG_NOTHING ACTION_UNQUALIFIED\" + \" DEBUG_ENCDEC DEBUG_TESTPORT\" + \" DEBUG_UNQUALIFIED DEFAULTOP_ACTIVATE\" + \" DEFAULTOP_DEACTIVATE DEFAULTOP_EXIT\" + \" DEFAULTOP_UNQUALIFIED ERROR_UNQUALIFIED\" + \" EXECUTOR_COMPONENT EXECUTOR_CONFIGDATA\" + \" EXECUTOR_EXTCOMMAND EXECUTOR_LOGOPTIONS\" + \" EXECUTOR_RUNTIME EXECUTOR_UNQUALIFIED\" + \" FUNCTION_RND FUNCTION_UNQUALIFIED\" + \" MATCHING_DONE MATCHING_MCSUCCESS\" + \" MATCHING_MCUNSUCC MATCHING_MMSUCCESS\" + \" MATCHING_MMUNSUCC MATCHING_PCSUCCESS\" + \" MATCHING_PCUNSUCC MATCHING_PMSUCCESS\" + \" MATCHING_PMUNSUCC MATCHING_PROBLEM\" + \" MATCHING_TIMEOUT MATCHING_UNQUALIFIED\" + \" PARALLEL_PORTCONN PARALLEL_PORTMAP\" + \" PARALLEL_PTC PARALLEL_UNQUALIFIED\" + \" PORTEVENT_DUALRECV PORTEVENT_DUALSEND\" + \" PORTEVENT_MCRECV PORTEVENT_MCSEND\" + \" PORTEVENT_MMRECV PORTEVENT_MMSEND\" + \" PORTEVENT_MQUEUE PORTEVENT_PCIN\" + \" PORTEVENT_PCOUT PORTEVENT_PMIN\" + \" PORTEVENT_PMOUT PORTEVENT_PQUEUE\" + \" PORTEVENT_STATE PORTEVENT_UNQUALIFIED\" + \" STATISTICS_UNQUALIFIED STATISTICS_VERDICT\" + \" TESTCASE_FINISH TESTCASE_START\" + \" TESTCASE_UNQUALIFIED TIMEROP_GUARD\" + \" TIMEROP_READ TIMEROP_START TIMEROP_STOP\" + \" TIMEROP_TIMEOUT TIMEROP_UNQUALIFIED\" + \" USER_UNQUALIFIED VERDICTOP_FINAL\" + \" VERDICTOP_GETVERDICT VERDICTOP_SETVERDICT\" + \" VERDICTOP_UNQUALIFIED WARNING_UNQUALIFIED\"),\n  externalCommands: words(\"BeginControlPart EndControlPart BeginTestCase\" + \" EndTestCase\"),\n  multiLineStrings: true\n};\nvar keywords = parserConfig.keywords,\n    fileNCtrlMaskOptions = parserConfig.fileNCtrlMaskOptions,\n    externalCommands = parserConfig.externalCommands,\n    multiLineStrings = parserConfig.multiLineStrings,\n    indentStatements = parserConfig.indentStatements !== false;\nvar isOperatorChar = /[\\|]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n\n  if (/[:=]/.test(ch)) {\n    curPunc = ch;\n    return \"punctuation\";\n  }\n\n  if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n\n  if (ch == \"[\") {\n    stream.eatWhile(/[\\w_\\]]/);\n    return \"number\";\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n  if (fileNCtrlMaskOptions.propertyIsEnumerable(cur)) return \"atom\";\n  if (externalCommands.propertyIsEnumerable(cur)) return \"deleted\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false,\n        next,\n        end = false;\n\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        var afterNext = stream.peek(); //look if the character if the quote is like the B in '10100010'B\n\n        if (afterNext) {\n          afterNext = afterNext.toLowerCase();\n          if (afterNext == \"b\" || afterNext == \"h\" || afterNext == \"o\") stream.next();\n        }\n\n        end = true;\n        break;\n      }\n\n      escaped = !escaped && next == \"\\\\\";\n    }\n\n    if (end || !(escaped || multiLineStrings)) state.tokenize = null;\n    return \"string\";\n  };\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\") indent = state.context.indented;\n  return state.context = new Context(indent, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n  return state.context = state.context.prev;\n} //Interface\n\n\nexport const ttcnCfg = {\n  startState: function () {\n    return {\n      tokenize: null,\n      context: new Context(0, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n  token: function (stream, state) {\n    var ctx = state.context;\n\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") {\n      popContext(state);\n    } else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n\n      if (ctx.type == \"}\") ctx = popContext(state);\n\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    } else if (curPunc == ctx.type) popContext(state);else if (indentStatements && ((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';' || ctx.type == \"statement\" && curPunc == \"newstatement\")) pushContext(state, stream.column(), \"statement\");\n\n    state.startOfLine = false;\n    return style;\n  },\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {\n      line: \"#\"\n    }\n  }\n};","map":{"version":3,"names":["words","str","obj","split","i","length","parserConfig","name","keywords","fileNCtrlMaskOptions","externalCommands","multiLineStrings","indentStatements","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","afterNext","peek","toLowerCase","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","ttcnCfg","startState","startOfLine","token","ctx","sol","indentation","eatSpace","style","languageData","indentOnInput","commentTokens","line"],"sources":["C:/Users/apinto2/Desktop/teswordtomd/12 setembro/UPLOAD 9/turorials/client/node_modules/@codemirror/legacy-modes/mode/ttcn-cfg.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i)\n    obj[words[i]] = true;\n  return obj;\n}\n\nconst parserConfig = {\n  name: \"ttcn-cfg\",\n  keywords: words(\"Yes No LogFile FileMask ConsoleMask AppendFile\" +\n                  \" TimeStampFormat LogEventTypes SourceInfoFormat\" +\n                  \" LogEntityName LogSourceInfo DiskFullAction\" +\n                  \" LogFileNumber LogFileSize MatchingHints Detailed\" +\n                  \" Compact SubCategories Stack Single None Seconds\" +\n                  \" DateTime Time Stop Error Retry Delete TCPPort KillTimer\" +\n                  \" NumHCs UnixSocketsEnabled LocalAddress\"),\n  fileNCtrlMaskOptions: words(\"TTCN_EXECUTOR TTCN_ERROR TTCN_WARNING\" +\n                              \" TTCN_PORTEVENT TTCN_TIMEROP TTCN_VERDICTOP\" +\n                              \" TTCN_DEFAULTOP TTCN_TESTCASE TTCN_ACTION\" +\n                              \" TTCN_USER TTCN_FUNCTION TTCN_STATISTICS\" +\n                              \" TTCN_PARALLEL TTCN_MATCHING TTCN_DEBUG\" +\n                              \" EXECUTOR ERROR WARNING PORTEVENT TIMEROP\" +\n                              \" VERDICTOP DEFAULTOP TESTCASE ACTION USER\" +\n                              \" FUNCTION STATISTICS PARALLEL MATCHING DEBUG\" +\n                              \" LOG_ALL LOG_NOTHING ACTION_UNQUALIFIED\" +\n                              \" DEBUG_ENCDEC DEBUG_TESTPORT\" +\n                              \" DEBUG_UNQUALIFIED DEFAULTOP_ACTIVATE\" +\n                              \" DEFAULTOP_DEACTIVATE DEFAULTOP_EXIT\" +\n                              \" DEFAULTOP_UNQUALIFIED ERROR_UNQUALIFIED\" +\n                              \" EXECUTOR_COMPONENT EXECUTOR_CONFIGDATA\" +\n                              \" EXECUTOR_EXTCOMMAND EXECUTOR_LOGOPTIONS\" +\n                              \" EXECUTOR_RUNTIME EXECUTOR_UNQUALIFIED\" +\n                              \" FUNCTION_RND FUNCTION_UNQUALIFIED\" +\n                              \" MATCHING_DONE MATCHING_MCSUCCESS\" +\n                              \" MATCHING_MCUNSUCC MATCHING_MMSUCCESS\" +\n                              \" MATCHING_MMUNSUCC MATCHING_PCSUCCESS\" +\n                              \" MATCHING_PCUNSUCC MATCHING_PMSUCCESS\" +\n                              \" MATCHING_PMUNSUCC MATCHING_PROBLEM\" +\n                              \" MATCHING_TIMEOUT MATCHING_UNQUALIFIED\" +\n                              \" PARALLEL_PORTCONN PARALLEL_PORTMAP\" +\n                              \" PARALLEL_PTC PARALLEL_UNQUALIFIED\" +\n                              \" PORTEVENT_DUALRECV PORTEVENT_DUALSEND\" +\n                              \" PORTEVENT_MCRECV PORTEVENT_MCSEND\" +\n                              \" PORTEVENT_MMRECV PORTEVENT_MMSEND\" +\n                              \" PORTEVENT_MQUEUE PORTEVENT_PCIN\" +\n                              \" PORTEVENT_PCOUT PORTEVENT_PMIN\" +\n                              \" PORTEVENT_PMOUT PORTEVENT_PQUEUE\" +\n                              \" PORTEVENT_STATE PORTEVENT_UNQUALIFIED\" +\n                              \" STATISTICS_UNQUALIFIED STATISTICS_VERDICT\" +\n                              \" TESTCASE_FINISH TESTCASE_START\" +\n                              \" TESTCASE_UNQUALIFIED TIMEROP_GUARD\" +\n                              \" TIMEROP_READ TIMEROP_START TIMEROP_STOP\" +\n                              \" TIMEROP_TIMEOUT TIMEROP_UNQUALIFIED\" +\n                              \" USER_UNQUALIFIED VERDICTOP_FINAL\" +\n                              \" VERDICTOP_GETVERDICT VERDICTOP_SETVERDICT\" +\n                              \" VERDICTOP_UNQUALIFIED WARNING_UNQUALIFIED\"),\n  externalCommands: words(\"BeginControlPart EndControlPart BeginTestCase\" +\n                          \" EndTestCase\"),\n  multiLineStrings: true\n}\n\nvar keywords = parserConfig.keywords,\n    fileNCtrlMaskOptions = parserConfig.fileNCtrlMaskOptions,\n    externalCommands = parserConfig.externalCommands,\n    multiLineStrings = parserConfig.multiLineStrings,\n    indentStatements = parserConfig.indentStatements !== false;\nvar isOperatorChar = /[\\|]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[:=]/.test(ch)) {\n    curPunc = ch;\n    return \"punctuation\";\n  }\n  if (ch == \"#\"){\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  if (ch == \"[\"){\n    stream.eatWhile(/[\\w_\\]]/);\n    return \"number\";\n  }\n\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n  if (fileNCtrlMaskOptions.propertyIsEnumerable(cur))\n    return \"atom\";\n  if (externalCommands.propertyIsEnumerable(cur)) return \"deleted\";\n\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped){\n        var afterNext = stream.peek();\n        //look if the character if the quote is like the B in '10100010'B\n        if (afterNext){\n          afterNext = afterNext.toLowerCase();\n          if(afterNext == \"b\" || afterNext == \"h\" || afterNext == \"o\")\n            stream.next();\n        }\n        end = true; break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = null;\n    return \"string\";\n  };\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n//Interface\nexport const ttcnCfg = {\n  startState: function() {\n    return {\n      tokenize: null,\n      context: new Context(0, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n        && ctx.type == \"statement\"){\n      popContext(state);\n    }\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (indentStatements && (((ctx.type == \"}\" || ctx.type == \"top\")\n                                   && curPunc != ';') || (ctx.type == \"statement\"\n                                                          && curPunc == \"newstatement\")))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    return style;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}